{"ast":null,"code":"var _jsxFileName = \"D:\\\\blackjack\\\\front-end\\\\src\\\\components\\\\UI\\\\Input\\\\Input.js\";\nimport React from 'react';\nimport classes from './Input.css';\n\nfunction isInvalid(_ref) {\n  var valid = _ref.valid,\n      touched = _ref.touched,\n      shouldValidate = _ref.shouldValidate;\n  return !valid && shouldValidate && touched;\n}\n\nvar Input = function Input(props) {\n  var inputType = props.type || 'text';\n  var cls = [classes.Input];\n  var htmlForm = \"\".concat(inputType, \"-\").concat(Math.random());\n\n  if (isInvalid(props)) {\n    cls.push(classes.invalid);\n  }\n\n  return React.createElement(\"div\", {\n    className: cls.join(' '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlform: htmlForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, props.label), React.createElement(\"input\", {\n    type: inputType,\n    id: htmlForm,\n    value: props.value,\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), isInvalid(props) ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, props.errorMessage || 'Введите верное значение') : null);\n};\n\nexport default Input;","map":{"version":3,"sources":["D:\\blackjack\\front-end\\src\\components\\UI\\Input\\Input.js"],"names":["React","classes","isInvalid","valid","touched","shouldValidate","Input","props","inputType","type","cls","htmlForm","Math","random","push","invalid","join","label","value","onChange","errorMessage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,SAASC,SAAT,OAAoD;AAAA,MAAhCC,KAAgC,QAAhCA,KAAgC;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;AAAA,MAAhBC,cAAgB,QAAhBA,cAAgB;AACnD,SAAO,CAACF,KAAD,IAAUE,cAAV,IAA4BD,OAAnC;AACA;;AAED,IAAME,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAG;AAErB,MAAMC,SAAS,GAAGD,KAAK,CAACE,IAAN,IAAc,MAAhC;AACA,MAAMC,GAAG,GAAG,CAACT,OAAO,CAACK,KAAT,CAAZ;AACA,MAAMK,QAAQ,aAAMH,SAAN,cAAmBI,IAAI,CAACC,MAAL,EAAnB,CAAd;;AAEA,MAAGX,SAAS,CAACK,KAAD,CAAZ,EAAoB;AACnBG,IAAAA,GAAG,CAACI,IAAJ,CAASb,OAAO,CAACc,OAAjB;AACA;;AAED,SACC;AAAK,IAAA,SAAS,EAAEL,GAAG,CAACM,IAAJ,CAAS,GAAT,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAO,IAAA,QAAQ,EAAEL,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BJ,KAAK,CAACU,KAAlC,CADD,EAEC;AACC,IAAA,IAAI,EAAET,SADP;AAEC,IAAA,EAAE,EAAEG,QAFL;AAGC,IAAA,KAAK,EAAEJ,KAAK,CAACW,KAHd;AAIC,IAAA,QAAQ,EAAEX,KAAK,CAACY,QAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EASEjB,SAAS,CAACK,KAAD,CAAT,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,KAAK,CAACa,YAAN,IAAsB,yBAA7B,CADF,GAEE,IAXJ,CADD;AAgBA,CA1BD;;AA4BA,eAAed,KAAf","sourcesContent":["import React from 'react'\nimport classes from './Input.css'\n\nfunction isInvalid({valid, touched, shouldValidate}){\n\treturn !valid && shouldValidate && touched\n}\n\nconst Input = props =>{\n\n\tconst inputType = props.type || 'text'\n\tconst cls = [classes.Input]\n\tconst htmlForm = `${inputType}-${Math.random()}`\n\n\tif(isInvalid(props)){\n\t\tcls.push(classes.invalid)\n\t}\n\n\treturn(\n\t\t<div className={cls.join(' ')}>\n\t\t\t<label htmlform={htmlForm}>{props.label}</label>\n\t\t\t<input \n\t\t\t\ttype={inputType}\n\t\t\t\tid={htmlForm}\n\t\t\t\tvalue={props.value}\n\t\t\t\tonChange={props.onChange}\n\t\t\t/>\n\t\t\t{\n\t\t\t\tisInvalid(props)\n\t\t\t\t? <span>{props.errorMessage || 'Введите верное значение'}</span>\n\t\t\t\t: null\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default Input"]},"metadata":{},"sourceType":"module"}