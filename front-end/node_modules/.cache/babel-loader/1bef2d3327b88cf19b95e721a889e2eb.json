{"ast":null,"code":"import _classCallCheck from \"D:\\\\C#\\\\react-blackjack\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\C#\\\\react-blackjack\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\C#\\\\react-blackjack\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\C#\\\\react-blackjack\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\C#\\\\react-blackjack\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\C#\\\\react-blackjack\\\\front-end\\\\src\\\\containers\\\\PlayTable\\\\PlayTable.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport './PlayTable.css';\nimport Dibs from '../../components/Dibs/Dibs';\nimport DibsBet from '../../components/Dibs/DibsBet';\nimport Rate from '../../components/Rate/Rate';\nimport Enemy from '../../components/Enemy/Enemy';\nimport PlayButton from '../../components/UI/PlayButton/PlayButton';\nimport Button from '../../components/UI/Button/Button';\nimport Timer from '../../components/UI/Timer/Timer';\nimport EnemyHand from '../../components/EnemyHand/EnemyHand';\nimport PlayerHand from '../../components/PlayerHand/PlayerHand';\nimport { userBet as _userBet, onPlayHandler as _onPlayHandler, onEnoughHandler as _onEnoughHandler, onMoreHandler as _onMoreHandler, setActivePlayer as _setActivePlayer } from '../../store/actions/playTable';\nimport Chat from '../../components/UI/Chat/Chat';\nimport PlayConnection, { connection, playHubProxy } from '../../Hubs/PlayTableHub';\nvar userId, enemyId;\n\nvar PlayTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlayTable, _Component);\n\n  function PlayTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PlayTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlayTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLogout: false,\n      isFold: false,\n      isCheck: false,\n      isRaise: false\n    };\n\n    _this.isLogout = function () {\n      localStorage.removeItem('userId');\n\n      _this.setState({\n        isLogout: true\n      });\n\n      connection.stop();\n    };\n\n    _this.onCreateDibHandler = function (value) {\n      var bet;\n      var cash;\n      bet = _this.props.bet + parseInt(value);\n      cash = _this.props.cash - parseInt(value);\n      var enableBet = _this.props.id === _this.props.activePlayerId;\n\n      if (bet !== 0 && cash >= 0 && _this.props.playerHandSum === 0 && (enableBet && bet <= _this.props.enemyCash + _this.props.enemyBet && _this.props.betCount > 0 || enemyId === -1)) {\n        var dibs = _this.props.dibsBet;\n\n        while (value > 0) {\n          if (value >= 200) {\n            dibs.push(parseInt(200));\n            value -= 200;\n          } else if (value >= 100) {\n            dibs.push(parseInt(100));\n            value -= 100;\n          } else if (value >= 50) {\n            dibs.push(parseInt(50));\n            value -= 50;\n          } else if (value >= 25) {\n            dibs.push(parseInt(25));\n            value -= 25;\n          } else if (value >= 5) {\n            dibs.push(parseInt(5));\n            value -= 5;\n          } else if (value >= 1) {\n            dibs.push(parseInt(1));\n            value -= 1;\n          }\n        }\n\n        _this.props.userBet(bet, cash, dibs);\n\n        if (localStorage.getItem('enemyId') !== '-1') {\n          if (connection.state === 1) playHubProxy.invoke('userBet', cash, bet, dibs);\n        }\n      }\n    };\n\n    _this.onSend = function (value) {\n      if (connection.state === 1) playHubProxy.invoke('gameChat', userId, value);\n    };\n\n    _this.playOffer = function () {\n      var isBet = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (connection.state === 1) {\n        var betCount = _this.props.betCount;\n\n        if (_this.props.bet > 0 && isBet) {\n          betCount--;\n        }\n\n        _this.props.setActivePlayer(enemyId, isBet, betCount);\n\n        playHubProxy.invoke('playOffer', userId, isBet);\n      }\n    };\n\n    _this.onFold = function () {\n      console.log('fold');\n    };\n\n    _this.onCheck = function () {\n      if (connection.state === 1) {\n        var difference = _this.props.enemyBet - _this.props.bet;\n\n        _this.onCreateDibHandler(difference);\n\n        _this.playOffer(false);\n\n        _this.props.onPlayHandler();\n      }\n    };\n\n    _this.onRaise = function () {\n      _this.playOffer();\n    };\n\n    _this.onMore = function () {\n      if (enemyId === -1) {\n        _this.props.onMoreHandler();\n      } else if (connection.state === 1) {\n        _this.props.onMoreHandler();\n\n        playHubProxy.invoke('moreCards');\n      }\n    };\n\n    _this.onEnough = function () {\n      if (enemyId === -1) {\n        _this.props.onEnoughHandler();\n      } else if (connection.state === 1) {\n        _this.props.onEnoughHandler();\n\n        playHubProxy.invoke('enoughCards', _this.props.playerHand, _this.props.playerHandSum);\n\n        _this.playOffer(false);\n      }\n    };\n\n    _this.endGame = function () {\n      if (enemyId !== -1) {\n        if (connection.state === 1) playHubProxy.invoke('stopGame', userId);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(PlayTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      userId = parseInt(localStorage.getItem('userId'));\n      enemyId = parseInt(localStorage.getItem('enemyId'));\n\n      if (localStorage.getItem('userId') == null) {\n        this.setState({\n          isLogout: true\n        });\n      } else {\n        this.setState({\n          isLogout: false\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLogout) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        });\n      }\n\n      var enableBet = this.props.id === this.props.activePlayerId;\n      var difference = this.props.enemyBet - this.props.bet;\n      return React.createElement(\"div\", {\n        className: \"PlayTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(PlayConnection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(Rate, {\n        bet: this.props.bet,\n        cash: this.props.cash,\n        name: this.props.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), enemyId !== -1 ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Enemy, {\n        bet: this.props.enemyBet,\n        cash: this.props.enemyCash,\n        name: this.props.enemyName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(Chat, {\n        UserName: this.props.name,\n        Messages: this.props.messages,\n        onSend: this.onSend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      })) : null, React.createElement(EnemyHand, {\n        enemyCardsCount: this.props.enemyCardsCount,\n        enemyHand: this.props.enemyHand,\n        enemyHandSum: this.props.enemyHandSum,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(DibsBet, {\n        userDibsBet: this.props.dibsBet,\n        enemyDibsBet: this.props.enemyDibsBet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(Timer, {\n        enableBet: enableBet,\n        time: this.props.time,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(PlayerHand, {\n        playerHand: this.props.playerHand,\n        playerHandSum: this.props.playerHandSum,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(Dibs, {\n        dibs: this.props.dibs,\n        onDibCLick: this.onCreateDibHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), React.createElement(PlayButton, {\n        onFold: this.onFold,\n        onCheck: this.onCheck,\n        onRaise: this.onRaise,\n        disabledFold: !enableBet,\n        disabledCheck: !(difference <= this.props.cash && difference >= 0 && enableBet),\n        disabledRaise: !(this.props.bet > this.props.enemyBet && enableBet),\n        onPlay: this.props.onPlayHandler,\n        onEnough: this.onEnough,\n        onMore: this.onMore,\n        disabledPlay: !this.props.isPlay,\n        disabledEnough: !this.props.isEnough,\n        disabledMore: !this.props.isMore,\n        isBet: this.props.isBet,\n        enemyId: enemyId,\n        enableBet: enableBet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"PlayTableButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"success\",\n        onClick: this.endGame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\")), React.createElement(Button, {\n        type: \"error\",\n        onClick: this.isLogout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"\\u0412\\u044B\\u0445\\u043E\\u0434\"))));\n    }\n  }]);\n\n  return PlayTable;\n}(Component);\n\nfunction mapStateToProps(state) {\n  localStorage.setItem('user', JSON.stringify(state.playTable.user));\n  var dibs = state.playTable.dibs;\n  var _state$playTable$user = state.playTable.user,\n      bet = _state$playTable$user.bet,\n      cash = _state$playTable$user.cash,\n      name = _state$playTable$user.name,\n      time = _state$playTable$user.time,\n      isBet = _state$playTable$user.isBet,\n      playerHand = _state$playTable$user.playerHand,\n      playerHandSum = _state$playTable$user.playerHandSum,\n      dibsBet = _state$playTable$user.dibsBet,\n      enemyDibsBet = _state$playTable$user.enemyDibsBet,\n      enemyName = _state$playTable$user.enemyName,\n      enemyBet = _state$playTable$user.enemyBet,\n      betCount = _state$playTable$user.betCount,\n      enemyCash = _state$playTable$user.enemyCash,\n      enemyHand = _state$playTable$user.enemyHand,\n      enemyHandSum = _state$playTable$user.enemyHandSum,\n      messages = _state$playTable$user.messages,\n      isPlay = _state$playTable$user.isPlay,\n      isEnough = _state$playTable$user.isEnough,\n      isMore = _state$playTable$user.isMore,\n      activePlayerId = _state$playTable$user.activePlayerId,\n      id = _state$playTable$user.id,\n      enemyCardsCount = _state$playTable$user.enemyCardsCount,\n      backProfile = _state$playTable$user.backProfile,\n      isExit = _state$playTable$user.isExit;\n  return {\n    dibs: dibs,\n    bet: bet,\n    cash: cash,\n    name: name,\n    time: time,\n    playerHand: playerHand,\n    playerHandSum: playerHandSum,\n    isBet: isBet,\n    dibsBet: dibsBet,\n    enemyDibsBet: enemyDibsBet,\n    enemyName: enemyName,\n    enemyBet: enemyBet,\n    betCount: betCount,\n    enemyCash: enemyCash,\n    enemyHand: enemyHand,\n    enemyHandSum: enemyHandSum,\n    messages: messages,\n    isPlay: isPlay,\n    isEnough: isEnough,\n    isMore: isMore,\n    activePlayerId: activePlayerId,\n    id: id,\n    enemyCardsCount: enemyCardsCount,\n    backProfile: backProfile,\n    isExit: isExit\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    userBet: function userBet(bet, cash, dibsBet) {\n      return dispatch(_userBet(bet, cash, dibsBet));\n    },\n    setActivePlayer: function setActivePlayer(id, isBet, betCount) {\n      return dispatch(_setActivePlayer(id, isBet, betCount));\n    },\n    onPlayHandler: function onPlayHandler() {\n      return dispatch(_onPlayHandler());\n    },\n    onEnoughHandler: function onEnoughHandler() {\n      return dispatch(_onEnoughHandler());\n    },\n    onMoreHandler: function onMoreHandler() {\n      return dispatch(_onMoreHandler());\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayTable);","map":{"version":3,"sources":["D:\\C#\\react-blackjack\\front-end\\src\\containers\\PlayTable\\PlayTable.js"],"names":["React","Component","connect","NavLink","Redirect","Dibs","DibsBet","Rate","Enemy","PlayButton","Button","Timer","EnemyHand","PlayerHand","userBet","onPlayHandler","onEnoughHandler","onMoreHandler","setActivePlayer","Chat","PlayConnection","connection","playHubProxy","userId","enemyId","PlayTable","state","isLogout","isFold","isCheck","isRaise","localStorage","removeItem","setState","stop","onCreateDibHandler","value","bet","cash","props","parseInt","enableBet","id","activePlayerId","playerHandSum","enemyCash","enemyBet","betCount","dibs","dibsBet","push","getItem","invoke","onSend","playOffer","isBet","onFold","console","log","onCheck","difference","onRaise","onMore","onEnough","playerHand","endGame","name","enemyName","messages","enemyCardsCount","enemyHand","enemyHandSum","enemyDibsBet","time","isPlay","isEnough","isMore","mapStateToProps","setItem","JSON","stringify","playTable","user","backProfile","isExit","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {NavLink, Redirect} from 'react-router-dom'\nimport './PlayTable.css'\nimport Dibs from '../../components/Dibs/Dibs'\nimport DibsBet from '../../components/Dibs/DibsBet'\nimport Rate from '../../components/Rate/Rate'\nimport Enemy from '../../components/Enemy/Enemy'\nimport PlayButton from '../../components/UI/PlayButton/PlayButton'\nimport Button from '../../components/UI/Button/Button'\nimport Timer from '../../components/UI/Timer/Timer'\nimport EnemyHand from '../../components/EnemyHand/EnemyHand'\nimport PlayerHand from '../../components/PlayerHand/PlayerHand'\nimport {userBet, \n        onPlayHandler,\n        onEnoughHandler,\n        onMoreHandler,\n        setActivePlayer,\n        } from '../../store/actions/playTable'\n\nimport Chat from '../../components/UI/Chat/Chat'\nimport PlayConnection, {connection, playHubProxy} from '../../Hubs/PlayTableHub'\n\nvar userId, enemyId;\n\nclass PlayTable extends Component {\n    state = {\n        isLogout: false,\n        isFold: false,\n        isCheck: false,\n        isRaise: false\n    }\n\n    isLogout = () => {\n        localStorage.removeItem('userId');\n        this.setState({\n            isLogout: true\n        });\n        connection.stop();\n    }\n    \n    onCreateDibHandler = value =>{\n        let bet;\n        let cash;\n        bet = (this.props.bet) + parseInt(value);\n        cash = (this.props.cash) - parseInt(value);\n        let enableBet = this.props.id === this.props.activePlayerId;\n        if(bet !== 0 && cash >= 0 && this.props.playerHandSum === 0 && ((enableBet && bet <= this.props.enemyCash + this.props.enemyBet && this.props.betCount > 0) || \n            enemyId === -1)){            \n            var dibs = this.props.dibsBet;\n            while(value > 0){\n                if(value >= 200){\n                    dibs.push(parseInt(200));\n                    value -= 200;\n                } else if(value >= 100){\n                    dibs.push(parseInt(100));\n                    value -= 100;\n                } else if(value >= 50){\n                    dibs.push(parseInt(50));\n                    value -= 50;\n                } else if(value >= 25){\n                    dibs.push(parseInt(25));\n                    value -= 25;\n                } else if(value >= 5){\n                    dibs.push(parseInt(5));\n                    value -= 5;\n                } else if(value >= 1){\n                    dibs.push(parseInt(1));\n                    value -= 1;\n                }\n            }\n            this.props.userBet(bet, cash, dibs);\n            \n            if(localStorage.getItem('enemyId') !== '-1'){\n                if(connection.state === 1)\n                    playHubProxy.invoke('userBet', cash, bet, dibs);\n            }\n        }\n    }\n\n    componentDidMount(){\n        userId = parseInt(localStorage.getItem('userId'));\n        enemyId = parseInt(localStorage.getItem('enemyId'));\n\n        if(localStorage.getItem('userId') == null){\n            this.setState({\n                isLogout: true\n            });\n        } else {\n            this.setState({\n                isLogout: false\n            });\n        }\n    }\n\n    componentWillUnmount(){\n    }\n\n    onSend = (value) =>{\n        if(connection.state === 1)\n            playHubProxy.invoke('gameChat', userId, value);\n    }\n\n    playOffer = (isBet = true) =>{\n        if(connection.state === 1){\n            let betCount = this.props.betCount;\n            if(this.props.bet > 0 && isBet){\n                betCount--;\n            }\n            this.props.setActivePlayer(enemyId, isBet, betCount);\n            playHubProxy.invoke('playOffer', userId, isBet);\n        }\n    }\n\n    onFold = () =>{\n        console.log('fold');\n    }\n\n    onCheck = () =>{\n        if(connection.state === 1){\n            var difference = this.props.enemyBet - this.props.bet;\n            this.onCreateDibHandler(difference);\n            this.playOffer(false);\n            this.props.onPlayHandler();\n        }\n    }\n\n    onRaise = () =>{\n        this.playOffer();\n    }\n\n    onMore = () =>{\n        if(enemyId === -1){\n            this.props.onMoreHandler();\n        } else if(connection.state === 1){\n            this.props.onMoreHandler();\n            playHubProxy.invoke('moreCards');\n        }\n    }\n\n    onEnough = () =>{\n        if(enemyId === -1){\n            this.props.onEnoughHandler();\n        } else if(connection.state === 1){\n            this.props.onEnoughHandler();\n            playHubProxy.invoke('enoughCards', this.props.playerHand, this.props.playerHandSum);\n            this.playOffer(false);\n        }\n    }\n\n    endGame = () =>{\n        if(enemyId !== -1){\n            if(connection.state === 1)\n                playHubProxy.invoke('stopGame', userId);\n        }\n    }\n\n    render(){\n        if(this.state.isLogout){\n            return (<Redirect to='/' />)\n        }\n        let enableBet = this.props.id === this.props.activePlayerId;\n        let difference = this.props.enemyBet - this.props.bet;\n        return(\n            <div className=\"PlayTable\">\n                <div className=\"Container\">\n                    <PlayConnection/>\n                    <Rate\n                        bet={this.props.bet}\n                        cash={this.props.cash}\n                        name={this.props.name}\n                    />\n                    {enemyId !== -1 ?\n                        <div>\n                            <Enemy \n                                bet={this.props.enemyBet}\n                                cash={this.props.enemyCash}\n                                name={this.props.enemyName}\n                            /> \n                            <Chat\n                                UserName={this.props.name}\n                                Messages={this.props.messages}\n                                onSend={this.onSend}\n                            />\n                        </div> : null\n                    }\n                    <EnemyHand \n                        enemyCardsCount={this.props.enemyCardsCount}\n                        enemyHand={this.props.enemyHand}\n                        enemyHandSum={this.props.enemyHandSum}\n                    />\n\n                    <DibsBet\n                        userDibsBet={this.props.dibsBet}\n                        enemyDibsBet={this.props.enemyDibsBet}\n                    />\n\n                    <Timer\n                        enableBet={enableBet}\n                        time={this.props.time}\n                    />\n                    <PlayerHand \n                        playerHand={this.props.playerHand}\n                        playerHandSum={this.props.playerHandSum}\n                    />\n                    <Dibs \n                        dibs={this.props.dibs}\n                        onDibCLick={this.onCreateDibHandler}\n                    />\n                    <PlayButton \n                        onFold={this.onFold}\n                        onCheck={this.onCheck}\n                        onRaise={this.onRaise}\n                        disabledFold={!enableBet}\n                        disabledCheck={!(difference <= this.props.cash && difference >= 0 && enableBet)}\n                        disabledRaise={!(this.props.bet > this.props.enemyBet && enableBet)}\n                        onPlay={this.props.onPlayHandler}\n                        onEnough={this.onEnough}\n                        onMore={this.onMore}\n                        disabledPlay={!this.props.isPlay}\n                        disabledEnough={!this.props.isEnough}\n                        disabledMore={!this.props.isMore}\n                        isBet={this.props.isBet}\n                        enemyId={enemyId}\n                        enableBet={enableBet}\n                    />\n\n                    <div className=\"PlayTableButton\">\n                        <NavLink to=\"/profile\">\n                            <Button \n                                type=\"success\" \n                                onClick={this.endGame}\n                            >Профиль</Button>\n                        </NavLink>         \n                        <Button \n                            type=\"error\"\n                            onClick={this.isLogout}\n                        >Выход</Button>\n                    </div>                   \n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    localStorage.setItem('user', JSON.stringify(state.playTable.user));\n    const { dibs } = state.playTable;\n    const { bet, cash, name, time, isBet,\n        playerHand, playerHandSum,\n        dibsBet, enemyDibsBet,\n        enemyName, enemyBet, betCount,\n        enemyCash, enemyHand, \n        enemyHandSum, messages, \n        isPlay, isEnough, isMore,\n        activePlayerId, id, enemyCardsCount,\n        backProfile, isExit } = state.playTable.user;\n    return{\n        dibs, bet, cash, name, time,\n        playerHand, playerHandSum, isBet,\n        dibsBet, enemyDibsBet,\n        enemyName, enemyBet, betCount,\n        enemyCash, enemyHand,\n        enemyHandSum, messages,\n        isPlay, isEnough, isMore,\n        activePlayerId, id, enemyCardsCount,\n        backProfile, isExit\n    };\n}\n\nfunction mapDispatchToProps(dispatch){\n    return{\n        userBet: (bet, cash, dibsBet) => dispatch(userBet(bet, cash, dibsBet)),\n        setActivePlayer: (id, isBet, betCount) => dispatch(setActivePlayer(id, isBet, betCount)),\n        onPlayHandler: () => dispatch(onPlayHandler()),\n        onEnoughHandler: () => dispatch(onEnoughHandler()),\n        onMoreHandler: () => dispatch(onMoreHandler())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayTable)"]},"metadata":{},"sourceType":"module"}