{"ast":null,"code":"import _classCallCheck from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\src\\\\containers\\\\Profile\\\\Profile.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classes from './Profile.css';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport Button from '../../components/UI/Button/Button';\nimport axios from 'axios';\nimport { getUserProfile as _getUserProfile, onConnected as _onConnected, onNewUserConnected as _onNewUserConnected, onUserDisconnected as _onUserDisconnected, onUserReady as _onUserReady } from '../../store/actions/playTable';\nimport Users from '../../components/UI/UsersList/UsersList';\nimport { connection, playHubProxy } from '../../Hubs/Hubs';\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Profile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLogout: false,\n      ready: false\n    };\n\n    _this.isLogout = function () {\n      localStorage.removeItem('userId');\n\n      _this.setState({\n        isLogout: true\n      });\n\n      connection.stop();\n      console.log('stop');\n    };\n\n    _this.acceptGame = function (e) {\n      localStorage.setItem(\"enemyId\", e.target.id);\n\n      if (_this.state.ready) {\n        _this.readyState();\n      }\n\n      playHubProxy.invoke(\"acceptGame\", localStorage.getItem('userId'), localStorage.getItem(\"enemyId\")); //connection.stop();\n\n      _this.props.history.push('/play');\n    };\n\n    _this.playWithBot = function () {\n      if (_this.state.ready) {\n        _this.readyState();\n      }\n\n      _this.props.history.push('/play');\n    };\n\n    _this.readyState = function () {\n      playHubProxy.invoke(\"ready\", localStorage.getItem('userId'), !_this.state.ready);\n\n      _this.setState({\n        ready: !_this.state.ready\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      localStorage.setItem('enemyId', -1);\n      var userId = localStorage.getItem('userId');\n      this.props.getUserProfile(userId);\n      playHubProxy.on('onConnected', function (profiles) {\n        console.log('Connected');\n        this.props.onConnected(profiles);\n      }.bind(this));\n      playHubProxy.on('onNewUserConnected', function (newUser) {\n        console.log('New user');\n        var users = this.props.users;\n        var index = users.indexOf(newUser);\n\n        if (index == -1) {\n          this.props.onNewUserConnected(newUser);\n        }\n      }.bind(this));\n      playHubProxy.on('onUserDisconnected', function (profile) {\n        if (connection != null) {\n          console.log('User disconnected');\n          this.props.onUserDisconnected(profile);\n        }\n      }.bind(this));\n\n      if (connection.state === 4) {\n        connection.start().done(function () {\n          playHubProxy.invoke('connect', userId);\n          console.log(userId);\n        });\n      }\n\n      playHubProxy.on('onUserReady', function (profile) {\n        this.props.onUserReady(profile);\n      }.bind(this));\n      playHubProxy.on('onGameAccept', function (profile) {\n        localStorage.setItem('enemyId', profile.id);\n        this.readyState(); //connection.stop();\n\n        this.props.history.push('/play');\n      }.bind(this));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      playHubProxy.off('onConnected');\n      playHubProxy.off('onNewUserConnected');\n      playHubProxy.off('onUserDisconnected');\n      playHubProxy.off('onUserReady');\n      playHubProxy.off('onGameAccept');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLogout) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          className: classes.Profile,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, this.props.user.name), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"\\u041F\\u043E\\u0447\\u0442\\u0430: \"), React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, this.props.user.email), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }), React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"\\u0421\\u0447\\u0435\\u0442: \"), React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, this.props.user.cash), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        })), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: classes.Buttons,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"success\",\n          onClick: this.playWithBot,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"\\u0418\\u0433\\u0440\\u0430\\u0442\\u044C \\u0441 \\u0431\\u043E\\u0442\\u043E\\u043C\"), React.createElement(Button, {\n          type: this.state.ready ? \"notReady\" : \"success\",\n          onClick: this.readyState,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, this.state.ready ? \"Не готов\" : \"Готов\"), React.createElement(Button, {\n          type: \"error\",\n          onClick: this.isLogout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, \"\\u0412\\u044B\\u0445\\u043E\\u0434\")), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }), React.createElement(Users, {\n          Count: this.props.count,\n          onClick: this.acceptGame,\n          Users: this.props.users,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        })));\n      }\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nfunction mapStateToProps(state) {\n  var _state$playTable = state.playTable,\n      count = _state$playTable.count,\n      users = _state$playTable.users,\n      user = _state$playTable.user;\n  return {\n    count: count,\n    users: users,\n    user: user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getUserProfile: function getUserProfile(userId) {\n      return dispatch(_getUserProfile(userId));\n    },\n    onConnected: function onConnected(profiles) {\n      return dispatch(_onConnected(profiles));\n    },\n    onNewUserConnected: function onNewUserConnected(newUser) {\n      return dispatch(_onNewUserConnected(newUser));\n    },\n    onUserDisconnected: function onUserDisconnected(profile) {\n      return dispatch(_onUserDisconnected(profile));\n    },\n    onUserReady: function onUserReady(profile) {\n      return dispatch(_onUserReady(profile));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","map":{"version":3,"sources":["D:\\C#\\blackjack_WebAPI - new\\front-end\\src\\containers\\Profile\\Profile.js"],"names":["React","Component","connect","classes","NavLink","Redirect","Button","axios","getUserProfile","onConnected","onNewUserConnected","onUserDisconnected","onUserReady","Users","connection","playHubProxy","Profile","state","isLogout","ready","localStorage","removeItem","setState","stop","console","log","acceptGame","e","setItem","target","id","readyState","invoke","getItem","props","history","push","playWithBot","userId","on","profiles","bind","newUser","users","index","indexOf","profile","start","done","off","user","name","email","cash","Buttons","count","mapStateToProps","playTable","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport classes from './Profile.css'\nimport {NavLink, Redirect} from 'react-router-dom'\nimport Button from '../../components/UI/Button/Button'\nimport axios from 'axios';\n\nimport {getUserProfile,\n        onConnected,\n        onNewUserConnected,\n        onUserDisconnected,\n        onUserReady} from '../../store/actions/playTable'\n\nimport Users from '../../components/UI/UsersList/UsersList'\n\nimport {connection, playHubProxy} from '../../Hubs/Hubs'\n\nclass Profile extends Component{\n    state = {\n        isLogout: false,\n        ready: false\n    }\n\n    isLogout = () => {\n        localStorage.removeItem('userId');\n        this.setState({\n            isLogout: true\n        });\n        connection.stop();\n        console.log('stop');\n    }\n\n    componentDidMount(){\n        localStorage.setItem('enemyId', -1);\n        const userId = localStorage.getItem('userId');\n        this.props.getUserProfile(userId);\n\n        playHubProxy.on('onConnected', function(profiles){\n            console.log('Connected');\n            this.props.onConnected(profiles);\n        }.bind(this));\n\n        playHubProxy.on('onNewUserConnected', function(newUser){\n            console.log('New user')\n            var users = this.props.users;\n            var index = users.indexOf(newUser);\n            if(index == -1){\n                this.props.onNewUserConnected(newUser);\n            }\n        }.bind(this));\n\n        playHubProxy.on('onUserDisconnected', function(profile){\n            if(connection != null){\n                console.log('User disconnected')\n                this.props.onUserDisconnected(profile);\n            }\n        }.bind(this));\n\n        if(connection.state === 4){\n            connection.start().done(function(){\n                playHubProxy.invoke('connect', userId);\n                console.log(userId);\n            });\n        }\n\n        playHubProxy.on('onUserReady', function(profile){\n            this.props.onUserReady(profile);\n        }.bind(this));\n\n        playHubProxy.on('onGameAccept', function(profile){\n            localStorage.setItem('enemyId', profile.id);\n            this.readyState();\n            //connection.stop();\n            this.props.history.push('/play');\n        }.bind(this));\n    }\n\n    componentWillUnmount(){\n        playHubProxy.off('onConnected');\n        playHubProxy.off('onNewUserConnected');\n        playHubProxy.off('onUserDisconnected');\n        playHubProxy.off('onUserReady');\n        playHubProxy.off('onGameAccept');\n    }\n\n    acceptGame = (e) => {\n        localStorage.setItem(\"enemyId\", e.target.id);\n        if(this.state.ready){\n            this.readyState();\n        }\n        playHubProxy.invoke(\"acceptGame\", localStorage.getItem('userId'), localStorage.getItem(\"enemyId\"));\n        //connection.stop();\n        this.props.history.push('/play');\n    }\n\n    playWithBot = () => {\n        if(this.state.ready){\n            this.readyState();\n        }\n        this.props.history.push('/play');\n    }\n\n    readyState = () => {\n        playHubProxy.invoke(\"ready\", localStorage.getItem('userId'), !this.state.ready);\n        this.setState({\n            ready: !this.state.ready\n        });\n    }\n\n    render(){\n        if(this.state.isLogout){\n            return (<Redirect to='/' />)\n        }else{\n            return(\n                <div className={classes.Profile}>\n                    <div>\n                        <h1>{this.props.user.name}</h1>\n                        <hr />\n                        <p>\n                            <b>Почта: </b><em>{this.props.user.email}</em><br />\n                            <b>Счет: </b><em>{this.props.user.cash}</em><br />\n                        </p>\n                        <hr />\n                        <div className={classes.Buttons}>\n                            <Button\n                                type=\"success\" \n                                onClick={this.playWithBot} \n                            >Играть с ботом</Button>\n                            <Button \n                                type={this.state.ready ? \"notReady\" : \"success\"} \n                                onClick={this.readyState} \n                            >{this.state.ready ? \"Не готов\" : \"Готов\"}</Button>\n                            <Button\n                                type=\"error\"\n                                onClick={this.isLogout} \n                            >Выход</Button>\n                        </div>\n                        <hr />\n                        <Users\n                            Count={this.props.count}\n                            onClick={this.acceptGame}\n                            Users={this.props.users}\n                        />\n                    </div>\n                </div>\n            )   \n        }\n             \n    }\n}\n\nfunction mapStateToProps(state) {\n    const { count, users, user } = state.playTable;\n    return {\n        count, users, user\n    };\n}\n\nfunction mapDispatchToProps(dispatch){\n    return{\n        getUserProfile: (userId) => dispatch(getUserProfile(userId)),\n        onConnected: (profiles) => dispatch(onConnected(profiles)),\n        onNewUserConnected: (newUser) =>dispatch(onNewUserConnected(newUser)),\n        onUserDisconnected: (profile) =>dispatch(onUserDisconnected(profile)),\n        onUserReady: (profile) =>dispatch(onUserReady(profile))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)"]},"metadata":{},"sourceType":"module"}