{"ast":null,"code":"import _classCallCheck from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport { Component } from 'react';\nimport { history } from '../store/history';\nimport { hubConnection } from 'signalr-no-jquery';\nimport { connect } from 'react-redux';\nimport { getUserProfile as _getUserProfile, onConnected as _onConnected, onNewUserConnected as _onNewUserConnected, onUserDisconnected as _onUserDisconnected, onUserReady as _onUserReady, setActivePlayer as _setActivePlayer } from '../store/actions/playTable';\nexport var connection = hubConnection('http://localhost:3001'),\n    playHubProxy = connection.createHubProxy('playHub');\n\nvar ProfileConnection =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProfileConnection, _Component);\n\n  function ProfileConnection() {\n    _classCallCheck(this, ProfileConnection);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProfileConnection).apply(this, arguments));\n  }\n\n  _createClass(ProfileConnection, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var userId = parseInt(localStorage.getItem('userId'));\n      this.props.getUserProfile(userId);\n      playHubProxy.on('onConnected', function (profiles) {\n        console.log('Connected');\n        this.props.onConnected(profiles);\n      }.bind(this));\n      playHubProxy.on('onNewUserConnected', function (newUser) {\n        console.log('New user');\n        var users = this.props.users;\n        var index = users.indexOf(newUser);\n\n        if (index === -1) {\n          this.props.onNewUserConnected(newUser);\n        }\n      }.bind(this));\n      playHubProxy.on('onUserDisconnected', function (profile) {\n        if (connection != null) {\n          console.log('User disconnected');\n          this.props.onUserDisconnected(profile);\n        }\n      }.bind(this));\n      playHubProxy.on('onUserReady', function (profile) {\n        this.props.onUserReady(profile);\n      }.bind(this));\n      playHubProxy.on('onGameAccept', function (profile) {\n        localStorage.setItem('enemyId', profile.id);\n        console.log('enemyId', profile.id);\n        this.props.setActivePlayer(profile.id);\n        playHubProxy.invoke(\"ready\", localStorage.getItem('userId'), false);\n        history.push('/play');\n      }.bind(this)); //if(connection.state === 4){\n\n      connection.start().done(function () {\n        playHubProxy.invoke('connect', userId);\n        console.log(userId);\n      }); //}\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      playHubProxy.off('onConnected');\n      playHubProxy.off('onNewUserConnected');\n      playHubProxy.off('onUserDisconnected');\n      playHubProxy.off('onUserReady');\n      playHubProxy.off('onGameAccept');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return ProfileConnection;\n}(Component);\n\nfunction mapStateToProps(state) {\n  var _state$playTable = state.playTable,\n      count = _state$playTable.count,\n      users = _state$playTable.users,\n      user = _state$playTable.user;\n  return {\n    count: count,\n    users: users,\n    user: user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getUserProfile: function getUserProfile(userId) {\n      return dispatch(_getUserProfile(userId));\n    },\n    onConnected: function onConnected(profiles) {\n      return dispatch(_onConnected(profiles));\n    },\n    setActivePlayer: function setActivePlayer(id) {\n      return dispatch(_setActivePlayer(id));\n    },\n    onNewUserConnected: function onNewUserConnected(newUser) {\n      return dispatch(_onNewUserConnected(newUser));\n    },\n    onUserDisconnected: function onUserDisconnected(profile) {\n      return dispatch(_onUserDisconnected(profile));\n    },\n    onUserReady: function onUserReady(profile) {\n      return dispatch(_onUserReady(profile));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileConnection);","map":{"version":3,"sources":["D:\\C#\\blackjack_WebAPI - new\\front-end\\src\\Hubs\\ProfileHub.js"],"names":["Component","history","hubConnection","connect","getUserProfile","onConnected","onNewUserConnected","onUserDisconnected","onUserReady","setActivePlayer","connection","playHubProxy","createHubProxy","ProfileConnection","userId","parseInt","localStorage","getItem","props","on","profiles","console","log","bind","newUser","users","index","indexOf","profile","setItem","id","invoke","push","start","done","off","mapStateToProps","state","playTable","count","user","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import {Component} from 'react'\r\n\r\nimport {history} from '../store/history'\r\n\r\nimport { hubConnection } from 'signalr-no-jquery';\r\n\r\nimport {connect} from 'react-redux'\r\n\r\nimport {getUserProfile,\r\n        onConnected,\r\n        onNewUserConnected,\r\n        onUserDisconnected,\r\n        onUserReady,\r\n        setActivePlayer} from '../store/actions/playTable'\r\n\r\nexport const connection = hubConnection('http://localhost:3001'), playHubProxy = connection.createHubProxy('playHub');\r\n\r\nclass ProfileConnection extends Component{\r\n    componentDidMount(){\r\n        const userId = parseInt(localStorage.getItem('userId'));\r\n        \r\n        this.props.getUserProfile(userId);\r\n\r\n        playHubProxy.on('onConnected', function(profiles){\r\n            console.log('Connected');\r\n            this.props.onConnected(profiles);\r\n        }.bind(this));\r\n\r\n        playHubProxy.on('onNewUserConnected', function(newUser){\r\n            console.log('New user')\r\n            var users = this.props.users;\r\n            var index = users.indexOf(newUser);\r\n            if(index === -1){\r\n                this.props.onNewUserConnected(newUser);\r\n            }\r\n        }.bind(this));\r\n\r\n        playHubProxy.on('onUserDisconnected', function(profile){\r\n            if(connection != null){\r\n                console.log('User disconnected')\r\n                this.props.onUserDisconnected(profile);\r\n            }\r\n        }.bind(this));\r\n\r\n        playHubProxy.on('onUserReady', function(profile){\r\n            this.props.onUserReady(profile);\r\n        }.bind(this));\r\n\r\n        playHubProxy.on('onGameAccept', function(profile){\r\n            localStorage.setItem('enemyId', profile.id);\r\n            console.log('enemyId', profile.id);\r\n            this.props.setActivePlayer(profile.id);\r\n            playHubProxy.invoke(\"ready\", localStorage.getItem('userId'), false);\r\n            history.push('/play');\r\n        }.bind(this));\r\n        \r\n        //if(connection.state === 4){\r\n            connection.start().done(function(){\r\n                playHubProxy.invoke('connect', userId);\r\n                console.log(userId);\r\n            });\r\n        //}\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        playHubProxy.off('onConnected');\r\n        playHubProxy.off('onNewUserConnected');\r\n        playHubProxy.off('onUserDisconnected');\r\n        playHubProxy.off('onUserReady');\r\n        playHubProxy.off('onGameAccept');\r\n    }\r\n\r\n    render(){\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { count, users, user } = state.playTable;\r\n    return {\r\n        count, users, user\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return{\r\n        getUserProfile: (userId) => dispatch(getUserProfile(userId)),\r\n        onConnected: (profiles) => dispatch(onConnected(profiles)),\r\n        setActivePlayer: (id) => dispatch(setActivePlayer(id)),\r\n        onNewUserConnected: (newUser) =>dispatch(onNewUserConnected(newUser)),\r\n        onUserDisconnected: (profile) =>dispatch(onUserDisconnected(profile)),\r\n        onUserReady: (profile) =>dispatch(onUserReady(profile))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileConnection)"]},"metadata":{},"sourceType":"module"}