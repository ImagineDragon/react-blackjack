{"ast":null,"code":"import { hubConnection } from 'signalr-no-jquery';\nimport { USER_CONNECT } from '../store/actions/actionType';\nexport var connection = hubConnection('http://localhost:3001'),\n    playHubProxy = connection.createHubProxy('playHub');\n\nfunction startConnection(params) {\n  connection.start().done(function () {\n    playHubProxy.invoke('connect', params);\n    console.log(params);\n  });\n}\n\nplayHubProxy.on('onConnected', function (profiles) {\n  console.log('Connected');\n  var count = profiles.count;\n  return {\n    type: USER_CONNECT,\n    profiles: profiles,\n    count: count // setCount = profiles.length;\n    // this.setState({\n    //     users: profiles,\n    //     count: setCount\n    // });\n\n  };\n});\nplayHubProxy.on('onNewUserConnected', function (newUser) {\n  console.log('New user'); // var users = this.state.users;\n  // var index = users.indexOf(newUser);\n  // if(index == -1){\n  //     users.push(newUser);\n  //     setCount++;\n  // }\n  // this.setState({\n  //     users: users,\n  //     count: setCount\n  // });\n});\nplayHubProxy.on('onUserDisconnected', function (profile) {\n  if (connection != null) {\n    console.log('User disconnected'); // setCount--;\n    // var users = this.state.users;\n    // for(var i = 0; i < users.length; i++){\n    //     if(users[i].id === profile.id){\n    //         users.splice(i, 1);\n    //         break;\n    //     }\n    // }     \n    // this.setState({\n    //     users: users,\n    //     count: setCount\n    // });\n  }\n});\nplayHubProxy.on('onUserReady', function (profile) {// var users = this.state.users;\n  // for(var i = 0; i < users.length; i++){\n  //     if(users[i].id === profile.id){\n  //         users[i] = profile;\n  //         break;\n  //     }\n  // }\n  // this.setState({\n  //     users: users,\n  //     count: setCount\n  // });\n});\nplayHubProxy.on('onGameAccept', function (profile) {// localStorage.setItem('enemyId', profile.id);\n  // this.readyState();\n  // //connection.stop();\n  // this.props.history.push('/play');\n});\nexport default startConnection;","map":{"version":3,"sources":["D:\\C#\\blackjack_WebAPI - new\\front-end\\src\\Hubs\\Hubs.js"],"names":["hubConnection","USER_CONNECT","connection","playHubProxy","createHubProxy","startConnection","params","start","done","invoke","console","log","on","profiles","count","type","newUser","profile"],"mappings":"AAAA,SAASA,aAAT,QAA8B,mBAA9B;AACA,SAAQC,YAAR,QAA2B,6BAA3B;AAEA,OAAO,IAAIC,UAAU,GAAGF,aAAa,CAAC,uBAAD,CAA9B;AAAA,IAAyDG,YAAY,GAAGD,UAAU,CAACE,cAAX,CAA0B,SAA1B,CAAxE;;AAEP,SAASC,eAAT,CAAyBC,MAAzB,EAAgC;AAC5BJ,EAAAA,UAAU,CAACK,KAAX,GAAmBC,IAAnB,CAAwB,YAAU;AAC9BL,IAAAA,YAAY,CAACM,MAAb,CAAoB,SAApB,EAA+BH,MAA/B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACH,GAHD;AAIH;;AAEDH,YAAY,CAACS,EAAb,CAAgB,aAAhB,EAA+B,UAASC,QAAT,EAAkB;AAC7CH,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,MAAMG,KAAK,GAAGD,QAAQ,CAACC,KAAvB;AACA,SAAO;AACHC,IAAAA,IAAI,EAAEd,YADH;AAEHY,IAAAA,QAAQ,EAARA,QAFG;AAEOC,IAAAA,KAAK,EAALA,KAFP,CAIP;AACA;AACA;AACA;AACA;;AARO,GAAP;AASH,CAZD;AAcAX,YAAY,CAACS,EAAb,CAAgB,oBAAhB,EAAsC,UAASI,OAAT,EAAiB;AACnDN,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EADmD,CAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAZD;AAcAR,YAAY,CAACS,EAAb,CAAgB,oBAAhB,EAAsC,UAASK,OAAT,EAAiB;AACnD,MAAGf,UAAU,IAAI,IAAjB,EAAsB;AAClBQ,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EADkB,CAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AACJ,CAhBD;AAkBAR,YAAY,CAACS,EAAb,CAAgB,aAAhB,EAA+B,UAASK,OAAT,EAAiB,CAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAZD;AAcAd,YAAY,CAACS,EAAb,CAAgB,cAAhB,EAAgC,UAASK,OAAT,EAAiB,CAC7C;AACA;AACA;AACA;AACH,CALD;AAOA,eAAeZ,eAAf","sourcesContent":["import { hubConnection } from 'signalr-no-jquery';\r\nimport {USER_CONNECT} from '../store/actions/actionType'\r\n\r\nexport var connection = hubConnection('http://localhost:3001'), playHubProxy = connection.createHubProxy('playHub');\r\n\r\nfunction startConnection(params){\r\n    connection.start().done(function(){\r\n        playHubProxy.invoke('connect', params);\r\n        console.log(params);\r\n    });\r\n}\r\n\r\nplayHubProxy.on('onConnected', function(profiles){\r\n    console.log('Connected');\r\n    const count = profiles.count;\r\n    return {\r\n        type: USER_CONNECT,\r\n        profiles, count\r\n    }\r\n    // setCount = profiles.length;\r\n    // this.setState({\r\n    //     users: profiles,\r\n    //     count: setCount\r\n    // });\r\n});\r\n\r\nplayHubProxy.on('onNewUserConnected', function(newUser){\r\n    console.log('New user')\r\n    // var users = this.state.users;\r\n    // var index = users.indexOf(newUser);\r\n    // if(index == -1){\r\n    //     users.push(newUser);\r\n    //     setCount++;\r\n    // }\r\n    // this.setState({\r\n    //     users: users,\r\n    //     count: setCount\r\n    // });\r\n});\r\n\r\nplayHubProxy.on('onUserDisconnected', function(profile){\r\n    if(connection != null){\r\n        console.log('User disconnected')\r\n        // setCount--;\r\n        // var users = this.state.users;\r\n        // for(var i = 0; i < users.length; i++){\r\n        //     if(users[i].id === profile.id){\r\n        //         users.splice(i, 1);\r\n        //         break;\r\n        //     }\r\n        // }     \r\n        // this.setState({\r\n        //     users: users,\r\n        //     count: setCount\r\n        // });\r\n    }\r\n});\r\n\r\nplayHubProxy.on('onUserReady', function(profile){\r\n    // var users = this.state.users;\r\n    // for(var i = 0; i < users.length; i++){\r\n    //     if(users[i].id === profile.id){\r\n    //         users[i] = profile;\r\n    //         break;\r\n    //     }\r\n    // }\r\n    // this.setState({\r\n    //     users: users,\r\n    //     count: setCount\r\n    // });\r\n});\r\n\r\nplayHubProxy.on('onGameAccept', function(profile){\r\n    // localStorage.setItem('enemyId', profile.id);\r\n    // this.readyState();\r\n    // //connection.stop();\r\n    // this.props.history.push('/play');\r\n});\r\n\r\nexport default startConnection"]},"metadata":{},"sourceType":"module"}