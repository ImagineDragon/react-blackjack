{"ast":null,"code":"/**\n * @preserve jquery-param (c) 2015 KNOWLEDGECODE | MIT\n */\n(function (global) {\n  'use strict';\n\n  var param = function param(a) {\n    var s = [],\n        rbracket = /\\[\\]$/,\n        isArray = function isArray(obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    },\n        add = function add(k, v) {\n      v = typeof v === 'function' ? v() : v === null ? '' : v === undefined ? '' : v;\n      s[s.length] = encodeURIComponent(k) + '=' + encodeURIComponent(v);\n    },\n        buildParams = function buildParams(prefix, obj) {\n      var i, len, key;\n\n      if (prefix) {\n        if (isArray(obj)) {\n          for (i = 0, len = obj.length; i < len; i++) {\n            if (rbracket.test(prefix)) {\n              add(prefix, obj[i]);\n            } else {\n              buildParams(prefix + '[' + (typeof obj[i] === 'object' ? i : '') + ']', obj[i]);\n            }\n          }\n        } else if (obj && String(obj) === '[object Object]') {\n          for (key in obj) {\n            buildParams(prefix + '[' + key + ']', obj[key]);\n          }\n        } else {\n          add(prefix, obj);\n        }\n      } else if (isArray(obj)) {\n        for (i = 0, len = obj.length; i < len; i++) {\n          add(obj[i].name, obj[i].value);\n        }\n      } else {\n        for (key in obj) {\n          buildParams(key, obj[key]);\n        }\n      }\n\n      return s;\n    };\n\n    return buildParams('', a).join('&').replace(/%20/g, '+');\n  };\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = param;\n  } else if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return param;\n    });\n  } else {\n    global.param = param;\n  }\n})(this);","map":null,"metadata":{},"sourceType":"script"}