{"ast":null,"code":"import _toConsumableArray from \"D:\\\\C#\\\\react-blackjack\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:\\\\C#\\\\react-blackjack\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { USER_PROFILE, USER_CONNECT, NEW_USER_CONNECT, USER_DISCONNECT, USER_READY, HAND_SUCCESS, DEAL_HAND, PLAY_HAND, USER_DATA_UPDATE, ENOUGH_HAND, GAME_START, ACTIVE_PLAYER, USER_BET, ENEMY_BET, TIMER, NEW_MESSAGE, DELETE_DIBS, ENEMY_GET_CARD, GAME_RESULT, GAME_END } from '../actions/actionType';\nvar user = JSON.parse(localStorage.getItem('user')) || {\n  id: -1,\n  name: '',\n  email: '',\n  bet: 0,\n  cash: 0,\n  playerHand: [],\n  playerHandSum: 0,\n  enoughCards: false,\n  dibsBet: [],\n  enemyName: '',\n  enemyBet: 0,\n  enemyCash: 0,\n  enemyCardsCount: 0,\n  enemyHand: [],\n  enemyHandSum: 0,\n  enemyDibsBet: [],\n  isBet: true,\n  activePlayerId: 0,\n  betCount: 3,\n  messages: [],\n  time: -1,\n  isPlay: false,\n  isEnough: false,\n  isMore: false\n};\nvar initialState = {\n  deck: [{\n    name: 'Ace',\n    suit: 'Hearts',\n    value: 11\n  }, {\n    name: 'Two',\n    suit: 'Hearts',\n    value: 2\n  }, {\n    name: 'Three',\n    suit: 'Hearts',\n    value: 3\n  }, {\n    name: 'Four',\n    suit: 'Hearts',\n    value: 4\n  }, {\n    name: 'Five',\n    suit: 'Hearts',\n    value: 5\n  }, {\n    name: 'Six',\n    suit: 'Hearts',\n    value: 6\n  }, {\n    name: 'Seven',\n    suit: 'Hearts',\n    value: 7\n  }, {\n    name: 'Eight',\n    suit: 'Hearts',\n    value: 8\n  }, {\n    name: 'Nine',\n    suit: 'Hearts',\n    value: 9\n  }, {\n    name: 'Ten',\n    suit: 'Hearts',\n    value: 10\n  }, {\n    name: 'Jack',\n    suit: 'Hearts',\n    value: 10\n  }, {\n    name: 'Queen',\n    suit: 'Hearts',\n    value: 10\n  }, {\n    name: 'King',\n    suit: 'Hearts',\n    value: 10\n  }, {\n    name: 'Ace',\n    suit: 'Diamonds',\n    value: 11\n  }, {\n    name: 'Two',\n    suit: 'Diamonds',\n    value: 2\n  }, {\n    name: 'Three',\n    suit: 'Diamonds',\n    value: 3\n  }, {\n    name: 'Four',\n    suit: 'Diamonds',\n    value: 4\n  }, {\n    name: 'Five',\n    suit: 'Diamonds',\n    value: 5\n  }, {\n    name: 'Six',\n    suit: 'Diamonds',\n    value: 6\n  }, {\n    name: 'Seven',\n    suit: 'Diamonds',\n    value: 7\n  }, {\n    name: 'Eight',\n    suit: 'Diamonds',\n    value: 8\n  }, {\n    name: 'Nine',\n    suit: 'Diamonds',\n    value: 9\n  }, {\n    name: 'Ten',\n    suit: 'Diamonds',\n    value: 10\n  }, {\n    name: 'Jack',\n    suit: 'Diamonds',\n    value: 10\n  }, {\n    name: 'Queen',\n    suit: 'Diamonds',\n    value: 10\n  }, {\n    name: 'King',\n    suit: 'Diamonds',\n    value: 10\n  }, {\n    name: 'Ace',\n    suit: 'Clubs',\n    value: 11\n  }, {\n    name: 'Two',\n    suit: 'Clubs',\n    value: 2\n  }, {\n    name: 'Three',\n    suit: 'Clubs',\n    value: 3\n  }, {\n    name: 'Four',\n    suit: 'Clubs',\n    value: 4\n  }, {\n    name: 'Five',\n    suit: 'Clubs',\n    value: 5\n  }, {\n    name: 'Six',\n    suit: 'Clubs',\n    value: 6\n  }, {\n    name: 'Seven',\n    suit: 'Clubs',\n    value: 7\n  }, {\n    name: 'Eight',\n    suit: 'Clubs',\n    value: 8\n  }, {\n    name: 'Nine',\n    suit: 'Clubs',\n    value: 9\n  }, {\n    name: 'Ten',\n    suit: 'Clubs',\n    value: 10\n  }, {\n    name: 'Jack',\n    suit: 'Clubs',\n    value: 10\n  }, {\n    name: 'Queen',\n    suit: 'Clubs',\n    value: 10\n  }, {\n    name: 'King',\n    suit: 'Clubs',\n    value: 10\n  }, {\n    name: 'Ace',\n    suit: 'Spades',\n    value: 11\n  }, {\n    name: 'Two',\n    suit: 'Spades',\n    value: 2\n  }, {\n    name: 'Three',\n    suit: 'Spades',\n    value: 3\n  }, {\n    name: 'Four',\n    suit: 'Spades',\n    value: 4\n  }, {\n    name: 'Five',\n    suit: 'Spades',\n    value: 5\n  }, {\n    name: 'Six',\n    suit: 'Spades',\n    value: 6\n  }, {\n    name: 'Seven',\n    suit: 'Spades',\n    value: 7\n  }, {\n    name: 'Eight',\n    suit: 'Spades',\n    value: 8\n  }, {\n    name: 'Nine',\n    suit: 'Spades',\n    value: 9\n  }, {\n    name: 'Ten',\n    suit: 'Spades',\n    value: 10\n  }, {\n    name: 'Jack',\n    suit: 'Spades',\n    value: 10\n  }, {\n    name: 'Queen',\n    suit: 'Spades',\n    value: 10\n  }, {\n    name: 'King',\n    suit: 'Spades',\n    value: 10\n  }],\n  dibs: [{\n    id: 1,\n    value: '1',\n    classView: 'blue'\n  }, {\n    id: 2,\n    value: '5',\n    classView: 'blue'\n  }, {\n    id: 3,\n    value: '25',\n    classView: 'yellow'\n  }, {\n    id: 4,\n    value: '50',\n    classView: 'yellow'\n  }, {\n    id: 5,\n    value: '100',\n    classView: 'red'\n  }, {\n    id: 6,\n    value: '200',\n    classView: 'red'\n  }],\n  users: [],\n  user: user\n};\nexport default function playReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USER_PROFILE:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          id: action.id,\n          cash: action.cash,\n          name: action.name,\n          email: action.email,\n          playerHand: [],\n          playerHandSum: 0,\n          enoughCards: false,\n          dibsBet: [],\n          enemyName: '',\n          enemyBet: 0,\n          enemyCash: 0,\n          enemyHand: [],\n          enemyHandSum: 0,\n          enemyCardsCount: 0,\n          enemyDibsBet: [],\n          isBet: true,\n          betCount: 3,\n          activePlayerId: 0,\n          messages: [],\n          time: -1\n        })\n      });\n\n    case USER_CONNECT:\n      return _objectSpread({}, state, {\n        users: action.profiles\n      });\n\n    case NEW_USER_CONNECT:\n      return _objectSpread({}, state, {\n        users: [].concat(_toConsumableArray(state.users), [action.newUser])\n      });\n\n    case USER_DISCONNECT:\n      return _objectSpread({}, state, {\n        users: state.users.filter(function (user) {\n          return user.id !== action.profile.id;\n        })\n      });\n\n    case USER_READY:\n      return _objectSpread({}, state, {\n        users: state.users.map(function (user) {\n          return user.id === action.profile.id ? action.profile : user;\n        })\n      });\n\n    case GAME_START:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          messages: action.messages,\n          cash: action.user.cash,\n          bet: action.user.bet,\n          enemyName: action.enemy.name,\n          enemyCash: action.enemy.cash,\n          enemyBet: action.enemy.bet\n        })\n      });\n\n    case ACTIVE_PLAYER:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          isBet: action.isBet,\n          activePlayerId: action.id,\n          betCount: action.betCount\n        })\n      });\n\n    case USER_BET:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          bet: action.bet,\n          cash: action.cash,\n          dibsBet: action.dibsBet,\n          isPlay: true\n        })\n      });\n\n    case ENEMY_BET:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          enemyCash: action.cash,\n          enemyBet: action.bet,\n          enemyDibsBet: action.dibsBet\n        })\n      });\n\n    case NEW_MESSAGE:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          messages: [].concat(_toConsumableArray(state.user.messages), [action.message])\n        })\n      });\n\n    case TIMER:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          time: action.time\n        })\n      });\n\n    case ENEMY_GET_CARD:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          enemyCardsCount: state.user.enemyCardsCount + 1\n        })\n      });\n\n    case DELETE_DIBS:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          dibsBet: [],\n          enemyDibsBet: [],\n          enemyCardsCount: 0,\n          enoughCards: false\n        })\n      });\n\n    case GAME_RESULT:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          enemyHand: action.enemyHand,\n          enemyHandSum: action.enemyHandSum\n        })\n      });\n\n    case GAME_END:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          bet: 0,\n          cash: action.cash,\n          playerHand: [],\n          playerHandSum: 0,\n          enoughCards: false,\n          dibsBet: [],\n          enemyBet: 0,\n          enemyCash: action.enemyCash,\n          enemyCardsCount: 0,\n          enemyHand: [],\n          enemyHandSum: 0,\n          enemyDibsBet: [],\n          betCount: 3,\n          isBet: true,\n          isEnough: false,\n          isMore: false\n        })\n      });\n\n    case USER_DATA_UPDATE:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          playerHand: [],\n          playerHandSum: 0,\n          enemyHand: [],\n          enemyHandSum: 0,\n          bet: 0,\n          cash: action.cash,\n          name: action.name\n        })\n      });\n\n    case ENOUGH_HAND:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          enoughCards: action.enoughCards,\n          isPlay: action.isPlay,\n          isEnough: action.isEnough,\n          isMore: action.isMore\n        })\n      });\n\n    case HAND_SUCCESS:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          playerHand: action.playerHand,\n          playerHandSum: action.playerHandSum,\n          enemyCardsCount: 2,\n          enemyHand: action.enemyHand,\n          enemyHandSum: action.enemyHandSum,\n          isBet: action.isBet,\n          isPlay: false,\n          isEnough: true,\n          isMore: true\n        })\n      });\n\n    case DEAL_HAND:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          enemyHand: action.enemyHand,\n          enemyHandSum: action.enemyHandSum\n        })\n      });\n\n    case PLAY_HAND:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          playerHand: action.playerHand,\n          playerHandSum: action.playerHandSum\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:\\C#\\react-blackjack\\front-end\\src\\store\\reducers\\playTable.js"],"names":["USER_PROFILE","USER_CONNECT","NEW_USER_CONNECT","USER_DISCONNECT","USER_READY","HAND_SUCCESS","DEAL_HAND","PLAY_HAND","USER_DATA_UPDATE","ENOUGH_HAND","GAME_START","ACTIVE_PLAYER","USER_BET","ENEMY_BET","TIMER","NEW_MESSAGE","DELETE_DIBS","ENEMY_GET_CARD","GAME_RESULT","GAME_END","user","JSON","parse","localStorage","getItem","id","name","email","bet","cash","playerHand","playerHandSum","enoughCards","dibsBet","enemyName","enemyBet","enemyCash","enemyCardsCount","enemyHand","enemyHandSum","enemyDibsBet","isBet","activePlayerId","betCount","messages","time","isPlay","isEnough","isMore","initialState","deck","suit","value","dibs","classView","users","playReducer","state","action","type","profiles","newUser","filter","profile","map","enemy","message"],"mappings":"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","sourcesContent":["import {USER_PROFILE,\n        USER_CONNECT,\n        NEW_USER_CONNECT,\n        USER_DISCONNECT,\n        USER_READY,\n        HAND_SUCCESS,\n        DEAL_HAND,\n        PLAY_HAND,\n        USER_DATA_UPDATE,\n        ENOUGH_HAND,\n        GAME_START,\n        ACTIVE_PLAYER,\n        USER_BET,\n        ENEMY_BET,\n        TIMER,\n        NEW_MESSAGE,\n        DELETE_DIBS,\n        ENEMY_GET_CARD,\n        GAME_RESULT,\n        GAME_END} from '../actions/actionType'\n\nlet user = JSON.parse(localStorage.getItem('user')) || {\n    id: -1,        \n    name: '',\n    email: '',\n    bet: 0,\n    cash: 0,\n    playerHand: [],\n    playerHandSum: 0,\n    enoughCards: false,\n    dibsBet: [],\n    enemyName: '',\n    enemyBet: 0,\n    enemyCash: 0,\n    enemyCardsCount: 0,\n    enemyHand: [],\n    enemyHandSum: 0,\n    enemyDibsBet: [],\n    isBet: true,\n    activePlayerId: 0,\n    betCount: 3,\n    messages: [],\n    time: -1,\n    isPlay: false,\n    isEnough: false,\n    isMore: false\n}\n\nconst initialState = {\n    deck: [\n        {\n            name: 'Ace',\n            suit: 'Hearts',\n            value: 11\n        },\n        {\n            name: 'Two',\n            suit: 'Hearts',\n            value: 2\n        },\n        {\n            name: 'Three',\n            suit: 'Hearts',\n            value: 3\n        },\n        {\n            name: 'Four',\n            suit: 'Hearts',\n            value: 4\n        },\n        {\n            name: 'Five',\n            suit: 'Hearts',\n            value: 5\n        },\n        {\n            name: 'Six',\n            suit: 'Hearts',\n            value: 6\n        },\n        {\n            name: 'Seven',\n            suit: 'Hearts',\n            value: 7\n        },\n        {\n            name: 'Eight',\n            suit: 'Hearts',\n            value: 8\n        },\n        {\n            name: 'Nine',\n            suit: 'Hearts',\n            value: 9\n        },\n        {\n            name: 'Ten',\n            suit: 'Hearts',\n            value: 10\n        },\n        {\n            name: 'Jack',\n            suit: 'Hearts',\n            value: 10\n        },\n        {\n            name: 'Queen',\n            suit: 'Hearts',\n            value: 10\n        },\n        {\n            name: 'King',\n            suit: 'Hearts',\n            value: 10\n        },\n        {\n            name: 'Ace',\n            suit: 'Diamonds',\n            value: 11\n        },\n        {\n            name: 'Two',\n            suit: 'Diamonds',\n            value: 2\n        },\n        {\n            name: 'Three',\n            suit: 'Diamonds',\n            value: 3\n        },\n        {\n            name: 'Four',\n            suit: 'Diamonds',\n            value: 4\n        },\n        {\n            name: 'Five',\n            suit: 'Diamonds',\n            value: 5\n        },\n        {\n            name: 'Six',\n            suit: 'Diamonds',\n            value: 6\n        },\n        {\n            name: 'Seven',\n            suit: 'Diamonds',\n            value: 7\n        },\n        {\n            name: 'Eight',\n            suit: 'Diamonds',\n            value: 8\n        },\n        {\n            name: 'Nine',\n            suit: 'Diamonds',\n            value: 9\n        },\n        {\n            name: 'Ten',\n            suit: 'Diamonds',\n            value: 10\n        },\n        {\n            name: 'Jack',\n            suit: 'Diamonds',\n            value: 10\n        },\n        {\n            name: 'Queen',\n            suit: 'Diamonds',\n            value: 10\n        },\n        {\n            name: 'King',\n            suit: 'Diamonds',\n            value: 10\n        },\n        {\n            name: 'Ace',\n            suit: 'Clubs',\n            value: 11\n        },\n        {\n            name: 'Two',\n            suit: 'Clubs',\n            value: 2\n        },\n        {\n            name: 'Three',\n            suit: 'Clubs',\n            value: 3\n        },\n        {\n            name: 'Four',\n            suit: 'Clubs',\n            value: 4\n        },\n        {\n            name: 'Five',\n            suit: 'Clubs',\n            value: 5\n        },\n        {\n            name: 'Six',\n            suit: 'Clubs',\n            value: 6\n        },\n        {\n            name: 'Seven',\n            suit: 'Clubs',\n            value: 7\n        },\n        {\n            name: 'Eight',\n            suit: 'Clubs',\n            value: 8\n        },\n        {\n            name: 'Nine',\n            suit: 'Clubs',\n            value: 9\n        },\n        {\n            name: 'Ten',\n            suit: 'Clubs',\n            value: 10\n        },\n        {\n            name: 'Jack',\n            suit: 'Clubs',\n            value: 10\n        },\n        {\n            name: 'Queen',\n            suit: 'Clubs',\n            value: 10\n        },\n        {\n            name: 'King',\n            suit: 'Clubs',\n            value: 10\n        },\n        {\n            name: 'Ace',\n            suit: 'Spades',\n            value: 11\n        },\n        {\n            name: 'Two',\n            suit: 'Spades',\n            value: 2\n        },\n        {\n            name: 'Three',\n            suit: 'Spades',\n            value: 3\n        },\n        {\n            name: 'Four',\n            suit: 'Spades',\n            value: 4\n        },\n        {\n            name: 'Five',\n            suit: 'Spades',\n            value: 5\n        },\n        {\n            name: 'Six',\n            suit: 'Spades',\n            value: 6\n        },\n        {\n            name: 'Seven',\n            suit: 'Spades',\n            value: 7\n        },\n        {\n            name: 'Eight',\n            suit: 'Spades',\n            value: 8\n        },\n        {\n            name: 'Nine',\n            suit: 'Spades',\n            value: 9\n        },\n        {\n            name: 'Ten',\n            suit: 'Spades',\n            value: 10\n        },\n        {\n            name: 'Jack',\n            suit: 'Spades',\n            value: 10\n        },\n        {\n            name: 'Queen',\n            suit: 'Spades',\n            value: 10\n        },\n        {\n            name: 'King',\n            suit: 'Spades',\n            value: 10\n        }\n    ],\n    dibs:[\n        {\n            id: 1,\n            value: '1',\n            classView: 'blue'\n        },\n        {\n            id: 2,\n            value: '5',\n            classView: 'blue'\n        },\n        {\n            id: 3,\n            value: '25',\n            classView: 'yellow'\n        },\n        {\n            id: 4,\n            value: '50',\n            classView: 'yellow'\n        },\n        {\n            id: 5,\n            value: '100',\n            classView: 'red'\n        },\n        {\n            id: 6,\n            value: '200',\n            classView: 'red'\n        }\n    ],\n    users: [],\n    user\n}\n\nexport default function playReducer(state = initialState, action){\n    switch(action.type){\n        case USER_PROFILE:\n            return{\n                ...state,\n                    user: {\n                        ...state.user,\n                        id: action.id,\n                        cash: action.cash,\n                        name: action.name,\n                        email: action.email,\n                        playerHand: [],\n                        playerHandSum: 0,\n                        enoughCards: false,\n                        dibsBet: [],\n                        enemyName: '',\n                        enemyBet: 0,\n                        enemyCash: 0,\n                        enemyHand: [],\n                        enemyHandSum: 0,\n                        enemyCardsCount: 0,\n                        enemyDibsBet: [],\n                        isBet: true,\n                        betCount: 3,\n                        activePlayerId: 0,\n                        messages: [],\n                        time: -1,\n                    }\n            }\n        case USER_CONNECT:\n            return{\n                ...state,\n                users: action.profiles\n            }\n        case NEW_USER_CONNECT:\n            return{\n                ...state,\n                users: [...state.users, action.newUser]\n            }\n        case USER_DISCONNECT:\n            return{\n                ...state,\n                users: state.users.filter(user => user.id !== action.profile.id)\n            }\n        case USER_READY:\n            return{\n                ...state,\n                users: state.users.map(user => user.id === action.profile.id ? action.profile : user)\n            }\n\n\n        case GAME_START:\n            return{\n                ...state,\n                user:{\n                    ...state.user,\n                    messages: action.messages,\n                    cash: action.user.cash,\n                    bet: action.user.bet,\n                    enemyName: action.enemy.name,\n                    enemyCash: action.enemy.cash,\n                    enemyBet: action.enemy.bet\n                }\n            }\n        case ACTIVE_PLAYER:\n            return{\n                ...state,\n                user:{\n                    ...state.user,\n                    isBet: action.isBet,\n                    activePlayerId: action.id,\n                    betCount: action.betCount\n                }\n            }\n        case USER_BET:\n            return{\n                ...state,\n                user:{\n                    ...state.user,\n                    bet: action.bet,\n                    cash: action.cash,\n                    dibsBet: action.dibsBet,\n                    isPlay: true\n                }\n            }\n        case ENEMY_BET:\n            return{\n                ...state,\n                user:{\n                    ...state.user,\n                    enemyCash: action.cash,\n                    enemyBet: action.bet,\n                    enemyDibsBet: action.dibsBet\n                }\n            }\n        case NEW_MESSAGE:\n            return{\n                ...state,\n                user:{\n                    ...state.user,\n                    messages: [...state.user.messages, action.message]\n                }\n            }\n        case TIMER:\n            return{\n                ...state,\n                user:{\n                    ...state.user,\n                    time: action.time\n                }\n            }\n        case ENEMY_GET_CARD:\n            return{\n                ...state,\n                user:{\n                    ...state.user,\n                    enemyCardsCount: state.user.enemyCardsCount + 1\n                }\n            }\n        case DELETE_DIBS:\n        return{\n            ...state,\n            user:{\n                ...state.user,\n                dibsBet: [],\n                enemyDibsBet:[],\n                enemyCardsCount: 0,\n                enoughCards: false\n            }\n        }\n       case GAME_RESULT:\n            return{\n                ...state,\n                user:{\n                    ...state.user,\n                    enemyHand: action.enemyHand,\n                    enemyHandSum: action.enemyHandSum\n                }\n            }\n        case GAME_END:\n            return{\n                ...state,\n                user:{\n                    ...state.user,\n                    bet: 0,\n                    cash: action.cash,\n                    playerHand: [],\n                    playerHandSum: 0,\n                    enoughCards: false,\n                    dibsBet: [],\n                    enemyBet: 0,\n                    enemyCash: action.enemyCash,\n                    enemyCardsCount: 0,\n                    enemyHand: [],\n                    enemyHandSum: 0,\n                    enemyDibsBet: [],\n                    betCount: 3,\n                    isBet: true,\n                    isEnough: false,\n                    isMore: false\n                }\n            }\n        case USER_DATA_UPDATE:            \n            return{\n                ...state,\n                user: {\n                    ...state.user,\n                    playerHand: [],\n                    playerHandSum: 0,\n                    enemyHand: [],\n                    enemyHandSum: 0,\n                    bet: 0,\n                    cash: action.cash,\n                    name: action.name\n                }\n            }\n        case ENOUGH_HAND:\n            return{\n                ...state,\n                user: {\n                    ...state.user,\n                    enoughCards: action.enoughCards,\n                    isPlay: action.isPlay,\n                    isEnough: action.isEnough,\n                    isMore: action.isMore\n                }\n            }\n        case HAND_SUCCESS:\n            return{\n                ...state,\n                user: {\n                    ...state.user,\n                    playerHand: action.playerHand,\n                    playerHandSum: action.playerHandSum,\n                    enemyCardsCount: 2,\n                    enemyHand: action.enemyHand,\n                    enemyHandSum: action.enemyHandSum,\n                    isBet: action.isBet,\n                    isPlay: false,\n                    isEnough: true,\n                    isMore: true\n                }\n            }\n        case DEAL_HAND:\n            return{\n                ...state,\n                user: {\n                    ...state.user,\n                    enemyHand: action.enemyHand,\n                    enemyHandSum: action.enemyHandSum\n                }\n            }\n        case PLAY_HAND:\n            return{\n                ...state,\n                user: {\n                    ...state.user,\n                    playerHand: action.playerHand,\n                    playerHandSum: action.playerHandSum\n                }\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}