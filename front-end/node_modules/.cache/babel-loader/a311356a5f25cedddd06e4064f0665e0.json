{"ast":null,"code":"import _objectSpread from \"D:\\\\C#\\\\react-blackjack\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"D:\\\\C#\\\\react-blackjack\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\C#\\\\react-blackjack\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { HAND_SUCCESS, DEAL_HAND, PLAY_HAND, USER_PROFILE, USER_DATA_UPDATE, ENOUGH_HAND, USER_CONNECT, NEW_USER_CONNECT, USER_DISCONNECT, USER_READY, GAME_START, ACTIVE_PLAYER, NEW_MESSAGE, TIMER, USER_BET, ENEMY_BET, DELETE_DIBS, ENEMY_GET_CARD, GAME_RESULT, GAME_END } from './actionType';\nimport axios from 'axios';\nexport function getUserProfile(userId) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var data, setStateUser, respons;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = {\n                  userId: userId\n                };\n                _context.next = 3;\n                return axios.post('http://localhost:3001/profile', data);\n\n              case 3:\n                respons = _context.sent;\n\n                if (respons.data) {\n                  setStateUser = {\n                    id: respons.data.id,\n                    cash: respons.data.cash,\n                    name: respons.data.name,\n                    email: respons.data.email\n                  };\n                  localStorage.setItem('userId', respons.data.id);\n                } else {\n                  localStorage.removeItem('userId');\n                }\n\n                dispatch(userProfile(setStateUser));\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}\nexport function userProfile(setStateUser) {\n  return _objectSpread({\n    type: USER_PROFILE\n  }, setStateUser);\n}\nexport function onConnected(profiles) {\n  return {\n    type: USER_CONNECT,\n    profiles: profiles\n  };\n}\nexport function onNewUserConnected(newUser) {\n  return {\n    type: NEW_USER_CONNECT,\n    newUser: newUser\n  };\n}\nexport function onUserDisconnected(profile) {\n  return {\n    type: USER_DISCONNECT,\n    profile: profile\n  };\n}\nexport function onUserReady(profile) {\n  return {\n    type: USER_READY,\n    profile: profile\n  };\n}\nexport function onGameStart(user, enemy, messages) {\n  return {\n    type: GAME_START,\n    user: user,\n    enemy: enemy,\n    messages: messages\n  };\n}\nexport function setActivePlayer(id) {\n  var isBet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var betCount = arguments.length > 2 ? arguments[2] : undefined;\n  return {\n    type: ACTIVE_PLAYER,\n    id: id,\n    isBet: isBet,\n    betCount: betCount\n  };\n}\nexport function userBet(bet, cash, dibsBet) {\n  return {\n    type: USER_BET,\n    bet: bet,\n    cash: cash,\n    dibsBet: dibsBet\n  };\n}\nexport function onEnemyBet(bet, cash, dibsBet) {\n  return {\n    type: ENEMY_BET,\n    bet: bet,\n    cash: cash,\n    dibsBet: dibsBet\n  };\n}\nexport function onMessage(message) {\n  return {\n    type: NEW_MESSAGE,\n    message: message\n  };\n}\nexport function onTimer(time) {\n  return {\n    type: TIMER,\n    time: time\n  };\n}\nexport function enemyGetCard() {\n  return {\n    type: ENEMY_GET_CARD\n  };\n}\nexport function gameResult(enemyHand, enemyHandSum) {\n  return {\n    type: GAME_RESULT,\n    enemyHand: enemyHand,\n    enemyHandSum: enemyHandSum\n  };\n}\nexport function gameEnd(winnerId) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n        var state, cash, enemyCash;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                state = getState().playTable;\n                setTimeout(function () {\n                  if (winnerId === -1) {\n                    alert('Победила дружба!!!!!!!!!!!!!');\n                    cash = state.user.cash + state.user.bet;\n                    enemyCash = state.user.enemyCash + state.user.enemyBet;\n                  } else if (winnerId === state.user.id) {\n                    alert('Вы выграли!!!!!!!!!!!!!');\n                    cash = state.user.cash + state.user.bet * 2;\n                    enemyCash = state.user.enemyCash;\n                  } else {\n                    alert('Вы проиграли!!!!!!!');\n                    cash = state.user.cash;\n                    enemyCash = state.user.enemyCash + state.user.enemyBet * 2;\n                  }\n\n                  var setState = {\n                    cash: cash,\n                    enemyCash: enemyCash\n                  };\n                  updateData(cash);\n                  dispatch(endGame(setState));\n                }, 600);\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n}\nexport function endGame(setState) {\n  return _objectSpread({\n    type: GAME_END\n  }, setState);\n}\nexport function userDataUpdate(setStateUser) {\n  return _objectSpread({\n    type: USER_DATA_UPDATE\n  }, setStateUser);\n}\nexport function onPlayHandler() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch, getState) {\n        var state, playerHand, playerHandSum, enemyHand, enemyHandSum, set_state;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                state = getState().playTable;\n                _context3.next = 3;\n                return [getCard(state), getCard(state)];\n\n              case 3:\n                playerHand = _context3.sent;\n                _context3.next = 6;\n                return getSum(playerHand);\n\n              case 6:\n                playerHandSum = _context3.sent;\n                _context3.next = 9;\n                return [getCard(state)];\n\n              case 9:\n                enemyHand = _context3.sent;\n                _context3.next = 12;\n                return getSum(enemyHand);\n\n              case 12:\n                enemyHandSum = _context3.sent;\n                set_state = {\n                  playerHand: playerHand,\n                  playerHandSum: playerHandSum,\n                  enemyHand: [],\n                  enemyHandSum: 0,\n                  isBet: false,\n                  isPlay: false,\n                  isEnough: true,\n                  isMore: true\n                };\n\n                if (localStorage.getItem('enemyId') === '-1') {\n                  set_state.enemyHand = enemyHand;\n                  set_state.enemyHandSum = enemyHandSum;\n                }\n\n                dispatch(handSuccess(set_state));\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x4, _x5) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n}\nexport function onMoreHandler() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch, getState) {\n        var state, playerHand, playerHandSum, play_setState;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                state = getState().playTable;\n                playerHand = state.user.playerHand;\n                _context4.next = 4;\n                return playerHand.push(getCard(state));\n\n              case 4:\n                _context4.next = 6;\n                return getSum(playerHand);\n\n              case 6:\n                playerHandSum = _context4.sent;\n                play_setState = {\n                  playerHand: playerHand,\n                  playerHandSum: playerHandSum\n                };\n                dispatch(playHand(play_setState));\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x6, _x7) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n}\nexport function onEnoughHandler() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch, getState) {\n        var set_state, state, enemyHand, enemyHandSum, deal_setState;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                set_state = {\n                  enoughCards: true,\n                  isPlay: false,\n                  isEnough: false,\n                  isMore: false\n                };\n                _context5.next = 3;\n                return dispatch(enoughHand(set_state));\n\n              case 3:\n                if (!(localStorage.getItem('enemyId') === '-1')) {\n                  _context5.next = 19;\n                  break;\n                }\n\n                state = getState().playTable;\n                enemyHand = state.user.enemyHand;\n                enemyHandSum = state.user.enemyHandSum;\n\n              case 7:\n                if (!(enemyHandSum < 17)) {\n                  _context5.next = 16;\n                  break;\n                }\n\n                _context5.next = 10;\n                return enemyHand.push(getCard(state));\n\n              case 10:\n                _context5.next = 12;\n                return getSum(enemyHand);\n\n              case 12:\n                enemyHandSum = _context5.sent;\n                deal_setState = {\n                  enemyHand: enemyHand,\n                  enemyHandSum: enemyHandSum\n                };\n                _context5.next = 7;\n                break;\n\n              case 16:\n                _context5.next = 18;\n                return dispatch(dealHand(deal_setState));\n\n              case 18:\n                dispatch(checkGameWithBot());\n\n              case 19:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x8, _x9) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n}\nexport function checkGameWithBot() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(dispatch, getState) {\n        var state, cash, set_state;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return getState().playTable.user;\n\n              case 2:\n                state = _context6.sent;\n                cash = state.cash;\n                set_state = {\n                  cash: cash,\n                  enemyCash: 0\n                };\n\n                if (state.enemyHandSum === state.playerHandSum) {\n                  setTimeout(function () {\n                    cash += state.bet;\n                    set_state.cash = cash;\n                    dispatch(endGame(set_state));\n                    dispatch(onDeletDib());\n                    alert('Победила дружба!!!!!!!!!!!!!');\n                  }, 600);\n                } else if (state.playerHandSum === 21) {\n                  setTimeout(function () {\n                    cash += state.bet * 2;\n                    set_state.cash = cash;\n                    dispatch(endGame(set_state));\n                    dispatch(onDeletDib());\n                    alert('У Вас BlackJack!!!!!!!!!!!!!');\n                  }, 600);\n                } else if (state.enemyHandSum === 21) {\n                  setTimeout(function () {\n                    dispatch(endGame(set_state));\n                    dispatch(onDeletDib());\n                    alert('У дилера BlackJack! Вы проиграли(((((');\n                  }, 600);\n                } else if (state.enemyHandSum > 21 && state.playerHandSum < state.enemyHandSum || state.playerHandSum > state.enemyHandSum && state.playerHandSum < 21) {\n                  setTimeout(function () {\n                    cash += state.bet * 2;\n                    set_state.cash = cash;\n                    dispatch(endGame(set_state));\n                    dispatch(onDeletDib());\n                    alert('Вы выграли!!!!!!!!!!!!!');\n                  }, 600);\n                } else {\n                  setTimeout(function () {\n                    dispatch(onDeletDib());\n                    dispatch(endGame(set_state));\n                    alert('Вы проиграли!!!!!!!');\n                  }, 600);\n                }\n\n              case 6:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x10, _x11) {\n        return _ref6.apply(this, arguments);\n      };\n    }()\n  );\n}\nexport function handSuccess(set_state) {\n  return _objectSpread({\n    type: HAND_SUCCESS\n  }, set_state);\n}\nexport function enoughHand(set_state) {\n  return _objectSpread({\n    type: ENOUGH_HAND\n  }, set_state);\n}\nexport function dealHand(deal_setState) {\n  return _objectSpread({\n    type: DEAL_HAND\n  }, deal_setState);\n}\nexport function playHand(play_setState) {\n  return _objectSpread({\n    type: PLAY_HAND\n  }, play_setState);\n}\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction getCard(state) {\n  return state.deck[getRandomInt(0, state.deck.length - 1)];\n}\n\nfunction getSum(hand) {\n  var sum = 0;\n\n  for (var i = 0; i < hand.length; i++) {\n    var card = hand[i];\n\n    if (card.name !== 'Ace') {\n      sum += card.value;\n    }\n  }\n\n  for (var _i = 0; _i < hand.length; _i++) {\n    var _card = hand[_i];\n\n    if (_card.name === 'Ace') {\n      if (sum > 10) {\n        sum++;\n      } else {\n        sum += _card.value;\n      }\n    }\n  }\n\n  return sum;\n}\n\nexport function onDeletDib() {\n  return {\n    type: DELETE_DIBS\n  };\n}\n\nfunction updateData(_x12) {\n  return _updateData.apply(this, arguments);\n}\n\nfunction _updateData() {\n  _updateData = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee7(cash) {\n    var userUpdate, dataUpdate;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            userUpdate = localStorage.getItem('userId');\n            dataUpdate = {\n              userUpdate: userUpdate,\n              cash: cash\n            };\n            _context7.next = 4;\n            return axios.put('http://localhost:3001/playUser', dataUpdate);\n\n          case 4:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _updateData.apply(this, arguments);\n}","map":{"version":3,"sources":["D:\\C#\\react-blackjack\\front-end\\src\\store\\actions\\playTable.js"],"names":["HAND_SUCCESS","DEAL_HAND","PLAY_HAND","USER_PROFILE","USER_DATA_UPDATE","ENOUGH_HAND","USER_CONNECT","NEW_USER_CONNECT","USER_DISCONNECT","USER_READY","GAME_START","ACTIVE_PLAYER","NEW_MESSAGE","TIMER","USER_BET","ENEMY_BET","DELETE_DIBS","ENEMY_GET_CARD","GAME_RESULT","GAME_END","axios","getUserProfile","userId","dispatch","data","post","respons","setStateUser","id","cash","name","email","localStorage","setItem","removeItem","userProfile","type","onConnected","profiles","onNewUserConnected","newUser","onUserDisconnected","profile","onUserReady","onGameStart","user","enemy","messages","setActivePlayer","isBet","betCount","userBet","bet","dibsBet","onEnemyBet","onMessage","message","onTimer","time","enemyGetCard","gameResult","enemyHand","enemyHandSum","gameEnd","winnerId","getState","state","playTable","setTimeout","alert","enemyCash","enemyBet","setState","updateData","endGame","userDataUpdate","onPlayHandler","getCard","playerHand","getSum","playerHandSum","set_state","isPlay","isEnough","isMore","getItem","handSuccess","onMoreHandler","push","play_setState","playHand","onEnoughHandler","enoughCards","enoughHand","deal_setState","dealHand","checkGameWithBot","onDeletDib","getRandomInt","min","max","Math","floor","random","deck","length","hand","sum","i","card","value","userUpdate","dataUpdate","put"],"mappings":"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","sourcesContent":["import {HAND_SUCCESS,\n        DEAL_HAND,\n        PLAY_HAND,\n        USER_PROFILE,\n        USER_DATA_UPDATE,\n        ENOUGH_HAND,\n        USER_CONNECT,\n        NEW_USER_CONNECT,\n        USER_DISCONNECT,\n        USER_READY,\n        GAME_START,\n        ACTIVE_PLAYER,\n        NEW_MESSAGE,\n        TIMER,\n        USER_BET,\n        ENEMY_BET,\n        DELETE_DIBS,\n        ENEMY_GET_CARD,\n        GAME_RESULT,\n        GAME_END} from './actionType'\nimport axios from 'axios'\n\nexport function getUserProfile(userId){\n    return async dispatch =>{\n        const data = {\n            userId: userId  \n        }\n        let setStateUser;\n        const respons = await axios.post('http://localhost:3001/profile', data);\n        if(respons.data){\n            setStateUser = {\n                id: respons.data.id,\n                cash: respons.data.cash,\n                name: respons.data.name,\n                email: respons.data.email\n            }\n            localStorage.setItem('userId', respons.data.id);\n        } else {\n            localStorage.removeItem('userId');\n        }\n\n        dispatch(userProfile(setStateUser));\n    }\n}\n\nexport function userProfile(setStateUser){\n    return{\n        type: USER_PROFILE,\n        ...setStateUser\n    }\n}\n\nexport function onConnected(profiles){\n    return {\n        type: USER_CONNECT,\n        profiles\n    }\n}\n\nexport function onNewUserConnected(newUser){\n    return {\n        type: NEW_USER_CONNECT,\n        newUser\n    }\n}\n\nexport function onUserDisconnected(profile){\n    return {\n        type: USER_DISCONNECT,\n        profile\n    }\n}\n\nexport function onUserReady(profile){\n    return {\n        type: USER_READY,\n        profile\n    }\n}\n\nexport function onGameStart(user, enemy, messages){\n    return {\n        type: GAME_START,\n        user, enemy, messages\n    }\n}\n\nexport function setActivePlayer(id, isBet = true, betCount){\n    return {\n        type: ACTIVE_PLAYER,\n        id, isBet, betCount\n    }\n}\n\nexport function userBet(bet, cash, dibsBet){\n    return {\n        type: USER_BET,\n        bet, cash, dibsBet\n    }\n}\n\nexport function onEnemyBet(bet, cash, dibsBet){\n    return {\n        type: ENEMY_BET,\n        bet, cash, dibsBet\n    }\n}\n\nexport function onMessage(message){\n    return {\n        type: NEW_MESSAGE,\n        message\n    }\n}\n\nexport function onTimer(time){\n    return {\n        type: TIMER,\n        time\n    }\n}\n\nexport function enemyGetCard(){\n    return {\n        type: ENEMY_GET_CARD\n    }\n}\n\nexport function gameResult(enemyHand, enemyHandSum){\n    return {\n        type: GAME_RESULT,\n        enemyHand, enemyHandSum\n    }\n}\n\nexport function gameEnd(winnerId){\n    return async (dispatch, getState) => {        \n        const state = getState().playTable;\n        let cash, enemyCash;\n        setTimeout(() => {\n            if(winnerId === -1){\n                alert('Победила дружба!!!!!!!!!!!!!'); \n                cash = state.user.cash + state.user.bet;\n                enemyCash = state.user.enemyCash + state.user.enemyBet;\n            }\n            else if(winnerId === state.user.id){\n                alert('Вы выграли!!!!!!!!!!!!!'); \n                cash = state.user.cash + state.user.bet * 2;\n                enemyCash = state.user.enemyCash;\n            }\n            else{\n                alert('Вы проиграли!!!!!!!');\n                cash = state.user.cash;\n                enemyCash = state.user.enemyCash + state.user.enemyBet * 2;\n            }\n            const setState = {\n                cash,\n                enemyCash\n            };\n            updateData(cash);\n            dispatch(endGame(setState));\n        }, 600); \n    }\n}\n\nexport function endGame(setState){\n    return{\n        type: GAME_END,\n        ...setState\n    }\n}\n\nexport function userDataUpdate(setStateUser){\n    return{\n        type: USER_DATA_UPDATE,\n        ...setStateUser\n    }\n}\n\nexport function onPlayHandler (){\n    return async (dispatch, getState) => {\n        const state = getState().playTable;\n        let playerHand = await [getCard(state), getCard(state)];\n        let playerHandSum = await getSum(playerHand);\n        let enemyHand = await [getCard(state)];\n        let enemyHandSum = await getSum(enemyHand);\n\n        const set_state = {\n            playerHand,\n            playerHandSum,\n            enemyHand: [],\n            enemyHandSum: 0,\n            isBet: false,\n            isPlay: false,\n            isEnough: true,\n            isMore: true\n\t\t};\n\t\t\n\t\tif(localStorage.getItem('enemyId') === '-1'){\n\t\t\tset_state.enemyHand = enemyHand;\n\t\t\tset_state.enemyHandSum = enemyHandSum;\n\t\t}\n\n        dispatch(handSuccess(set_state));\n    }\n}\n\nexport function onMoreHandler(){\n    return async (dispatch, getState) =>{\n        const state = getState().playTable;\n        let playerHand = state.user.playerHand;\n        await playerHand.push(getCard(state));\n        let playerHandSum = await getSum(playerHand);\n        const play_setState = {\n            playerHand,\n            playerHandSum\n        }\n        dispatch(playHand(play_setState));\n    }\n}\n\nexport function onEnoughHandler(){\n    return async (dispatch, getState) => {\n        const set_state = {\n            enoughCards: true,\n            isPlay: false,\n            isEnough: false,\n            isMore: false\n\t\t};\n\n\t\tawait dispatch(enoughHand(set_state));\n\t\t\n\t\tif(localStorage.getItem('enemyId') === '-1'){\n\t\t\tconst state = getState().playTable;\n\t\t\tlet enemyHand = state.user.enemyHand;\n\t\t\tlet enemyHandSum = state.user.enemyHandSum;\n\t\t\tlet deal_setState;\n\t\t\twhile(enemyHandSum < 17){\n\t\t\t\tawait enemyHand.push(getCard(state));\n\t\t\t\tenemyHandSum = await getSum(enemyHand);\n\t\t\t\tdeal_setState = {\n\t\t\t\t\tenemyHand,\n\t\t\t\t\tenemyHandSum\n\t\t\t\t}\n\t\t\t}\t\t\n\t\t\tawait dispatch(dealHand(deal_setState));\n\t\t\tdispatch(checkGameWithBot());\n\t\t}\n    }\n}\n\nexport function checkGameWithBot(){\n\treturn async (dispatch, getState) => {\n\t\tconst state = await getState().playTable.user;\n\t\tlet cash = state.cash;\n\t\tconst set_state = {\t\t\t\n\t\t\tcash,\n\t\t\tenemyCash: 0\n\t\t};\n\n\t\tif(state.enemyHandSum === state.playerHandSum){\n            setTimeout(()=>{\n                cash += state.bet;\n                set_state.cash = cash;\n                dispatch(endGame(set_state));\n                dispatch(onDeletDib());\n                alert('Победила дружба!!!!!!!!!!!!!'); \n            }, 600); \n        }else if(state.playerHandSum === 21){\n            setTimeout(()=>{\n\t\t\t\tcash += state.bet * 2;\n                set_state.cash = cash;\n                dispatch(endGame(set_state));\n                dispatch(onDeletDib());\n                alert('У Вас BlackJack!!!!!!!!!!!!!'); \n            }, 600); \n        }else if(state.enemyHandSum === 21){\n            setTimeout(()=>{\n                dispatch(endGame(set_state));\n                dispatch(onDeletDib());\n                alert('У дилера BlackJack! Вы проиграли((((('); \n            }, 600); \n        }else if((state.enemyHandSum > 21 && state.playerHandSum < state.enemyHandSum) || (state.playerHandSum > state.enemyHandSum && state.playerHandSum < 21)){\n            setTimeout(()=>{\n                cash += state.bet * 2;\n                set_state.cash = cash;\n                dispatch(endGame(set_state));\n                dispatch(onDeletDib());\n                alert('Вы выграли!!!!!!!!!!!!!'); \n            }, 600);        \n        }else {\n            setTimeout(()=>{\n                dispatch(onDeletDib());\n                dispatch(endGame(set_state));\n                alert('Вы проиграли!!!!!!!');\n            }, 600);\n        }        \n\t}\n}\n\nexport function handSuccess(set_state){\n    return{\n        type: HAND_SUCCESS,\n        ...set_state\n    }\n}\n\nexport function enoughHand(set_state){\n    return{\n        type: ENOUGH_HAND,\n        ...set_state\n    }\n}\n\nexport function dealHand(deal_setState){\n    return{\n        type: DEAL_HAND,\n        ...deal_setState\n    }\n}\n\nexport function playHand(play_setState){\n    return{\n        type: PLAY_HAND,\n        ...play_setState\n    }\n}\n\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction getCard(state){\n    return state.deck[getRandomInt(0, state.deck.length - 1)];\n}\n\nfunction getSum (hand){\n    let sum = 0;\n\n    for( let i=0; i<hand.length; i++){\n        let card = hand[i];\n        if(card.name !== 'Ace'){\n            sum += card.value;\n        }\n    }\n\n    for(let i=0; i<hand.length; i++){\n        let card = hand[i];\n        if(card.name === 'Ace'){\n            if(sum > 10){\n                sum ++;\n            }else{\n                sum += card.value;\n            }\n        }\n    }\n\n    return sum;\n}\n\nexport function onDeletDib() {\n    return{\n        type: DELETE_DIBS\n    }\n}\n\n\nasync function updateData(cash){\n    const userUpdate = localStorage.getItem('userId');\n    const dataUpdate ={\n        userUpdate, cash\n    }\n    await axios.put('http://localhost:3001/playUser', dataUpdate);\n}\n\n\n"]},"metadata":{},"sourceType":"module"}