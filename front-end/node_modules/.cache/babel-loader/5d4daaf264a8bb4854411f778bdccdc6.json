{"ast":null,"code":"import _classCallCheck from \"D:\\\\C#\\\\blackjack_WebAPI - Copy\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\C#\\\\blackjack_WebAPI - Copy\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\C#\\\\blackjack_WebAPI - Copy\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\C#\\\\blackjack_WebAPI - Copy\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\C#\\\\blackjack_WebAPI - Copy\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\C#\\\\blackjack_WebAPI - Copy\\\\front-end\\\\src\\\\containers\\\\PlayTable\\\\PlayTable.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport classes from './PlayTable.css';\nimport Dibs from '../../components/Dibs/DIbs';\nimport Rate from '../../components/Rate/Rate';\nimport Enemy from '../../components/Enemy/Enemy';\nimport PlayButton from '../../components/UI/PlayButton/PlayButton';\nimport Button from '../../components/UI/Button/Button';\nimport DealerHand from '../../components/DealerHand/DealerHand';\nimport PlayerHand from '../../components/PlayerHand/PlayerHand';\nimport { fetchMakeBet as _fetchMakeBet, onPlayHandler as _onPlayHandler, onEnoughHandler as _onEnoughHandler, onMoreHandler as _onMoreHandler, getDataUser as _getDataUser } from '../../store/actions/playTable';\nimport { connection, playHubProxy } from '../../Hubs/Hubs';\nvar userId;\nvar enemyId;\n\nvar PlayTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlayTable, _Component);\n\n  function PlayTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PlayTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlayTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLogout: false,\n      bet: 0,\n      cash: 0,\n      enemyName: '',\n      enemyBet: 0,\n      enemyCash: 0\n    };\n\n    _this.isLogout = function () {\n      localStorage.removeItem('userId');\n\n      _this.setState({\n        isLogout: true\n      });\n\n      connection.stop();\n      console.log('stop');\n    };\n\n    _this.onCreateDibHandler = function (value) {\n      var div = document.createElement('div');\n\n      switch (value) {\n        case '1':\n          div.className = classes.dib_1;\n          break;\n\n        case '5':\n          div.className = classes.dib_5;\n          break;\n\n        case '25':\n          div.className = classes.dib_25;\n          break;\n\n        case '50':\n          div.className = classes.dib_50;\n          break;\n\n        case '100':\n          div.className = classes.dib_100;\n          break;\n\n        default:\n          div.className = classes.dib_200;\n      }\n\n      div.innerHTML = value;\n      var bet = (_this.state.bet == 0 ? parseInt(_this.props.bet) : parseInt(_this.state.bet)) + parseInt(value);\n      var cash = (_this.state.cash == 0 ? parseInt(_this.props.cash) : parseInt(_this.state.cash)) - parseInt(value);\n      console.log('state bet ' + _this.state.bet);\n      console.log('props bet ' + _this.props.bet);\n      console.log('bet ' + bet);\n\n      if (bet !== 0 && cash >= 0 && _this.props.playerHandSum === 0) {\n        var isPlay = true;\n\n        _this.props.fetchMakeBet(bet, cash, isPlay);\n\n        document.getElementById('dibsBet').appendChild(div);\n        localStorage.setItem('dibsBet', document.getElementById('dibsBet').innerHTML);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(PlayTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      userId = localStorage.getItem('userId');\n      enemyId = localStorage.getItem('enemyId');\n\n      if (localStorage.getItem('dibsBet') != null) {\n        console.log(localStorage.getItem('dibsBet'));\n        document.getElementById('dibsBet').innerHTML = localStorage.getItem('dibsBet');\n      }\n\n      console.log('user = ' + userId + ' enemy = ' + enemyId);\n\n      if (userId == null) {\n        this.setState({\n          isLogout: true\n        });\n      } else {\n        this.setState({\n          isLogout: false\n        });\n      }\n\n      this.props.getDataUser(userId);\n      playHubProxy.on('onGameStart', function (user, enemy) {\n        this.setState({\n          cash: user.cash,\n          bet: user.bet,\n          enemyName: enemy.name,\n          enemyCash: enemy.cash,\n          enemyBet: enemy.bet\n        });\n      }.bind(this));\n      playHubProxy.on('onEnemyBet', function (enemy) {\n        this.setState({\n          enemyCash: enemy.cash,\n          enemyBet: enemy.bet\n        });\n      }.bind(this));\n      playHubProxy.on('onBet', function (user) {\n        this.setState({\n          cash: user.cash,\n          bet: user.bet\n        });\n      }.bind(this));\n      playHubProxy.on('onStopGame', function () {\n        this.props.history.push('/profile');\n      }.bind(this));\n\n      if (enemyId != -1) {\n        connection.start().done(function () {\n          console.log('start game');\n          playHubProxy.invoke('gameStart', userId, enemyId);\n        }.bind(this));\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.setState({\n        bet: 0,\n        cash: 0,\n        enemyName: '',\n        enemyBet: 0,\n        enemyCash: 0\n      });\n      localStorage.removeItem('dibsBet');\n\n      if (enemyId != -1) {\n        playHubProxy.invoke('stopGame', userId, enemyId);\n      }\n\n      playHubProxy.off('onGameStart');\n      playHubProxy.off('onEnemyBet');\n      playHubProxy.off('onBet');\n      playHubProxy.off('onStopGame');\n      connection.stop();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLogout) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: classes.PlayTable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, enemyId == -1 ? React.createElement(Rate, {\n        bet: this.props.bet,\n        cash: this.props.cash,\n        name: this.props.nameUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }) : React.createElement(Rate, {\n        bet: this.state.bet,\n        cash: this.state.cash,\n        name: this.props.nameUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), enemyId != -1 ? React.createElement(Enemy, {\n        bet: this.state.enemyBet,\n        cash: this.state.enemyCash,\n        name: this.state.enemyName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }) : null, React.createElement(DealerHand, {\n        dealerHand: this.props.dealerHand,\n        dealerHandSum: this.props.dealerHandSum,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"dibsBet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(PlayerHand, {\n        playerHand: this.props.playerHand,\n        playerHandSum: this.props.playerHandSum,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(Dibs, {\n        dibs: this.props.dibs,\n        onDibCLick: this.onCreateDibHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(PlayButton, {\n        onPlay: this.props.onPlayHandler,\n        onEnough: this.props.onEnoughHandler,\n        onMore: this.props.onMoreHandler,\n        disabledPlay: !this.props.isPlay,\n        disabledEnough: !this.props.isEnough,\n        disabledMore: !this.props.isMore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.Button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\")), React.createElement(Button, {\n        type: \"error\",\n        onClick: this.isLogout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"\\u0412\\u044B\\u0445\\u043E\\u0434\")));\n    }\n  }]);\n\n  return PlayTable;\n}(Component);\n\nfunction mapStateToProps(state) {\n  if (connection.state === 1 && localStorage.getItem('enemyId') != -1) {\n    console.log('userBet');\n    playHubProxy.invoke('userBet', state.playTable.cash, state.playTable.bet, localStorage.getItem('enemyId')); //----------fix!!!!!!!\n  }\n\n  console.log(state.playTable.bet);\n  return {\n    deck: state.playTable.deck,\n    dibs: state.playTable.dibs,\n    bet: state.playTable.bet,\n    cash: state.playTable.cash,\n    nameUser: state.playTable.nameUser,\n    playerHand: state.playTable.playerHand,\n    playerHandSum: state.playTable.playerHandSum,\n    dealerHand: state.playTable.dealerHand,\n    dealerHandSum: state.playTable.dealerHandSum,\n    isPlay: state.playTable.isPlay,\n    isEnough: state.playTable.isEnough,\n    isMore: state.playTable.isMore,\n    backProfile: state.playTable.backProfile,\n    isExit: state.playTable.isExit\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchMakeBet: function fetchMakeBet(bet, cash, isPlay) {\n      return dispatch(_fetchMakeBet(bet, cash, isPlay));\n    },\n    getDataUser: function getDataUser(userId) {\n      return dispatch(_getDataUser(userId));\n    },\n    onPlayHandler: function onPlayHandler() {\n      return dispatch(_onPlayHandler());\n    },\n    onEnoughHandler: function onEnoughHandler() {\n      return dispatch(_onEnoughHandler());\n    },\n    onMoreHandler: function onMoreHandler() {\n      return dispatch(_onMoreHandler());\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayTable);","map":{"version":3,"sources":["D:\\C#\\blackjack_WebAPI - Copy\\front-end\\src\\containers\\PlayTable\\PlayTable.js"],"names":["React","Component","connect","NavLink","Redirect","classes","Dibs","Rate","Enemy","PlayButton","Button","DealerHand","PlayerHand","fetchMakeBet","onPlayHandler","onEnoughHandler","onMoreHandler","getDataUser","connection","playHubProxy","userId","enemyId","PlayTable","state","isLogout","bet","cash","enemyName","enemyBet","enemyCash","localStorage","removeItem","setState","stop","console","log","onCreateDibHandler","value","div","document","createElement","className","dib_1","dib_5","dib_25","dib_50","dib_100","dib_200","innerHTML","parseInt","props","playerHandSum","isPlay","getElementById","appendChild","setItem","getItem","on","user","enemy","name","bind","history","push","start","done","invoke","off","nameUser","dealerHand","dealerHandSum","playerHand","dibs","isEnough","isMore","mapStateToProps","playTable","deck","backProfile","isExit","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {NavLink, Redirect} from 'react-router-dom'\nimport classes from './PlayTable.css'\nimport Dibs from '../../components/Dibs/DIbs'\nimport Rate from '../../components/Rate/Rate'\nimport Enemy from '../../components/Enemy/Enemy'\nimport PlayButton from '../../components/UI/PlayButton/PlayButton'\nimport Button from '../../components/UI/Button/Button'\nimport DealerHand from '../../components/DealerHand/DealerHand'\nimport PlayerHand from '../../components/PlayerHand/PlayerHand'\nimport {fetchMakeBet, \n        onPlayHandler,\n        onEnoughHandler,\n        onMoreHandler,\n        getDataUser} from '../../store/actions/playTable'\n\nimport {connection, playHubProxy} from '../../Hubs/Hubs'\n\nvar userId;\nvar enemyId;\n\nclass PlayTable extends Component {\n    state = {\n        isLogout: false,\n        bet: 0,\n        cash: 0,\n        enemyName: '',\n        enemyBet: 0,\n        enemyCash: 0\n    }\n\n    isLogout = () => {\n        localStorage.removeItem('userId');\n        this.setState({\n            isLogout: true\n        });\n        connection.stop();\n        console.log('stop');\n    }\n    \n   onCreateDibHandler = value =>{\n        let div = document.createElement('div');\n        switch(value){\n            case '1':\n                div.className = classes.dib_1 \n                break;\n            case '5':\n                div.className = classes.dib_5\n                break;\n            case '25':\n                div.className = classes.dib_25\n                break;\n            case '50':\n                div.className = classes.dib_50\n                break;\n            case '100':\n                div.className = classes.dib_100\n                break;\n            default:\n                div.className = classes.dib_200\n        }        \n        div.innerHTML = value;\n        let bet = (this.state.bet == 0 ? parseInt(this.props.bet) : parseInt(this.state.bet)) + parseInt(value);\n        let cash = (this.state.cash == 0 ? parseInt(this.props.cash) : parseInt(this.state.cash)) - parseInt(value);        \n        console.log('state bet ' + this.state.bet);\n        console.log('props bet ' + this.props.bet);\n        console.log('bet ' + bet);\n        if(bet !== 0 && cash >= 0 && this.props.playerHandSum === 0){\n            let isPlay = true;\n            this.props.fetchMakeBet(bet, cash, isPlay);\n            document.getElementById('dibsBet').appendChild(div);\n            localStorage.setItem('dibsBet', document.getElementById('dibsBet').innerHTML);\n        }                \n    }\n\n    componentDidMount(){\n        userId = localStorage.getItem('userId');\n        enemyId = localStorage.getItem('enemyId');\n        if(localStorage.getItem('dibsBet')!=null){\n            console.log(localStorage.getItem('dibsBet'));\n            document.getElementById('dibsBet').innerHTML = (localStorage.getItem('dibsBet'));\n        }\n        console.log('user = ' + userId + ' enemy = ' + enemyId);\n        if(userId == null){\n            this.setState({\n            isLogout: true\n        });\n        } else {\n            this.setState({\n                isLogout: false\n            });\n        }\n        this.props.getDataUser(userId);\n        \n        playHubProxy.on('onGameStart', function(user, enemy){\n            this.setState({\n                cash: user.cash,\n                bet: user.bet,\n                enemyName: enemy.name,\n                enemyCash: enemy.cash,\n                enemyBet: enemy.bet\n            });\n        }.bind(this));\n\n        playHubProxy.on('onEnemyBet', function(enemy){\n            this.setState({\n                enemyCash: enemy.cash,\n                enemyBet: enemy.bet\n            });\n        }.bind(this));\n\n        playHubProxy.on('onBet', function(user){                    \n            this.setState({                    \n                cash: user.cash,\n                bet: user.bet\n            });\n        }.bind(this));\n\n        playHubProxy.on('onStopGame', function(){\n            this.props.history.push('/profile');\n        }.bind(this));\n\n        if(enemyId != -1){\n            connection.start().done(function(){\n                console.log('start game');\n                playHubProxy.invoke('gameStart', userId, enemyId);\n            }.bind(this));\n        }\n    }\n\n    componentWillUnmount(){\n        this.setState({\n            bet: 0,\n            cash: 0,\n            enemyName: '',\n            enemyBet: 0,\n            enemyCash: 0\n        });\n        localStorage.removeItem('dibsBet');\n        if(enemyId != -1){\n            playHubProxy.invoke('stopGame', userId, enemyId);\n        }\n        playHubProxy.off('onGameStart');\n        playHubProxy.off('onEnemyBet');\n        playHubProxy.off('onBet');\n        playHubProxy.off('onStopGame');\n        connection.stop();\n    }\n\n        \n    render(){\n        if(this.state.isLogout){\n            return (<Redirect to='/' />)\n        }\n        return(\n            <div className={classes.PlayTable}>\n                {enemyId == -1 ?\n                    <Rate\n                        bet={this.props.bet}\n                        cash={this.props.cash}\n                        name={this.props.nameUser}\n                    /> :\n                    <Rate\n                        bet={this.state.bet}\n                        cash={this.state.cash}\n                        name={this.props.nameUser}\n                    />\n                }\n                {enemyId != -1 ?\n                    <Enemy \n                        bet={this.state.enemyBet}\n                        cash={this.state.enemyCash}\n                        name={this.state.enemyName}\n                    /> : null\n                }\n                <DealerHand \n                    dealerHand={this.props.dealerHand}\n                    dealerHandSum={this.props.dealerHandSum}\n                />\n                <div id=\"dibsBet\"></div>\n                <PlayerHand \n                    playerHand={this.props.playerHand}\n                    playerHandSum={this.props.playerHandSum}\n                />\n                <Dibs \n                    dibs={this.props.dibs}\n                    onDibCLick={this.onCreateDibHandler}\n                />\n                <PlayButton \n                    onPlay={this.props.onPlayHandler}\n                    onEnough={this.props.onEnoughHandler}\n                    onMore={this.props.onMoreHandler}\n                    disabledPlay={!this.props.isPlay}\n                    disabledEnough={!this.props.isEnough}\n                    disabledMore={!this.props.isMore}\n                /> \n                <div className={classes.Button}>\n                    <NavLink to=\"/profile\">\n                        <Button \n                            type=\"success\" \n                        >Профиль</Button>\n                    </NavLink>         \n                    <Button \n                        type=\"error\"\n                        onClick={this.isLogout}\n                    >Выход</Button>\n                </div>                   \n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    if(connection.state === 1 && localStorage.getItem('enemyId') != -1){\n        console.log('userBet');\n        playHubProxy.invoke('userBet', state.playTable.cash, state.playTable.bet, localStorage.getItem('enemyId')); //----------fix!!!!!!!\n    }\n\n    console.log(state.playTable.bet);\n\n    return{\n        deck: state.playTable.deck,\n        dibs:state.playTable.dibs,\n        bet: state.playTable.bet,\n        cash: state.playTable.cash,\n        nameUser: state.playTable.nameUser,\n        playerHand: state.playTable.playerHand,\n        playerHandSum: state.playTable.playerHandSum,\n        dealerHand: state.playTable.dealerHand,\n        dealerHandSum: state.playTable.dealerHandSum,\n        isPlay: state.playTable.isPlay,\n        isEnough: state.playTable.isEnough,\n        isMore: state.playTable.isMore,\n        backProfile: state.playTable.backProfile,\n        isExit: state.playTable.isExit\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return{\n        fetchMakeBet: (bet, cash, isPlay)=> dispatch(fetchMakeBet(bet, cash, isPlay)),\n        getDataUser: userId => dispatch(getDataUser(userId)),\n        onPlayHandler: () => dispatch(onPlayHandler()),\n        onEnoughHandler: () => dispatch(onEnoughHandler()),\n        onMoreHandler: () => dispatch(onMoreHandler())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayTable)"]},"metadata":{},"sourceType":"module"}