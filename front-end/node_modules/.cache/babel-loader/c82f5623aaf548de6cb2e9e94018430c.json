{"ast":null,"code":"import _classCallCheck from \"D:\\\\C#\\\\blackjack_WebAPI - Copy\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\C#\\\\blackjack_WebAPI - Copy\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\C#\\\\blackjack_WebAPI - Copy\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\C#\\\\blackjack_WebAPI - Copy\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\C#\\\\blackjack_WebAPI - Copy\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\C#\\\\blackjack_WebAPI - Copy\\\\front-end\\\\src\\\\containers\\\\PlayTable\\\\PlayTable.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport classes from './PlayTable.css';\nimport Dibs from '../../components/Dibs/DIbs';\nimport Rate from '../../components/Rate/Rate';\nimport Enemy from '../../components/Enemy/Enemy';\nimport PlayButton from '../../components/UI/PlayButton/PlayButton';\nimport Button from '../../components/UI/Button/Button';\nimport DealerHand from '../../components/DealerHand/DealerHand';\nimport PlayerHand from '../../components/PlayerHand/PlayerHand';\nimport { fetchMakeBet as _fetchMakeBet, onPlayHandler as _onPlayHandler, onEnoughHandler as _onEnoughHandler, onMoreHandler as _onMoreHandler, getDataUser as _getDataUser } from '../../store/actions/playTable';\nimport { connection, playHubProxy } from '../../Hubs/Hubs';\n\nvar PlayTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlayTable, _Component);\n\n  function PlayTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PlayTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlayTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLogout: false,\n      enemyName: '',\n      enemyBet: 0,\n      enemyCash: 0\n    };\n\n    _this.isLogout = function () {\n      localStorage.removeItem('userId');\n\n      _this.setState({\n        isLogout: true\n      });\n\n      connection.stop();\n      console.log('stop');\n    };\n\n    _this.onCreateDibHandler = function (value) {\n      var div = document.createElement('div');\n\n      switch (value) {\n        case '1':\n          div.className = classes.dib_1;\n          break;\n\n        case '5':\n          div.className = classes.dib_5;\n          break;\n\n        case '25':\n          div.className = classes.dib_25;\n          break;\n\n        case '50':\n          div.className = classes.dib_50;\n          break;\n\n        case '100':\n          div.className = classes.dib_100;\n          break;\n\n        default:\n          div.className = classes.dib_200;\n      }\n\n      div.innerHTML = value;\n      var bet = parseInt(_this.props.bet) + parseInt(value);\n      var cash = parseInt(_this.props.cash) - parseInt(value);\n\n      if (bet !== 0 && cash >= 0 && _this.props.playerHandSum === 0) {\n        var isPlay = true;\n\n        _this.props.fetchMakeBet(bet, cash, isPlay);\n\n        document.getElementById('dibsBet').appendChild(div);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(PlayTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var userId = localStorage.getItem('userId');\n      var enemyId = localStorage.getItem('enemyId');\n\n      if (userId == null) {\n        this.setState({\n          isLogout: true\n        });\n      } else {\n        this.setState({\n          isLogout: false\n        });\n      }\n\n      this.props.getDataUser(userId);\n      console.log('enemyId = ', +enemyId);\n      playHubProxy.on('onGameStart', function (enemy) {\n        console.log(enemy);\n        this.setState({\n          enemyName: enemy.name,\n          enemyCash: enemy.bet\n        });\n      }.bind(this));\n      connection.start().done(function () {\n        playHubProxy.invoke('GameStart', enemyId);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      playHubProxy.off('onGameStart');\n      connection.stop();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLogout) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: classes.PlayTable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Rate, {\n        bet: this.props.bet,\n        cash: this.props.cash,\n        name: this.props.nameUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(Enemy, {\n        bet: this.state.bet,\n        cash: this.state.cash,\n        name: this.state.nameUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(DealerHand, {\n        dealerHand: this.props.dealerHand,\n        dealerHandSum: this.props.dealerHandSum,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"dibsBet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(PlayerHand, {\n        playerHand: this.props.playerHand,\n        playerHandSum: this.props.playerHandSum,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(Dibs, {\n        dibs: this.props.dibs,\n        onDibCLick: this.onCreateDibHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(PlayButton, {\n        onPlay: this.props.onPlayHandler,\n        onEnough: this.props.onEnoughHandler,\n        onMore: this.props.onMoreHandler,\n        disabledPlay: !this.props.isPlay,\n        disabledEnough: !this.props.isEnough,\n        disabledMore: !this.props.isMore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.Button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\")), React.createElement(Button, {\n        type: \"error\",\n        onClick: this.isLogout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"\\u0412\\u044B\\u0445\\u043E\\u0434\")));\n    }\n  }]);\n\n  return PlayTable;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    deck: state.playTable.deck,\n    dibs: state.playTable.dibs,\n    bet: state.playTable.bet,\n    cash: state.playTable.cash,\n    nameUser: state.playTable.nameUser,\n    playerHand: state.playTable.playerHand,\n    playerHandSum: state.playTable.playerHandSum,\n    dealerHand: state.playTable.dealerHand,\n    dealerHandSum: state.playTable.dealerHandSum,\n    isPlay: state.playTable.isPlay,\n    isEnough: state.playTable.isEnough,\n    isMore: state.playTable.isMore,\n    backProfile: state.playTable.backProfile,\n    isExit: state.playTable.isExit\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchMakeBet: function fetchMakeBet(bet, cash, isPlay) {\n      return dispatch(_fetchMakeBet(bet, cash, isPlay));\n    },\n    getDataUser: function getDataUser(userId) {\n      return dispatch(_getDataUser(userId));\n    },\n    onPlayHandler: function onPlayHandler() {\n      return dispatch(_onPlayHandler());\n    },\n    onEnoughHandler: function onEnoughHandler() {\n      return dispatch(_onEnoughHandler());\n    },\n    onMoreHandler: function onMoreHandler() {\n      return dispatch(_onMoreHandler());\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayTable);","map":{"version":3,"sources":["D:\\C#\\blackjack_WebAPI - Copy\\front-end\\src\\containers\\PlayTable\\PlayTable.js"],"names":["React","Component","connect","NavLink","Redirect","classes","Dibs","Rate","Enemy","PlayButton","Button","DealerHand","PlayerHand","fetchMakeBet","onPlayHandler","onEnoughHandler","onMoreHandler","getDataUser","connection","playHubProxy","PlayTable","state","isLogout","enemyName","enemyBet","enemyCash","localStorage","removeItem","setState","stop","console","log","onCreateDibHandler","value","div","document","createElement","className","dib_1","dib_5","dib_25","dib_50","dib_100","dib_200","innerHTML","bet","parseInt","props","cash","playerHandSum","isPlay","getElementById","appendChild","userId","getItem","enemyId","on","enemy","name","bind","start","done","invoke","off","nameUser","dealerHand","dealerHandSum","playerHand","dibs","isEnough","isMore","mapStateToProps","deck","playTable","backProfile","isExit","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {NavLink, Redirect} from 'react-router-dom'\nimport classes from './PlayTable.css'\nimport Dibs from '../../components/Dibs/DIbs'\nimport Rate from '../../components/Rate/Rate'\nimport Enemy from '../../components/Enemy/Enemy'\nimport PlayButton from '../../components/UI/PlayButton/PlayButton'\nimport Button from '../../components/UI/Button/Button'\nimport DealerHand from '../../components/DealerHand/DealerHand'\nimport PlayerHand from '../../components/PlayerHand/PlayerHand'\nimport {fetchMakeBet, \n        onPlayHandler,\n        onEnoughHandler,\n        onMoreHandler,\n        getDataUser} from '../../store/actions/playTable'\n\nimport {connection, playHubProxy} from '../../Hubs/Hubs'\n\nclass PlayTable extends Component {\n    state = {\n        isLogout: false,\n        enemyName: '',\n        enemyBet: 0,\n        enemyCash: 0\n    }\n\n    isLogout = () => {\n        localStorage.removeItem('userId');\n        this.setState({\n            isLogout: true\n        });\n        connection.stop();\n        console.log('stop');\n    }\n    \n   onCreateDibHandler = value =>{\n        let div = document.createElement('div');\n        switch(value){\n            case '1':\n                div.className = classes.dib_1 \n                break;\n            case '5':\n                div.className = classes.dib_5\n                break;\n            case '25':\n                div.className = classes.dib_25\n                break;\n            case '50':\n                div.className = classes.dib_50\n                break;\n            case '100':\n                div.className = classes.dib_100\n                break;\n            default:\n                div.className = classes.dib_200\n        }        \n        div.innerHTML = value;\n        let bet = parseInt(this.props.bet) + parseInt(value);\n        let cash = parseInt(this.props.cash) - parseInt(value);\n        if(bet !== 0 && cash >= 0 && this.props.playerHandSum === 0){\n            let isPlay = true;\n            this.props.fetchMakeBet(bet, cash, isPlay);\n            document.getElementById('dibsBet').appendChild(div);\n        }\n        \n                \n    }\n\n    componentDidMount(){\n        const userId = localStorage.getItem('userId');\n        const enemyId = localStorage.getItem('enemyId');\n        if(userId == null){\n            this.setState({\n            isLogout: true\n        });\n        } else {\n            this.setState({\n                isLogout: false\n            });\n        }\n        this.props.getDataUser(userId);\n        console.log('enemyId = ', + enemyId);\n        \n        playHubProxy.on('onGameStart', function(enemy){\n            console.log(enemy);\n            this.setState({\n                enemyName: enemy.name,\n                enemyCash: enemy.bet\n            });\n        }.bind(this));\n\n        connection.start().done(function(){\n            playHubProxy.invoke('GameStart', enemyId);\n        });\n    }\n\n    componentWillUnmount(){\n        playHubProxy.off('onGameStart');\n        connection.stop();\n    }\n\n        \n    render(){\n        if(this.state.isLogout){\n            return (<Redirect to='/' />)\n        }\n        return(\n            <div className={classes.PlayTable}>\n                <Rate \n                    bet={this.props.bet}\n                    cash={this.props.cash}\n                    name={this.props.nameUser}\n                />\n                <Enemy \n                    bet={this.state.bet}\n                    cash={this.state.cash}\n                    name={this.state.nameUser}\n                />\n                <DealerHand \n                    dealerHand={this.props.dealerHand}\n                    dealerHandSum={this.props.dealerHandSum}\n                />\n                <div id=\"dibsBet\"></div>\n                <PlayerHand \n                    playerHand={this.props.playerHand}\n                    playerHandSum={this.props.playerHandSum}\n                />\n                <Dibs \n                    dibs={this.props.dibs}\n                    onDibCLick={this.onCreateDibHandler}\n                />\n                <PlayButton \n                    onPlay={this.props.onPlayHandler}\n                    onEnough={this.props.onEnoughHandler}\n                    onMore={this.props.onMoreHandler}\n                    disabledPlay={!this.props.isPlay}\n                    disabledEnough={!this.props.isEnough}\n                    disabledMore={!this.props.isMore}\n                /> \n                <div className={classes.Button}>\n                    <NavLink to=\"/profile\">\n                        <Button \n                            type=\"success\" \n                        >Профиль</Button>\n                    </NavLink>         \n                    <Button \n                        type=\"error\"\n                        onClick={this.isLogout}\n                    >Выход</Button>\n                </div>                   \n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        deck: state.playTable.deck,\n        dibs:state.playTable.dibs,\n        bet: state.playTable.bet,\n        cash: state.playTable.cash,\n        nameUser: state.playTable.nameUser,\n        playerHand: state.playTable.playerHand,\n        playerHandSum: state.playTable.playerHandSum,\n        dealerHand: state.playTable.dealerHand,\n        dealerHandSum: state.playTable.dealerHandSum,\n        isPlay: state.playTable.isPlay,\n        isEnough: state.playTable.isEnough,\n        isMore: state.playTable.isMore,\n        backProfile: state.playTable.backProfile,\n        isExit: state.playTable.isExit\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return{\n        fetchMakeBet: (bet, cash, isPlay)=> dispatch(fetchMakeBet(bet, cash, isPlay)),\n        getDataUser: userId => dispatch(getDataUser(userId)),\n        onPlayHandler: () => dispatch(onPlayHandler()),\n        onEnoughHandler: () => dispatch(onEnoughHandler()),\n        onMoreHandler: () => dispatch(onMoreHandler())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayTable)"]},"metadata":{},"sourceType":"module"}