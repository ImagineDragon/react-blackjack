{"ast":null,"code":"import { hubConnection } from 'signalr-no-jquery';\nimport { connect } from 'react-redux';\nimport { getUserProfile as _getUserProfile, onConnected as _onConnected, onNewUserConnected as _onNewUserConnected, onUserDisconnected as _onUserDisconnected, onUserReady as _onUserReady } from '../store/actions/playTable';\nexport var connection = hubConnection('http://localhost:3001'),\n    playHubProxy = connection.createHubProxy('playHub');\nexport function StartConnection(userId) {\n  if (connection.state === 4) {\n    connection.start().done(function () {\n      playHubProxy.invoke('connect', userId);\n      console.log(userId);\n    });\n  }\n\n  playHubProxy.on('onConnected', function (profiles) {\n    console.log('Connected');\n    this.props.onConnected(profiles);\n  });\n  playHubProxy.on('onNewUserConnected', function (newUser) {\n    console.log('New user');\n    var users = this.props.users;\n    var index = users.indexOf(newUser);\n\n    if (index == -1) {\n      this.props.onNewUserConnected(newUser);\n    }\n  });\n  playHubProxy.on('onUserDisconnected', function (profile) {\n    if (connection != null) {\n      console.log('User disconnected');\n      this.props.onUserDisconnected(profile);\n    }\n  });\n  playHubProxy.on('onUserReady', function (profile) {\n    this.props.onUserReady(profile);\n  });\n  playHubProxy.on('onGameAccept', function (profile) {\n    localStorage.setItem('enemyId', profile.id);\n    this.readyState(); //connection.stop();\n\n    this.props.history.push('/play');\n  });\n}\nexport function StopConnection() {\n  playHubProxy.off('onConnected');\n  playHubProxy.off('onNewUserConnected');\n  playHubProxy.off('onUserDisconnected');\n  playHubProxy.off('onUserReady');\n  playHubProxy.off('onGameAccept');\n  connection.stop();\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getUserProfile: function getUserProfile(userId) {\n      return dispatch(_getUserProfile(userId));\n    },\n    onConnected: function onConnected(profiles) {\n      return dispatch(_onConnected(profiles));\n    },\n    onNewUserConnected: function onNewUserConnected(newUser) {\n      return dispatch(_onNewUserConnected(newUser));\n    },\n    onUserDisconnected: function onUserDisconnected(profile) {\n      return dispatch(_onUserDisconnected(profile));\n    },\n    onUserReady: function onUserReady(profile) {\n      return dispatch(_onUserReady(profile));\n    }\n  };\n}\n\nexport default connect(mapDispatchToProps)(StartConnection);","map":{"version":3,"sources":["D:\\C#\\blackjack_WebAPI - new\\front-end\\src\\Hubs\\Hubs.js"],"names":["hubConnection","connect","getUserProfile","onConnected","onNewUserConnected","onUserDisconnected","onUserReady","connection","playHubProxy","createHubProxy","StartConnection","userId","state","start","done","invoke","console","log","on","profiles","props","newUser","users","index","indexOf","profile","localStorage","setItem","id","readyState","history","push","StopConnection","off","stop","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { hubConnection } from 'signalr-no-jquery';\r\n\r\nimport {connect} from 'react-redux'\r\n\r\nimport {getUserProfile,\r\n    onConnected,\r\n    onNewUserConnected,\r\n    onUserDisconnected,\r\n    onUserReady} from '../store/actions/playTable'\r\n\r\nexport const connection = hubConnection('http://localhost:3001'), playHubProxy = connection.createHubProxy('playHub');\r\n\r\nexport function StartConnection(userId){\r\n    if(connection.state === 4){\r\n        connection.start().done(function(){\r\n            playHubProxy.invoke('connect', userId);\r\n            console.log(userId);\r\n        });\r\n    }\r\n\r\n    playHubProxy.on('onConnected', function(profiles){\r\n        console.log('Connected');\r\n        this.props.onConnected(profiles);\r\n    });\r\n\r\n    playHubProxy.on('onNewUserConnected', function(newUser){\r\n        console.log('New user')\r\n        var users = this.props.users;\r\n        var index = users.indexOf(newUser);\r\n        if(index == -1){\r\n            this.props.onNewUserConnected(newUser);\r\n        }\r\n    });\r\n\r\n    playHubProxy.on('onUserDisconnected', function(profile){\r\n        if(connection != null){\r\n            console.log('User disconnected')\r\n            this.props.onUserDisconnected(profile);\r\n        }\r\n    });\r\n\r\n    playHubProxy.on('onUserReady', function(profile){\r\n        this.props.onUserReady(profile);\r\n    });\r\n\r\n    playHubProxy.on('onGameAccept', function(profile){\r\n        localStorage.setItem('enemyId', profile.id);\r\n        this.readyState();\r\n        //connection.stop();\r\n        this.props.history.push('/play');\r\n    });\r\n}\r\n\r\nexport function StopConnection(){\r\n    playHubProxy.off('onConnected');\r\n    playHubProxy.off('onNewUserConnected');\r\n    playHubProxy.off('onUserDisconnected');\r\n    playHubProxy.off('onUserReady');\r\n    playHubProxy.off('onGameAccept');\r\n    connection.stop();\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return{\r\n        getUserProfile: (userId) => dispatch(getUserProfile(userId)),\r\n        onConnected: (profiles) => dispatch(onConnected(profiles)),\r\n        onNewUserConnected: (newUser) =>dispatch(onNewUserConnected(newUser)),\r\n        onUserDisconnected: (profile) =>dispatch(onUserDisconnected(profile)),\r\n        onUserReady: (profile) =>dispatch(onUserReady(profile))\r\n    }\r\n}\r\n\r\nexport default connect(mapDispatchToProps)(StartConnection)"]},"metadata":{},"sourceType":"module"}