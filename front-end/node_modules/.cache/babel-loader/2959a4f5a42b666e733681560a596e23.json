{"ast":null,"code":"import _toConsumableArray from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { FETCH_PLAY_START, FETCH_MAKE_BET, HAND_SUCCESS, WIN_GAME, LOSE_GAME, DRAW_GAME, DEAL_HAND, PLAY_HAND, USER_PROFILE, DATA_USER, ENOUGH_HAND, USER_CONNECT, NEW_USER_CONNECT, USER_DISCONNECT, USER_READY, GAME_START, BET, ENEMY_BET, TIMER, NEW_MESSAGE } from '../actions/actionType';\nvar initialState = {\n  deck: [{\n    name: 'Ace',\n    suit: 'Hearts',\n    value: 11\n  }, {\n    name: 'Two',\n    suit: 'Hearts',\n    value: 2\n  }, {\n    name: 'Three',\n    suit: 'Hearts',\n    value: 3\n  }, {\n    name: 'Four',\n    suit: 'Hearts',\n    value: 4\n  }, {\n    name: 'Five',\n    suit: 'Hearts',\n    value: 5\n  }, {\n    name: 'Six',\n    suit: 'Hearts',\n    value: 6\n  }, {\n    name: 'Seven',\n    suit: 'Hearts',\n    value: 7\n  }, {\n    name: 'Eight',\n    suit: 'Hearts',\n    value: 8\n  }, {\n    name: 'Nine',\n    suit: 'Hearts',\n    value: 9\n  }, {\n    name: 'Ten',\n    suit: 'Hearts',\n    value: 10\n  }, {\n    name: 'Jack',\n    suit: 'Hearts',\n    value: 10\n  }, {\n    name: 'Queen',\n    suit: 'Hearts',\n    value: 10\n  }, {\n    name: 'King',\n    suit: 'Hearts',\n    value: 10\n  }, {\n    name: 'Ace',\n    suit: 'Diamonds',\n    value: 11\n  }, {\n    name: 'Two',\n    suit: 'Diamonds',\n    value: 2\n  }, {\n    name: 'Three',\n    suit: 'Diamonds',\n    value: 3\n  }, {\n    name: 'Four',\n    suit: 'Diamonds',\n    value: 4\n  }, {\n    name: 'Five',\n    suit: 'Diamonds',\n    value: 5\n  }, {\n    name: 'Six',\n    suit: 'Diamonds',\n    value: 6\n  }, {\n    name: 'Seven',\n    suit: 'Diamonds',\n    value: 7\n  }, {\n    name: 'Eight',\n    suit: 'Diamonds',\n    value: 8\n  }, {\n    name: 'Nine',\n    suit: 'Diamonds',\n    value: 9\n  }, {\n    name: 'Ten',\n    suit: 'Diamonds',\n    value: 10\n  }, {\n    name: 'Jack',\n    suit: 'Diamonds',\n    value: 10\n  }, {\n    name: 'Queen',\n    suit: 'Diamonds',\n    value: 10\n  }, {\n    name: 'King',\n    suit: 'Diamonds',\n    value: 10\n  }, {\n    name: 'Ace',\n    suit: 'Clubs',\n    value: 11\n  }, {\n    name: 'Two',\n    suit: 'Clubs',\n    value: 2\n  }, {\n    name: 'Three',\n    suit: 'Clubs',\n    value: 3\n  }, {\n    name: 'Four',\n    suit: 'Clubs',\n    value: 4\n  }, {\n    name: 'Five',\n    suit: 'Clubs',\n    value: 5\n  }, {\n    name: 'Six',\n    suit: 'Clubs',\n    value: 6\n  }, {\n    name: 'Seven',\n    suit: 'Clubs',\n    value: 7\n  }, {\n    name: 'Eight',\n    suit: 'Clubs',\n    value: 8\n  }, {\n    name: 'Nine',\n    suit: 'Clubs',\n    value: 9\n  }, {\n    name: 'Ten',\n    suit: 'Clubs',\n    value: 10\n  }, {\n    name: 'Jack',\n    suit: 'Clubs',\n    value: 10\n  }, {\n    name: 'Queen',\n    suit: 'Clubs',\n    value: 10\n  }, {\n    name: 'King',\n    suit: 'Clubs',\n    value: 10\n  }, {\n    name: 'Ace',\n    suit: 'Spades',\n    value: 11\n  }, {\n    name: 'Two',\n    suit: 'Spades',\n    value: 2\n  }, {\n    name: 'Three',\n    suit: 'Spades',\n    value: 3\n  }, {\n    name: 'Four',\n    suit: 'Spades',\n    value: 4\n  }, {\n    name: 'Five',\n    suit: 'Spades',\n    value: 5\n  }, {\n    name: 'Six',\n    suit: 'Spades',\n    value: 6\n  }, {\n    name: 'Seven',\n    suit: 'Spades',\n    value: 7\n  }, {\n    name: 'Eight',\n    suit: 'Spades',\n    value: 8\n  }, {\n    name: 'Nine',\n    suit: 'Spades',\n    value: 9\n  }, {\n    name: 'Ten',\n    suit: 'Spades',\n    value: 10\n  }, {\n    name: 'Jack',\n    suit: 'Spades',\n    value: 10\n  }, {\n    name: 'Queen',\n    suit: 'Spades',\n    value: 10\n  }, {\n    name: 'King',\n    suit: 'Spades',\n    value: 10\n  }],\n  dibs: [{\n    id: 1,\n    value: '1',\n    classView: 'blue'\n  }, {\n    id: 2,\n    value: '5',\n    classView: 'blue'\n  }, {\n    id: 3,\n    value: '25',\n    classView: 'yellow'\n  }, {\n    id: 4,\n    value: '50',\n    classView: 'yellow'\n  }, {\n    id: 5,\n    value: '100',\n    classView: 'red'\n  }, {\n    id: 6,\n    value: '200',\n    classView: 'red'\n  }],\n  count: 0,\n  users: [],\n  user: {\n    id: -1,\n    name: '',\n    email: '',\n    bet: 0,\n    cash: 0,\n    playerHand: [],\n    playerHandSum: 0,\n    enemyName: '',\n    enemyBet: 0,\n    enemyCash: 0,\n    enemyHand: [],\n    enemyHandSum: 0,\n    activePlayerId: 0,\n    messages: [],\n    time: -1,\n    isPlay: false,\n    isEnough: false,\n    isMore: false\n  }\n};\nexport default function playReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USER_PROFILE:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          id: action.id,\n          cash: action.cash,\n          name: action.name,\n          email: action.email\n        })\n      });\n\n    case USER_CONNECT:\n      return _objectSpread({}, state, {\n        count: action.profiles.length,\n        users: action.profiles\n      });\n\n    case NEW_USER_CONNECT:\n      return _objectSpread({}, state, {\n        users: _toConsumableArray(state.users).concat([action.newUser]),\n        count: state.count + 1\n      });\n\n    case USER_DISCONNECT:\n      return _objectSpread({}, state, {\n        users: state.users.filter(function (user) {\n          return user.id !== action.profile.id;\n        }),\n        count: state.count - 1\n      });\n\n    case USER_READY:\n      return _objectSpread({}, state, {\n        users: state.users.map(function (user) {\n          return user.id === action.profile.id ? action.profile : user;\n        })\n      });\n\n    case GAME_START:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          messages: action.messages,\n          cash: action.user.cash,\n          bet: action.user.bet,\n          enemyName: action.enemy.name,\n          enemyCash: action.enemy.cash,\n          enemyBet: action.enemy.bet\n        })\n      });\n\n    case BET:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          cash: action.user.cash,\n          bet: action.user.bet\n        })\n      });\n\n    case ENEMY_BET:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          enemyCash: action.enemy.cash,\n          enemyBet: action.enemy.bet\n        })\n      });\n\n    case NEW_MESSAGE:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          messages: _toConsumableArray(state.user.messages).concat([action.message])\n        })\n      });\n\n    case TIMER:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          time: action.time\n        })\n      });\n\n    case FETCH_PLAY_START:\n      return _objectSpread({}, state);\n\n    case DATA_USER:\n      if (action.playerHand === undefined) {\n        return _objectSpread({}, state, {\n          user: _objectSpread({}, state.user, {\n            playerHand: [],\n            playerHandSum: 0,\n            enemyHand: [],\n            enemyHandSum: 0,\n            bet: action.bet,\n            cash: action.cash,\n            name: action.name,\n            isPlay: action.isPlay\n          })\n        });\n      } else {\n        return _objectSpread({}, state, {\n          user: _objectSpread({}, state.user, {\n            playerHand: action.playerHand,\n            playerHandSum: action.playerHandSum,\n            enemyHand: action.enemyHand,\n            enemyHandSum: action.enemyHandSum,\n            bet: action.bet,\n            cash: action.cash,\n            name: action.name,\n            isPlay: false,\n            isEnough: true,\n            isMore: true\n          })\n        });\n      }\n\n    case FETCH_MAKE_BET:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          bet: action.bet,\n          cash: action.cash,\n          isPlay: action.isPlay\n        })\n      });\n\n    case ENOUGH_HAND:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          isPlay: action.isPlay,\n          isEnough: action.isEnough,\n          isMore: action.isMore\n        })\n      });\n\n    case HAND_SUCCESS:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          playerHand: action.playerHand,\n          playerHandSum: action.playerHandSum,\n          enemyHand: action.enemyHand,\n          enemyHandSum: action.enemyHandSum,\n          isPlay: false,\n          isEnough: true,\n          isMore: true\n        })\n      });\n\n    case WIN_GAME:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          playerHandSum: action.playerHandSum,\n          enemyHandSum: action.enemyHandSum,\n          bet: action.bet,\n          cash: action.cash,\n          playerHand: action.playerHand,\n          enemyHand: action.enemyHand,\n          isEnough: false,\n          isMore: false\n        })\n      });\n\n    case LOSE_GAME:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          playerHandSum: action.playerHandSum,\n          bet: action.bet,\n          enemyHandSum: action.enemyHandSum,\n          playerHand: action.playerHand,\n          enemyHand: action.enemyHand,\n          isEnough: false,\n          isMore: false\n        })\n      });\n\n    case DRAW_GAME:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          playerHandSum: action.playerHandSum,\n          enemyHandSum: action.enemyHandSum,\n          bet: action.bet,\n          cash: action.cash,\n          playerHand: action.playerHand,\n          enemyHand: action.enemyHand,\n          isEnough: false,\n          isMore: false\n        })\n      });\n\n    case DEAL_HAND:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          enemyHand: action.enemyHand,\n          enemyHandSum: action.enemyHandSum\n        })\n      });\n\n    case PLAY_HAND:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          playerHand: action.playerHand,\n          playerHandSum: action.playerHandSum\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:\\C#\\blackjack_WebAPI - new\\front-end\\src\\store\\reducers\\playTable.js"],"names":["FETCH_PLAY_START","FETCH_MAKE_BET","HAND_SUCCESS","WIN_GAME","LOSE_GAME","DRAW_GAME","DEAL_HAND","PLAY_HAND","USER_PROFILE","DATA_USER","ENOUGH_HAND","USER_CONNECT","NEW_USER_CONNECT","USER_DISCONNECT","USER_READY","GAME_START","BET","ENEMY_BET","TIMER","NEW_MESSAGE","initialState","deck","name","suit","value","dibs","id","classView","count","users","user","email","bet","cash","playerHand","playerHandSum","enemyName","enemyBet","enemyCash","enemyHand","enemyHandSum","activePlayerId","messages","time","isPlay","isEnough","isMore","playReducer","state","action","type","profiles","length","newUser","filter","profile","map","enemy","message","undefined"],"mappings":"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","sourcesContent":["import {FETCH_PLAY_START,\n        FETCH_MAKE_BET,\n        HAND_SUCCESS,\n        WIN_GAME,\n        LOSE_GAME,\n        DRAW_GAME,\n        DEAL_HAND,\n        PLAY_HAND,\n        USER_PROFILE,\n        DATA_USER,\n        ENOUGH_HAND,\n        USER_CONNECT,\n        NEW_USER_CONNECT,\n        USER_DISCONNECT,\n        USER_READY,\n        GAME_START,\n        BET,\n        ENEMY_BET,\n        TIMER,\n        NEW_MESSAGE} from '../actions/actionType'\n\nconst initialState = {\n    deck: [\n        {\n            name: 'Ace',\n            suit: 'Hearts',\n            value: 11\n        },\n        {\n            name: 'Two',\n            suit: 'Hearts',\n            value: 2\n        },\n        {\n            name: 'Three',\n            suit: 'Hearts',\n            value: 3\n        },\n        {\n            name: 'Four',\n            suit: 'Hearts',\n            value: 4\n        },\n        {\n            name: 'Five',\n            suit: 'Hearts',\n            value: 5\n        },\n        {\n            name: 'Six',\n            suit: 'Hearts',\n            value: 6\n        },\n        {\n            name: 'Seven',\n            suit: 'Hearts',\n            value: 7\n        },\n        {\n            name: 'Eight',\n            suit: 'Hearts',\n            value: 8\n        },\n        {\n            name: 'Nine',\n            suit: 'Hearts',\n            value: 9\n        },\n        {\n            name: 'Ten',\n            suit: 'Hearts',\n            value: 10\n        },\n        {\n            name: 'Jack',\n            suit: 'Hearts',\n            value: 10\n        },\n        {\n            name: 'Queen',\n            suit: 'Hearts',\n            value: 10\n        },\n        {\n            name: 'King',\n            suit: 'Hearts',\n            value: 10\n        },\n        {\n            name: 'Ace',\n            suit: 'Diamonds',\n            value: 11\n        },\n        {\n            name: 'Two',\n            suit: 'Diamonds',\n            value: 2\n        },\n        {\n            name: 'Three',\n            suit: 'Diamonds',\n            value: 3\n        },\n        {\n            name: 'Four',\n            suit: 'Diamonds',\n            value: 4\n        },\n        {\n            name: 'Five',\n            suit: 'Diamonds',\n            value: 5\n        },\n        {\n            name: 'Six',\n            suit: 'Diamonds',\n            value: 6\n        },\n        {\n            name: 'Seven',\n            suit: 'Diamonds',\n            value: 7\n        },\n        {\n            name: 'Eight',\n            suit: 'Diamonds',\n            value: 8\n        },\n        {\n            name: 'Nine',\n            suit: 'Diamonds',\n            value: 9\n        },\n        {\n            name: 'Ten',\n            suit: 'Diamonds',\n            value: 10\n        },\n        {\n            name: 'Jack',\n            suit: 'Diamonds',\n            value: 10\n        },\n        {\n            name: 'Queen',\n            suit: 'Diamonds',\n            value: 10\n        },\n        {\n            name: 'King',\n            suit: 'Diamonds',\n            value: 10\n        },\n        {\n            name: 'Ace',\n            suit: 'Clubs',\n            value: 11\n        },\n        {\n            name: 'Two',\n            suit: 'Clubs',\n            value: 2\n        },\n        {\n            name: 'Three',\n            suit: 'Clubs',\n            value: 3\n        },\n        {\n            name: 'Four',\n            suit: 'Clubs',\n            value: 4\n        },\n        {\n            name: 'Five',\n            suit: 'Clubs',\n            value: 5\n        },\n        {\n            name: 'Six',\n            suit: 'Clubs',\n            value: 6\n        },\n        {\n            name: 'Seven',\n            suit: 'Clubs',\n            value: 7\n        },\n        {\n            name: 'Eight',\n            suit: 'Clubs',\n            value: 8\n        },\n        {\n            name: 'Nine',\n            suit: 'Clubs',\n            value: 9\n        },\n        {\n            name: 'Ten',\n            suit: 'Clubs',\n            value: 10\n        },\n        {\n            name: 'Jack',\n            suit: 'Clubs',\n            value: 10\n        },\n        {\n            name: 'Queen',\n            suit: 'Clubs',\n            value: 10\n        },\n        {\n            name: 'King',\n            suit: 'Clubs',\n            value: 10\n        },\n        {\n            name: 'Ace',\n            suit: 'Spades',\n            value: 11\n        },\n        {\n            name: 'Two',\n            suit: 'Spades',\n            value: 2\n        },\n        {\n            name: 'Three',\n            suit: 'Spades',\n            value: 3\n        },\n        {\n            name: 'Four',\n            suit: 'Spades',\n            value: 4\n        },\n        {\n            name: 'Five',\n            suit: 'Spades',\n            value: 5\n        },\n        {\n            name: 'Six',\n            suit: 'Spades',\n            value: 6\n        },\n        {\n            name: 'Seven',\n            suit: 'Spades',\n            value: 7\n        },\n        {\n            name: 'Eight',\n            suit: 'Spades',\n            value: 8\n        },\n        {\n            name: 'Nine',\n            suit: 'Spades',\n            value: 9\n        },\n        {\n            name: 'Ten',\n            suit: 'Spades',\n            value: 10\n        },\n        {\n            name: 'Jack',\n            suit: 'Spades',\n            value: 10\n        },\n        {\n            name: 'Queen',\n            suit: 'Spades',\n            value: 10\n        },\n        {\n            name: 'King',\n            suit: 'Spades',\n            value: 10\n        }\n    ],\n    dibs:[\n        {\n            id: 1,\n            value: '1',\n            classView: 'blue'\n        },\n        {\n            id: 2,\n            value: '5',\n            classView: 'blue'\n        },\n        {\n            id: 3,\n            value: '25',\n            classView: 'yellow'\n        },\n        {\n            id: 4,\n            value: '50',\n            classView: 'yellow'\n        },\n        {\n            id: 5,\n            value: '100',\n            classView: 'red'\n        },\n        {\n            id: 6,\n            value: '200',\n            classView: 'red'\n        }\n    ],\n    count: 0,\n    users: [],\n    user: {\n        id: -1,        \n        name: '',\n        email: '',\n        bet: 0,\n        cash: 0,\n        playerHand: [],\n        playerHandSum: 0,\n        enemyName: '',\n        enemyBet: 0,\n        enemyCash: 0,\n        enemyHand: [],\n        enemyHandSum: 0,\n        activePlayerId: 0,\n        messages: [],\n        time: -1,\n        isPlay: false,\n        isEnough: false,\n        isMore: false\n    }\n}\n\nexport default function playReducer(state = initialState, action){\n    switch(action.type){\n        case USER_PROFILE:\n            return{\n                ...state,\n                    user: {\n                        ...state.user,\n                        id: action.id,\n                        cash: action.cash,\n                        name: action.name,\n                        email: action.email\n                    }\n            }\n        case USER_CONNECT:\n            return{\n                ...state,\n                count: action.profiles.length,\n                users: action.profiles\n            }\n        case NEW_USER_CONNECT:\n            return{\n                ...state,\n                users: [...state.users, action.newUser],\n                count: state.count + 1\n            }\n        case USER_DISCONNECT:\n            return{\n                ...state,\n                users: state.users.filter(user => user.id !== action.profile.id),\n                count: state.count - 1\n            }\n        case USER_READY:\n            return{\n                ...state,\n                users: state.users.map(user => user.id === action.profile.id ? action.profile : user)\n            }\n        case GAME_START:\n            return{\n                ...state,\n                user:{\n                    ...state.user,\n                    messages: action.messages,\n                    cash: action.user.cash,\n                    bet: action.user.bet,\n                    enemyName: action.enemy.name,\n                    enemyCash: action.enemy.cash,\n                    enemyBet: action.enemy.bet\n                }\n            }\n        case BET:\n            return{\n                ...state,\n                user:{\n                    ...state.user,\n                    cash: action.user.cash,\n                    bet: action.user.bet\n                }\n            }\n        case ENEMY_BET:\n            return{\n                ...state,\n                user:{\n                    ...state.user,\n                    enemyCash: action.enemy.cash,\n                    enemyBet: action.enemy.bet\n                }\n            }\n        case NEW_MESSAGE:\n            return{\n                ...state,\n                user:{\n                    ...state.user,\n                    messages: [...state.user.messages, action.message]\n                }\n            }\n        case TIMER:\n            return{\n                ...state,\n                user:{\n                    ...state.user,\n                    time: action.time\n                }\n            }\n        case FETCH_PLAY_START:\n            return{\n                ...state\n            }\n        case DATA_USER:\n            if(action.playerHand === undefined){\n                return{\n                    ...state,\n                    user: {\n                        ...state.user,\n                        playerHand: [],\n                        playerHandSum: 0,\n                        enemyHand: [],\n                        enemyHandSum: 0,\n                        bet: action.bet,\n                        cash: action.cash,\n                        name: action.name,\n                        isPlay: action.isPlay\n                    }\n                }\n            } else{\n                return{\n                    ...state,\n                    user: {\n                        ...state.user,\n                        playerHand: action.playerHand,\n                        playerHandSum: action.playerHandSum,\n                        enemyHand: action.enemyHand,\n                        enemyHandSum: action.enemyHandSum,\n                        bet: action.bet,\n                        cash: action.cash,\n                        name: action.name,\n                        isPlay: false,\n                        isEnough: true,\n                        isMore: true\n                    }\n                }\n            }\n        case FETCH_MAKE_BET:\n            return{\n                ...state, \n                user: {\n                    ...state.user,\n                    bet: action.bet, \n                    cash: action.cash,\n                    isPlay: action.isPlay\n                }\n            }\n        case ENOUGH_HAND:\n            return{\n                ...state,\n                user: {\n                    ...state.user,\n                    isPlay: action.isPlay,\n                    isEnough: action.isEnough,\n                    isMore: action.isMore\n                }\n            }\n        case HAND_SUCCESS:\n            return{\n                ...state,\n                user: {\n                    ...state.user,\n                    playerHand: action.playerHand,\n                    playerHandSum: action.playerHandSum,\n                    enemyHand: action.enemyHand,\n                    enemyHandSum: action.enemyHandSum,\n                    isPlay: false,\n                    isEnough: true,\n                    isMore: true\n                }\n            }\n        case WIN_GAME:\n            return{\n                ...state,\n                user: {\n                    ...state.user,\n                    playerHandSum: action.playerHandSum,\n                    enemyHandSum: action.enemyHandSum,\n                    bet: action.bet,\n                    cash: action.cash,\n                    playerHand: action.playerHand,\n                    enemyHand: action.enemyHand,\n                    isEnough: false,\n                    isMore: false\n                }\n            }\n        case LOSE_GAME:\n            return{\n                ...state,\n                user: {\n                    ...state.user,\n                    playerHandSum: action.playerHandSum,\n                    bet: action.bet,\n                    enemyHandSum: action.enemyHandSum,\n                    playerHand: action.playerHand,\n                    enemyHand: action.enemyHand,\n                    isEnough: false,\n                    isMore: false\n                }\n            }\n        case DRAW_GAME:\n            return{\n                ...state,\n                user: {\n                    ...state.user,\n                    playerHandSum: action.playerHandSum,\n                    enemyHandSum: action.enemyHandSum,\n                    bet: action.bet,\n                    cash: action.cash,\n                    playerHand: action.playerHand,\n                    enemyHand: action.enemyHand,\n                    isEnough: false,\n                    isMore: false\n                }\n            }\n        case DEAL_HAND:\n            return{\n                ...state,\n                user: {\n                    ...state.user,\n                    enemyHand: action.enemyHand,\n                    enemyHandSum: action.enemyHandSum\n                }\n            }\n        case PLAY_HAND:\n            return{\n                ...state,\n                user: {\n                    ...state.user,\n                    playerHand: action.playerHand,\n                    playerHandSum: action.playerHandSum\n                }\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}