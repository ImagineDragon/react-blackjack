{"ast":null,"code":"import _toConsumableArray from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { USER_CONNECT, NEW_USER_CONNECT, USER_DISCONNECT, USER_READY } from '../actions/actionType';\nvar initialState = {\n  count: 0,\n  users: [],\n  user: {\n    bet: 0,\n    cash: 0,\n    name: '',\n    email: '',\n    playerHand: [],\n    playerHandSum: 0,\n    dealerHand: [],\n    dealerHandSum: 0,\n    isPlay: false,\n    isEnough: false,\n    isMore: false,\n    backProfile: false,\n    isExit: false\n  }\n};\nexport default function profileReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USER_CONNECT:\n      return _objectSpread({}, state, {\n        count: action.profiles.length,\n        users: action.profiles\n      });\n\n    case NEW_USER_CONNECT:\n      return _objectSpread({}, state, {\n        users: _toConsumableArray(state.users).concat([action.newUser]),\n        count: state.count + 1\n      });\n\n    case USER_DISCONNECT:\n      return _objectSpread({}, state, {\n        users: state.users.filter(function (user) {\n          return user.id !== action.profile.id;\n        }),\n        count: state.count - 1\n      });\n\n    case USER_READY:\n      return _objectSpread({}, state, {\n        users: state.users.map(function (user) {\n          return user.id === action.profile.id ? action.profile : user;\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:\\C#\\blackjack_WebAPI - new\\front-end\\src\\store\\reducers\\profile.js"],"names":["USER_CONNECT","NEW_USER_CONNECT","USER_DISCONNECT","USER_READY","initialState","count","users","user","bet","cash","name","email","playerHand","playerHandSum","dealerHand","dealerHandSum","isPlay","isEnough","isMore","backProfile","isExit","profileReducer","state","action","type","profiles","length","newUser","filter","id","profile","map"],"mappings":";;AAAA,SAAQA,YAAR,EACIC,gBADJ,EAEIC,eAFJ,EAGIC,UAHJ,QAGqB,uBAHrB;AAKA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CADU;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,GAAG,EAAE,CADH;AAEFC,IAAAA,IAAI,EAAE,CAFJ;AAGFC,IAAAA,IAAI,EAAE,EAHJ;AAIFC,IAAAA,KAAK,EAAE,EAJL;AAKFC,IAAAA,UAAU,EAAE,EALV;AAMFC,IAAAA,aAAa,EAAE,CANb;AAOFC,IAAAA,UAAU,EAAE,EAPV;AAQFC,IAAAA,aAAa,EAAE,CARb;AASFC,IAAAA,MAAM,EAAE,KATN;AAUFC,IAAAA,QAAQ,EAAE,KAVR;AAWFC,IAAAA,MAAM,EAAE,KAXN;AAYFC,IAAAA,WAAW,EAAE,KAZX;AAaFC,IAAAA,MAAM,EAAE;AAbN;AAHW,CAArB;AAoBA,eAAe,SAASC,cAAT,GAAqD;AAAA,MAA7BC,KAA6B,uEAArBlB,YAAqB;AAAA,MAAPmB,MAAO;;AAChE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKxB,YAAL;AACI,+BACOsB,KADP;AAEIjB,QAAAA,KAAK,EAAEkB,MAAM,CAACE,QAAP,CAAgBC,MAF3B;AAGIpB,QAAAA,KAAK,EAAEiB,MAAM,CAACE;AAHlB;;AAKJ,SAAKxB,gBAAL;AACI,+BACOqB,KADP;AAEIhB,QAAAA,KAAK,qBAAMgB,KAAK,CAAChB,KAAZ,UAAmBiB,MAAM,CAACI,OAA1B,EAFT;AAGItB,QAAAA,KAAK,EAAEiB,KAAK,CAACjB,KAAN,GAAc;AAHzB;;AAKJ,SAAKH,eAAL;AACI,+BACOoB,KADP;AAEIhB,QAAAA,KAAK,EAAEgB,KAAK,CAAChB,KAAN,CAAYsB,MAAZ,CAAmB,UAAArB,IAAI;AAAA,iBAAIA,IAAI,CAACsB,EAAL,KAAYN,MAAM,CAACO,OAAP,CAAeD,EAA/B;AAAA,SAAvB,CAFX;AAGIxB,QAAAA,KAAK,EAAEiB,KAAK,CAACjB,KAAN,GAAc;AAHzB;;AAKJ,SAAKF,UAAL;AACI,+BACOmB,KADP;AAEIhB,QAAAA,KAAK,EAAEgB,KAAK,CAAChB,KAAN,CAAYyB,GAAZ,CAAgB,UAAAxB,IAAI;AAAA,iBAAIA,IAAI,CAACsB,EAAL,KAAYN,MAAM,CAACO,OAAP,CAAeD,EAA3B,GAAgCN,MAAM,CAACO,OAAvC,GAAiDvB,IAArD;AAAA,SAApB;AAFX;;AAIJ;AACI,aAAOe,KAAP;AAzBR;AA2BH","sourcesContent":["import {USER_CONNECT,\r\n    NEW_USER_CONNECT,\r\n    USER_DISCONNECT,\r\n    USER_READY} from '../actions/actionType'\r\n\r\nconst initialState = {\r\n    count: 0,\r\n    users: [],\r\n    user: {\r\n        bet: 0,\r\n        cash: 0,\r\n        name: '',\r\n        email: '',\r\n        playerHand: [],\r\n        playerHandSum: 0,\r\n        dealerHand: [],\r\n        dealerHandSum: 0,\r\n        isPlay: false,\r\n        isEnough: false,\r\n        isMore: false,\r\n        backProfile: false,\r\n        isExit: false\r\n    }\r\n}\r\n\r\nexport default function profileReducer(state = initialState, action){\r\n    switch(action.type){\r\n        case USER_CONNECT:\r\n            return{\r\n                ...state,\r\n                count: action.profiles.length,\r\n                users: action.profiles\r\n            }\r\n        case NEW_USER_CONNECT:\r\n            return{\r\n                ...state,\r\n                users: [...state.users, action.newUser],\r\n                count: state.count + 1\r\n            }\r\n        case USER_DISCONNECT:\r\n            return{\r\n                ...state,\r\n                users: state.users.filter(user => user.id !== action.profile.id),\r\n                count: state.count - 1\r\n            }\r\n        case USER_READY:\r\n            return{\r\n                ...state,\r\n                users: state.users.map(user => user.id === action.profile.id ? action.profile : user)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}