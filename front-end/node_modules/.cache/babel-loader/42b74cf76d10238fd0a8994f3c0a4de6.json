{"ast":null,"code":"import _classCallCheck from \"D:\\\\C#\\\\blackjack_WebAPI - Copy\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\C#\\\\blackjack_WebAPI - Copy\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\C#\\\\blackjack_WebAPI - Copy\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\C#\\\\blackjack_WebAPI - Copy\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\C#\\\\blackjack_WebAPI - Copy\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\C#\\\\blackjack_WebAPI - Copy\\\\front-end\\\\src\\\\containers\\\\PlayTable\\\\PlayTable.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport classes from './PlayTable.css';\nimport Dibs from '../../components/Dibs/DIbs';\nimport Rate from '../../components/Rate/Rate';\nimport Enemy from '../../components/Enemy/Enemy';\nimport PlayButton from '../../components/UI/PlayButton/PlayButton';\nimport Button from '../../components/UI/Button/Button';\nimport DealerHand from '../../components/DealerHand/DealerHand';\nimport PlayerHand from '../../components/PlayerHand/PlayerHand';\nimport { fetchMakeBet as _fetchMakeBet, onPlayHandler as _onPlayHandler, onEnoughHandler as _onEnoughHandler, onMoreHandler as _onMoreHandler, getDataUser as _getDataUser } from '../../store/actions/playTable';\nimport { connection, playHubProxy } from '../../Hubs/Hubs';\nvar userId = localStorage.getItem('userId');\nvar enemyId = localStorage.getItem('enemyId');\n\nvar PlayTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlayTable, _Component);\n\n  function PlayTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PlayTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlayTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLogout: false,\n      bet: 0,\n      cash: 0,\n      enemyName: '',\n      enemyBet: 0,\n      enemyCash: 0\n    };\n\n    _this.isLogout = function () {\n      localStorage.removeItem('userId');\n\n      _this.setState({\n        isLogout: true\n      });\n\n      connection.stop();\n      console.log('stop');\n    };\n\n    _this.onCreateDibHandler = function (value) {\n      var div = document.createElement('div');\n\n      switch (value) {\n        case '1':\n          div.className = classes.dib_1;\n          break;\n\n        case '5':\n          div.className = classes.dib_5;\n          break;\n\n        case '25':\n          div.className = classes.dib_25;\n          break;\n\n        case '50':\n          div.className = classes.dib_50;\n          break;\n\n        case '100':\n          div.className = classes.dib_100;\n          break;\n\n        default:\n          div.className = classes.dib_200;\n      }\n\n      div.innerHTML = value;\n      var bet = parseInt(_this.props.bet) + parseInt(value);\n      var cash = parseInt(_this.props.cash) - parseInt(value);\n\n      if (bet !== 0 && cash >= 0 && _this.props.playerHandSum === 0) {\n        var isPlay = true;\n\n        _this.props.fetchMakeBet(bet, cash, isPlay);\n\n        document.getElementById('dibsBet').appendChild(div);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(PlayTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (userId == null) {\n        this.setState({\n          isLogout: true\n        });\n      } else {\n        this.setState({\n          isLogout: false\n        });\n      }\n\n      this.props.getDataUser(userId);\n      console.log('enemyId = ', +enemyId);\n      playHubProxy.on('onGameStart', function (enemy) {\n        console.log(enemy);\n        this.setState({\n          enemyName: enemy.name,\n          enemyCash: enemy.cash,\n          enemyBet: enemy.bet\n        });\n\n        if (localStorage.getItem('cash') != null) {\n          this.setState({\n            cash: localStorage.getItem('cash'),\n            bet: localStorage.getItem('bet')\n          });\n        } else {\n          this.setState({\n            cash: this.props.cash,\n            bet: this.props.bet\n          });\n        }\n      }.bind(this));\n      playHubProxy.on('onEnemyBet', function (enemy) {\n        console.log(enemy);\n        this.setState({\n          enemyCash: enemy.cash,\n          enemyBet: enemy.bet\n        });\n      }.bind(this));\n      connection.start().done(function () {\n        console.log('start game');\n        playHubProxy.invoke('gameStart', userId, enemyId);\n        console.log(localStorage.getItem('cash'));\n        console.log(localStorage.getItem('bet'));\n      }.bind(this));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      playHubProxy.off('onGameStart');\n      playHubProxy.off('onEnemyBet');\n      connection.stop();\n      localStorage.removeItem('cash');\n      localStorage.removeItem('bet');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLogout) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: classes.PlayTable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Rate, {\n        bet: this.props.bet,\n        cash: this.props.cash,\n        name: this.props.nameUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(Enemy, {\n        bet: this.state.enemyBet,\n        cash: this.state.enemyCash,\n        name: this.state.enemyName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(DealerHand, {\n        dealerHand: this.props.dealerHand,\n        dealerHandSum: this.props.dealerHandSum,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"dibsBet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(PlayerHand, {\n        playerHand: this.props.playerHand,\n        playerHandSum: this.props.playerHandSum,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(Dibs, {\n        dibs: this.props.dibs,\n        onDibCLick: this.onCreateDibHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(PlayButton, {\n        onPlay: this.props.onPlayHandler,\n        onEnough: this.props.onEnoughHandler,\n        onMore: this.props.onMoreHandler,\n        disabledPlay: !this.props.isPlay,\n        disabledEnough: !this.props.isEnough,\n        disabledMore: !this.props.isMore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.Button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\")), React.createElement(Button, {\n        type: \"error\",\n        onClick: this.isLogout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"\\u0412\\u044B\\u0445\\u043E\\u0434\")));\n    }\n  }]);\n\n  return PlayTable;\n}(Component);\n\nfunction mapStateToProps(state) {\n  if (connection.state === 1) {\n    playHubProxy.invoke('userBet', state.playTable.cash, state.playTable.bet, enemyId);\n  }\n\n  if (localStorage.getItem('cash') == null) {\n    localStorage.setItem('cash', state.playTable.cash);\n    localStorage.setItem('bet', state.playTable.bet);\n  }\n\n  return {\n    deck: state.playTable.deck,\n    dibs: state.playTable.dibs,\n    bet: state.playTable.bet,\n    cash: state.playTable.cash,\n    nameUser: state.playTable.nameUser,\n    playerHand: state.playTable.playerHand,\n    playerHandSum: state.playTable.playerHandSum,\n    dealerHand: state.playTable.dealerHand,\n    dealerHandSum: state.playTable.dealerHandSum,\n    isPlay: state.playTable.isPlay,\n    isEnough: state.playTable.isEnough,\n    isMore: state.playTable.isMore,\n    backProfile: state.playTable.backProfile,\n    isExit: state.playTable.isExit\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchMakeBet: function fetchMakeBet(bet, cash, isPlay) {\n      return dispatch(_fetchMakeBet(bet, cash, isPlay));\n    },\n    getDataUser: function getDataUser(userId) {\n      return dispatch(_getDataUser(userId));\n    },\n    onPlayHandler: function onPlayHandler() {\n      return dispatch(_onPlayHandler());\n    },\n    onEnoughHandler: function onEnoughHandler() {\n      return dispatch(_onEnoughHandler());\n    },\n    onMoreHandler: function onMoreHandler() {\n      return dispatch(_onMoreHandler());\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayTable);","map":{"version":3,"sources":["D:\\C#\\blackjack_WebAPI - Copy\\front-end\\src\\containers\\PlayTable\\PlayTable.js"],"names":["React","Component","connect","NavLink","Redirect","classes","Dibs","Rate","Enemy","PlayButton","Button","DealerHand","PlayerHand","fetchMakeBet","onPlayHandler","onEnoughHandler","onMoreHandler","getDataUser","connection","playHubProxy","userId","localStorage","getItem","enemyId","PlayTable","state","isLogout","bet","cash","enemyName","enemyBet","enemyCash","removeItem","setState","stop","console","log","onCreateDibHandler","value","div","document","createElement","className","dib_1","dib_5","dib_25","dib_50","dib_100","dib_200","innerHTML","parseInt","props","playerHandSum","isPlay","getElementById","appendChild","on","enemy","name","bind","start","done","invoke","off","nameUser","dealerHand","dealerHandSum","playerHand","dibs","isEnough","isMore","mapStateToProps","playTable","setItem","deck","backProfile","isExit","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {NavLink, Redirect} from 'react-router-dom'\nimport classes from './PlayTable.css'\nimport Dibs from '../../components/Dibs/DIbs'\nimport Rate from '../../components/Rate/Rate'\nimport Enemy from '../../components/Enemy/Enemy'\nimport PlayButton from '../../components/UI/PlayButton/PlayButton'\nimport Button from '../../components/UI/Button/Button'\nimport DealerHand from '../../components/DealerHand/DealerHand'\nimport PlayerHand from '../../components/PlayerHand/PlayerHand'\nimport {fetchMakeBet, \n        onPlayHandler,\n        onEnoughHandler,\n        onMoreHandler,\n        getDataUser} from '../../store/actions/playTable'\n\nimport {connection, playHubProxy} from '../../Hubs/Hubs'\n\nconst userId = localStorage.getItem('userId');\nconst enemyId = localStorage.getItem('enemyId');\n\nclass PlayTable extends Component {\n    state = {\n        isLogout: false,\n        bet: 0,\n        cash: 0,\n        enemyName: '',\n        enemyBet: 0,\n        enemyCash: 0\n    }\n\n    isLogout = () => {\n        localStorage.removeItem('userId');\n        this.setState({\n            isLogout: true\n        });\n        connection.stop();\n        console.log('stop');\n    }\n    \n   onCreateDibHandler = value =>{\n        let div = document.createElement('div');\n        switch(value){\n            case '1':\n                div.className = classes.dib_1 \n                break;\n            case '5':\n                div.className = classes.dib_5\n                break;\n            case '25':\n                div.className = classes.dib_25\n                break;\n            case '50':\n                div.className = classes.dib_50\n                break;\n            case '100':\n                div.className = classes.dib_100\n                break;\n            default:\n                div.className = classes.dib_200\n        }        \n        div.innerHTML = value;\n        let bet = parseInt(this.props.bet) + parseInt(value);\n        let cash = parseInt(this.props.cash) - parseInt(value);\n        if(bet !== 0 && cash >= 0 && this.props.playerHandSum === 0){\n            let isPlay = true;\n            this.props.fetchMakeBet(bet, cash, isPlay);\n            document.getElementById('dibsBet').appendChild(div);\n        }\n        \n                \n    }\n\n    componentDidMount(){\n        if(userId == null){\n            this.setState({\n            isLogout: true\n        });\n        } else {\n            this.setState({\n                isLogout: false\n            });\n        }\n        this.props.getDataUser(userId);\n        console.log('enemyId = ', + enemyId);\n        \n        playHubProxy.on('onGameStart', function(enemy){\n            console.log(enemy);\n            this.setState({\n                enemyName: enemy.name,\n                enemyCash: enemy.cash,\n                enemyBet: enemy.bet\n            });\n            if(localStorage.getItem('cash') != null){\n                this.setState({                    \n                    cash: localStorage.getItem('cash'),\n                    bet: localStorage.getItem('bet')\n                });\n            } else {\n                this.setState({                    \n                    cash: this.props.cash,\n                    bet: this.props.bet\n                });\n            }\n        }.bind(this));\n\n        playHubProxy.on('onEnemyBet', function(enemy){\n            console.log(enemy);\n            this.setState({\n                enemyCash: enemy.cash,\n                enemyBet: enemy.bet\n            });\n        }.bind(this));\n\n        connection.start().done(function(){\n            console.log('start game');\n            playHubProxy.invoke('gameStart', userId, enemyId);\n            console.log(localStorage.getItem('cash'));\n            console.log(localStorage.getItem('bet'));\n        }.bind(this));\n    }\n\n    componentWillUnmount(){\n        playHubProxy.off('onGameStart');\n        playHubProxy.off('onEnemyBet');\n        connection.stop();\n        localStorage.removeItem('cash');\n        localStorage.removeItem('bet');\n    }\n\n        \n    render(){\n        if(this.state.isLogout){\n            return (<Redirect to='/' />)\n        }\n        return(\n            <div className={classes.PlayTable}>\n                <Rate \n                    bet={this.props.bet}\n                    cash={this.props.cash}\n                    name={this.props.nameUser}\n                />\n                <Enemy \n                    bet={this.state.enemyBet}\n                    cash={this.state.enemyCash}\n                    name={this.state.enemyName}\n                />\n                <DealerHand \n                    dealerHand={this.props.dealerHand}\n                    dealerHandSum={this.props.dealerHandSum}\n                />\n                <div id=\"dibsBet\"></div>\n                <PlayerHand \n                    playerHand={this.props.playerHand}\n                    playerHandSum={this.props.playerHandSum}\n                />\n                <Dibs \n                    dibs={this.props.dibs}\n                    onDibCLick={this.onCreateDibHandler}\n                />\n                <PlayButton \n                    onPlay={this.props.onPlayHandler}\n                    onEnough={this.props.onEnoughHandler}\n                    onMore={this.props.onMoreHandler}\n                    disabledPlay={!this.props.isPlay}\n                    disabledEnough={!this.props.isEnough}\n                    disabledMore={!this.props.isMore}\n                /> \n                <div className={classes.Button}>\n                    <NavLink to=\"/profile\">\n                        <Button \n                            type=\"success\" \n                        >Профиль</Button>\n                    </NavLink>         \n                    <Button \n                        type=\"error\"\n                        onClick={this.isLogout}\n                    >Выход</Button>\n                </div>                   \n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    if(connection.state === 1){\n        playHubProxy.invoke('userBet', state.playTable.cash, state.playTable.bet, enemyId);\n    } \n    if(localStorage.getItem('cash') == null) {\n        localStorage.setItem('cash', state.playTable.cash);\n        localStorage.setItem('bet', state.playTable.bet);\n    }\n    return{\n        deck: state.playTable.deck,\n        dibs:state.playTable.dibs,\n        bet: state.playTable.bet,\n        cash: state.playTable.cash,\n        nameUser: state.playTable.nameUser,\n        playerHand: state.playTable.playerHand,\n        playerHandSum: state.playTable.playerHandSum,\n        dealerHand: state.playTable.dealerHand,\n        dealerHandSum: state.playTable.dealerHandSum,\n        isPlay: state.playTable.isPlay,\n        isEnough: state.playTable.isEnough,\n        isMore: state.playTable.isMore,\n        backProfile: state.playTable.backProfile,\n        isExit: state.playTable.isExit\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return{\n        fetchMakeBet: (bet, cash, isPlay)=> dispatch(fetchMakeBet(bet, cash, isPlay)),\n        getDataUser: userId => dispatch(getDataUser(userId)),\n        onPlayHandler: () => dispatch(onPlayHandler()),\n        onEnoughHandler: () => dispatch(onEnoughHandler()),\n        onMoreHandler: () => dispatch(onMoreHandler())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayTable)"]},"metadata":{},"sourceType":"module"}