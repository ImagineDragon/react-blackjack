{"ast":null,"code":"import _classCallCheck from \"D:\\\\C#\\\\react-blackjack\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\C#\\\\react-blackjack\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\C#\\\\react-blackjack\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\C#\\\\react-blackjack\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\C#\\\\react-blackjack\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\C#\\\\react-blackjack\\\\front-end\\\\src\\\\containers\\\\Profile\\\\Profile.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './Profile.css';\nimport { Redirect } from 'react-router-dom';\nimport Button from '../../components/UI/Button/Button';\nimport { setActivePlayer as _setActivePlayer } from '../../store/actions/playTable';\nimport Users from '../../components/UI/UsersList/UsersList';\nimport ProfileConnection, { connection, playHubProxy } from '../../Hubs/ProfileHub';\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Profile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLogout: false,\n      ready: false\n    };\n\n    _this.isLogout = function () {\n      localStorage.removeItem('userId');\n\n      _this.setState({\n        isLogout: true\n      });\n\n      connection.stop();\n    };\n\n    _this.acceptGame = function (e) {\n      if (connection.state === 1) {\n        localStorage.setItem(\"enemyId\", e.target.id);\n\n        if (_this.state.ready) {\n          _this.readyState();\n        }\n\n        _this.props.setActivePlayer(parseInt(localStorage.getItem('userId')), true, 3);\n\n        playHubProxy.invoke(\"acceptGame\", localStorage.getItem('userId'), localStorage.getItem(\"enemyId\"));\n\n        _this.props.history.push('/play');\n      }\n    };\n\n    _this.playWithBot = function () {\n      if (_this.state.ready) {\n        _this.readyState();\n      }\n\n      _this.props.history.push('/play');\n    };\n\n    _this.readyState = function () {\n      if (connection.state === 1) {\n        playHubProxy.invoke(\"ready\", localStorage.getItem('userId'), !_this.state.ready);\n\n        _this.setState({\n          ready: !_this.state.ready\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      localStorage.removeItem('user');\n\n      if (localStorage.getItem('userId') === null) {\n        this.isLogout();\n      }\n\n      localStorage.setItem('enemyId', -1);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLogout) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          className: \"Profile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(ProfileConnection, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, this.props.user.name), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"\\u041F\\u043E\\u0447\\u0442\\u0430: \"), React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, this.props.user.email), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }), React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"\\u0421\\u0447\\u0435\\u0442: \"), React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, this.props.user.cash), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        })), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"Buttons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"success\",\n          onClick: this.playWithBot,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"\\u0418\\u0433\\u0440\\u0430\\u0442\\u044C \\u0441 \\u0431\\u043E\\u0442\\u043E\\u043C\"), React.createElement(Button, {\n          type: this.state.ready ? \"notReady\" : \"success\",\n          onClick: this.readyState,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, this.state.ready ? \"Не готов\" : \"Готов\"), React.createElement(Button, {\n          type: \"error\",\n          onClick: this.isLogout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"\\u0412\\u044B\\u0445\\u043E\\u0434\")), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }), React.createElement(Users, {\n          Count: this.props.users.length,\n          onClick: this.acceptGame,\n          Users: this.props.users,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        })));\n      }\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nfunction mapStateToProps(state) {\n  var _state$playTable = state.playTable,\n      users = _state$playTable.users,\n      user = _state$playTable.user;\n  return {\n    users: users,\n    user: user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setActivePlayer: function setActivePlayer(id, isBet, betCount) {\n      return dispatch(_setActivePlayer(id, isBet, betCount));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","map":{"version":3,"sources":["D:\\C#\\react-blackjack\\front-end\\src\\containers\\Profile\\Profile.js"],"names":["React","Component","connect","Redirect","Button","setActivePlayer","Users","ProfileConnection","connection","playHubProxy","Profile","state","isLogout","ready","localStorage","removeItem","setState","stop","acceptGame","e","setItem","target","id","readyState","props","parseInt","getItem","invoke","history","push","playWithBot","user","name","email","cash","users","length","mapStateToProps","playTable","mapDispatchToProps","dispatch","isBet","betCount"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport './Profile.css'\nimport {Redirect} from 'react-router-dom'\nimport Button from '../../components/UI/Button/Button'\n\nimport {setActivePlayer} from '../../store/actions/playTable'\n\nimport Users from '../../components/UI/UsersList/UsersList'\n\nimport ProfileConnection, {connection, playHubProxy} from '../../Hubs/ProfileHub'\n\nclass Profile extends Component{\n    state = {\n        isLogout: false,\n        ready: false\n    }\n\n    isLogout = () => {\n        localStorage.removeItem('userId');\n        this.setState({\n            isLogout: true\n        });\n        connection.stop();\n    }\n\n    componentDidMount(){\n        localStorage.removeItem('user');\n        if(localStorage.getItem('userId') === null){\n            this.isLogout();\n        }\n        localStorage.setItem('enemyId', -1);\n    }\n\n    componentWillUnmount(){\n    }\n\n    acceptGame = (e) => {\n        if(connection.state === 1){\n            localStorage.setItem(\"enemyId\", e.target.id);\n            if(this.state.ready){\n                this.readyState();\n            }\n            this.props.setActivePlayer(parseInt(localStorage.getItem('userId')), true, 3);\n            playHubProxy.invoke(\"acceptGame\", localStorage.getItem('userId'), localStorage.getItem(\"enemyId\"));\n            this.props.history.push('/play');\n        }\n    }\n\n    playWithBot = () => {\n        if(this.state.ready){\n            this.readyState();\n        }\n        this.props.history.push('/play');\n    }\n\n    readyState = () => {\n        if(connection.state === 1){\n            playHubProxy.invoke(\"ready\", localStorage.getItem('userId'), !this.state.ready);\n            this.setState({\n                ready: !this.state.ready\n            });\n        }\n    }\n\n    render(){\n        if(this.state.isLogout){\n            return (<Redirect to='/' />)\n        }else{\n            return(\n                <div className=\"Profile\">\n                    <ProfileConnection/>\n                    <div>\n                        <h1>{this.props.user.name}</h1>\n                        <hr />\n                        <p>\n                            <b>Почта: </b><em>{this.props.user.email}</em><br />\n                            <b>Счет: </b><em>{this.props.user.cash}</em><br />\n                        </p>\n                        <hr />\n                        <div className=\"Buttons\">\n                            <Button\n                                type=\"success\" \n                                onClick={this.playWithBot} \n                            >Играть с ботом</Button>\n                            <Button \n                                type={this.state.ready ? \"notReady\" : \"success\"} \n                                onClick={this.readyState} \n                            >{this.state.ready ? \"Не готов\" : \"Готов\"}</Button>\n                            <Button\n                                type=\"error\"\n                                onClick={this.isLogout} \n                            >Выход</Button>\n                        </div>\n                        <hr />\n                        <Users\n                            Count={this.props.users.length}\n                            onClick={this.acceptGame}\n                            Users={this.props.users}\n                        />\n                    </div>\n                </div>\n            )   \n        }\n             \n    }\n}\n\nfunction mapStateToProps(state) {\n    const { users, user } = state.playTable;\n    return {\n        users, user\n    };\n}\n\nfunction mapDispatchToProps(dispatch){\n    return{\n        setActivePlayer: (id, isBet, betCount) => dispatch(setActivePlayer(id, isBet, betCount))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)"]},"metadata":{},"sourceType":"module"}