{"ast":null,"code":"import _toConsumableArray from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport { Component } from 'react';\nimport { history } from '../store/history';\nimport { hubConnection } from 'signalr-no-jquery';\nimport { connect } from 'react-redux';\nimport { onGameStart as _onGameStart } from '../store/actions/playTable';\nexport var connection = hubConnection('http://localhost:3001'),\n    playHubProxy = connection.createHubProxy('playHub');\n\nvar PlayConnection =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlayConnection, _Component);\n\n  function PlayConnection() {\n    _classCallCheck(this, PlayConnection);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PlayConnection).apply(this, arguments));\n  }\n\n  _createClass(PlayConnection, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var userId = localStorage.getItem('userId');\n      this.props.getUserProfile(userId);\n      playHubProxy.on('onGameStart', function (user, enemy, messages, firstId) {\n        this.setState({\n          cash: user.cash,\n          bet: user.bet,\n          enemyName: enemy.name,\n          enemyCash: enemy.cash,\n          enemyBet: enemy.bet,\n          messages: messages\n        });\n        scrollDown();\n      }.bind(this));\n      playHubProxy.on('onEnemyBet', function (enemy, dibsBet) {\n        var tmp = document.createElement('div');\n        tmp.innerHTML = dibsBet;\n        document.getElementById('enemyDibsBet').appendChild(tmp);\n        this.setState({\n          enemyCash: enemy.cash,\n          enemyBet: enemy.bet\n        });\n      }.bind(this));\n      playHubProxy.on('onBet', function (user) {\n        this.setState({\n          cash: user.cash,\n          bet: user.bet\n        });\n      }.bind(this));\n      playHubProxy.on('onStopGame', function () {\n        this.props.history.push('/profile');\n      }.bind(this));\n      playHubProxy.on('onMessage', function (message) {\n        this.setState({\n          messages: _toConsumableArray(this.state.messages).concat([message])\n        });\n        scrollDown();\n      }.bind(this));\n      playHubProxy.on('onPlayOffer', function (userId) {\n        if (this.state.bet == this.state.enemyBet && this.state.bet > 0 && this.state.firstBet) {\n          this.setState({\n            isBet: false,\n            firstBet: false,\n            enableBet: false\n          });\n          this.props.onPlayWithUserHandler();\n        } else if (userId == localStorage.getItem('userId')) {\n          this.setState({\n            enableBet: false,\n            isRaise: false,\n            isCheck: false,\n            isFold: false\n          });\n        } else {\n          this.setState({\n            enableBet: true,\n            isFold: true,\n            isCheck: this.state.enemyBet > 0\n          });\n        }\n      }.bind(this));\n      playHubProxy.on('onTimer', function (time) {\n        this.setState({\n          time: time,\n          timer: true\n        });\n      }.bind(this));\n\n      if (enemyId != -1) {\n        connection.start().done(function () {\n          console.log('start game');\n          playHubProxy.invoke('gameStart', userId);\n        }.bind(this));\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      playHubProxy.off('onGameStart');\n      playHubProxy.off('onEnemyBet');\n      playHubProxy.off('onBet');\n      playHubProxy.off('onStopGame');\n      playHubProxy.off('onMessage');\n      playHubProxy.off('onPlayOffer');\n      playHubProxy.off('onTimer');\n      connection.stop();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return PlayConnection;\n}(Component);\n\nfunction mapStateToProps(state) {\n  var user = state.playTable.user;\n  return {\n    user: user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onGameStart: function onGameStart(user, enemy, messages) {\n      return dispatch(_onGameStart(user, enemy, messages));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayConnection);","map":{"version":3,"sources":["D:\\C#\\blackjack_WebAPI - new\\front-end\\src\\Hubs\\PlayTableHub.js"],"names":["Component","history","hubConnection","connect","onGameStart","connection","playHubProxy","createHubProxy","PlayConnection","userId","localStorage","getItem","props","getUserProfile","on","user","enemy","messages","firstId","setState","cash","bet","enemyName","name","enemyCash","enemyBet","scrollDown","bind","dibsBet","tmp","document","createElement","innerHTML","getElementById","appendChild","push","message","state","firstBet","isBet","enableBet","onPlayWithUserHandler","isRaise","isCheck","isFold","time","timer","enemyId","start","done","console","log","invoke","off","stop","mapStateToProps","playTable","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import {Component} from 'react'\r\n\r\nimport {history} from '../store/history'\r\n\r\nimport { hubConnection } from 'signalr-no-jquery';\r\n\r\nimport {connect} from 'react-redux'\r\n\r\nimport {onGameStart} from '../store/actions/playTable'\r\n\r\nexport const connection = hubConnection('http://localhost:3001'), playHubProxy = connection.createHubProxy('playHub');\r\n\r\nclass PlayConnection extends Component{\r\n    componentDidMount(){\r\n        const userId = localStorage.getItem('userId');\r\n        \r\n        this.props.getUserProfile(userId);\r\n\r\n        playHubProxy.on('onGameStart', function(user, enemy, messages, firstId){\r\n            this.setState({\r\n                cash: user.cash,\r\n                bet: user.bet,\r\n                enemyName: enemy.name,\r\n                enemyCash: enemy.cash,\r\n                enemyBet: enemy.bet,\r\n                messages: messages\r\n            });\r\n            scrollDown();\r\n        }.bind(this));\r\n\r\n        playHubProxy.on('onEnemyBet', function(enemy, dibsBet){\r\n            var tmp = document.createElement('div');\r\n            tmp.innerHTML = dibsBet;\r\n            document.getElementById('enemyDibsBet').appendChild(tmp);\r\n            this.setState({\r\n                enemyCash: enemy.cash,\r\n                enemyBet: enemy.bet\r\n            });\r\n        }.bind(this));\r\n\r\n        playHubProxy.on('onBet', function(user){                  \r\n            this.setState({                    \r\n                cash: user.cash,\r\n                bet: user.bet\r\n            });\r\n        }.bind(this));\r\n\r\n        playHubProxy.on('onStopGame', function(){\r\n            this.props.history.push('/profile');\r\n        }.bind(this));\r\n\r\n        playHubProxy.on('onMessage', function(message){\r\n            this.setState({\r\n                messages: [...this.state.messages, message]\r\n            });\r\n            scrollDown();\r\n        }.bind(this));\r\n\r\n        playHubProxy.on('onPlayOffer', function(userId){\r\n            if(this.state.bet == this.state.enemyBet && this.state.bet > 0 && this.state.firstBet){\r\n                this.setState({\r\n                    isBet: false,\r\n                    firstBet: false,\r\n                    enableBet: false\r\n                });\r\n                this.props.onPlayWithUserHandler();\r\n            } else if(userId == localStorage.getItem('userId')){\r\n                this.setState({\r\n                    enableBet: false,\r\n                    isRaise: false,\r\n                    isCheck: false,\r\n                    isFold: false\r\n                });\r\n            } else{\r\n                this.setState({\r\n                    enableBet: true,\r\n                    isFold: true,\r\n                    isCheck: this.state.enemyBet > 0\r\n                });\r\n            }\r\n        }.bind(this));\r\n\r\n        playHubProxy.on('onTimer', function(time){\r\n            this.setState({\r\n                time: time,\r\n                timer: true\r\n            });\r\n        }.bind(this));            \r\n\r\n        if(enemyId != -1){\r\n            connection.start().done(function(){\r\n                console.log('start game');\r\n                playHubProxy.invoke('gameStart', userId);\r\n            }.bind(this));\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        playHubProxy.off('onGameStart');\r\n        playHubProxy.off('onEnemyBet');\r\n        playHubProxy.off('onBet');\r\n        playHubProxy.off('onStopGame');\r\n        playHubProxy.off('onMessage');\r\n        playHubProxy.off('onPlayOffer');\r\n        playHubProxy.off('onTimer');\r\n\r\n        connection.stop();\r\n    }\r\n\r\n    render(){\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { user } = state.playTable;\r\n    return {\r\n        user\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return{\r\n        onGameStart: (user, enemy, messages) => dispatch(onGameStart(user, enemy, messages))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayConnection)"]},"metadata":{},"sourceType":"module"}