{"ast":null,"code":"import _toConsumableArray from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { FETCH_PLAY_START, FETCH_MAKE_BET, HAND_SUCCESS, WIN_GAME, LOSE_GAME, DRAW_GAME, DEAL_HAND, PLAY_HAND, USER_PROFILE, DATA_USER, ENOUGH_HAND, USER_CONNECT, NEW_USER_CONNECT, USER_DISCONNECT, USER_READY } from '../actions/actionType';\nvar initialState = {\n  deck: [{\n    name: 'Ace',\n    suit: 'Hearts',\n    value: 11\n  }, {\n    name: 'Two',\n    suit: 'Hearts',\n    value: 2\n  }, {\n    name: 'Three',\n    suit: 'Hearts',\n    value: 3\n  }, {\n    name: 'Four',\n    suit: 'Hearts',\n    value: 4\n  }, {\n    name: 'Five',\n    suit: 'Hearts',\n    value: 5\n  }, {\n    name: 'Six',\n    suit: 'Hearts',\n    value: 6\n  }, {\n    name: 'Seven',\n    suit: 'Hearts',\n    value: 7\n  }, {\n    name: 'Eight',\n    suit: 'Hearts',\n    value: 8\n  }, {\n    name: 'Nine',\n    suit: 'Hearts',\n    value: 9\n  }, {\n    name: 'Ten',\n    suit: 'Hearts',\n    value: 10\n  }, {\n    name: 'Jack',\n    suit: 'Hearts',\n    value: 10\n  }, {\n    name: 'Queen',\n    suit: 'Hearts',\n    value: 10\n  }, {\n    name: 'King',\n    suit: 'Hearts',\n    value: 10\n  }, {\n    name: 'Ace',\n    suit: 'Diamonds',\n    value: 11\n  }, {\n    name: 'Two',\n    suit: 'Diamonds',\n    value: 2\n  }, {\n    name: 'Three',\n    suit: 'Diamonds',\n    value: 3\n  }, {\n    name: 'Four',\n    suit: 'Diamonds',\n    value: 4\n  }, {\n    name: 'Five',\n    suit: 'Diamonds',\n    value: 5\n  }, {\n    name: 'Six',\n    suit: 'Diamonds',\n    value: 6\n  }, {\n    name: 'Seven',\n    suit: 'Diamonds',\n    value: 7\n  }, {\n    name: 'Eight',\n    suit: 'Diamonds',\n    value: 8\n  }, {\n    name: 'Nine',\n    suit: 'Diamonds',\n    value: 9\n  }, {\n    name: 'Ten',\n    suit: 'Diamonds',\n    value: 10\n  }, {\n    name: 'Jack',\n    suit: 'Diamonds',\n    value: 10\n  }, {\n    name: 'Queen',\n    suit: 'Diamonds',\n    value: 10\n  }, {\n    name: 'King',\n    suit: 'Diamonds',\n    value: 10\n  }, {\n    name: 'Ace',\n    suit: 'Clubs',\n    value: 11\n  }, {\n    name: 'Two',\n    suit: 'Clubs',\n    value: 2\n  }, {\n    name: 'Three',\n    suit: 'Clubs',\n    value: 3\n  }, {\n    name: 'Four',\n    suit: 'Clubs',\n    value: 4\n  }, {\n    name: 'Five',\n    suit: 'Clubs',\n    value: 5\n  }, {\n    name: 'Six',\n    suit: 'Clubs',\n    value: 6\n  }, {\n    name: 'Seven',\n    suit: 'Clubs',\n    value: 7\n  }, {\n    name: 'Eight',\n    suit: 'Clubs',\n    value: 8\n  }, {\n    name: 'Nine',\n    suit: 'Clubs',\n    value: 9\n  }, {\n    name: 'Ten',\n    suit: 'Clubs',\n    value: 10\n  }, {\n    name: 'Jack',\n    suit: 'Clubs',\n    value: 10\n  }, {\n    name: 'Queen',\n    suit: 'Clubs',\n    value: 10\n  }, {\n    name: 'King',\n    suit: 'Clubs',\n    value: 10\n  }, {\n    name: 'Ace',\n    suit: 'Spades',\n    value: 11\n  }, {\n    name: 'Two',\n    suit: 'Spades',\n    value: 2\n  }, {\n    name: 'Three',\n    suit: 'Spades',\n    value: 3\n  }, {\n    name: 'Four',\n    suit: 'Spades',\n    value: 4\n  }, {\n    name: 'Five',\n    suit: 'Spades',\n    value: 5\n  }, {\n    name: 'Six',\n    suit: 'Spades',\n    value: 6\n  }, {\n    name: 'Seven',\n    suit: 'Spades',\n    value: 7\n  }, {\n    name: 'Eight',\n    suit: 'Spades',\n    value: 8\n  }, {\n    name: 'Nine',\n    suit: 'Spades',\n    value: 9\n  }, {\n    name: 'Ten',\n    suit: 'Spades',\n    value: 10\n  }, {\n    name: 'Jack',\n    suit: 'Spades',\n    value: 10\n  }, {\n    name: 'Queen',\n    suit: 'Spades',\n    value: 10\n  }, {\n    name: 'King',\n    suit: 'Spades',\n    value: 10\n  }],\n  dibs: [{\n    id: 1,\n    value: '1',\n    classView: 'blue'\n  }, {\n    id: 2,\n    value: '5',\n    classView: 'blue'\n  }, {\n    id: 3,\n    value: '25',\n    classView: 'yellow'\n  }, {\n    id: 4,\n    value: '50',\n    classView: 'yellow'\n  }, {\n    id: 5,\n    value: '100',\n    classView: 'red'\n  }, {\n    id: 6,\n    value: '200',\n    classView: 'red'\n  }],\n  count: 0,\n  users: [],\n  user: {\n    id: -1,\n    bet: 0,\n    cash: 0,\n    name: '',\n    email: '',\n    playerHand: [],\n    playerHandSum: 0,\n    dealerHand: [],\n    dealerHandSum: 0,\n    isPlay: false,\n    isEnough: false,\n    isMore: false,\n    backProfile: false,\n    isExit: false\n  }\n};\nexport default function playReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USER_PROFILE:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          id: action.id,\n          cash: action.cash,\n          name: action.name,\n          email: action.email\n        })\n      });\n\n    case USER_CONNECT:\n      return _objectSpread({}, state, {\n        count: action.profiles.length,\n        users: action.profiles\n      });\n\n    case NEW_USER_CONNECT:\n      return _objectSpread({}, state, {\n        users: _toConsumableArray(state.users).concat([action.newUser]),\n        count: state.count + 1\n      });\n\n    case USER_DISCONNECT:\n      return _objectSpread({}, state, {\n        users: state.users.filter(function (user) {\n          return user.id !== action.profile.id;\n        }),\n        count: state.count - 1\n      });\n\n    case USER_READY:\n      return _objectSpread({}, state, {\n        users: state.users.map(function (user) {\n          return user.id === action.profile.id ? action.profile : user;\n        })\n      });\n\n    case FETCH_PLAY_START:\n      return _objectSpread({}, state);\n\n    case DATA_USER:\n      if (action.playerHand == undefined) {\n        return _objectSpread({}, state, {\n          user: {\n            playerHand: [],\n            playerHandSum: 0,\n            dealerHand: [],\n            dealerHandSum: 0,\n            bet: action.bet,\n            cash: action.cash,\n            nameUser: action.name,\n            isPlay: action.isPlay\n          }\n        });\n      } else {\n        return _objectSpread({}, state, {\n          user: {\n            playerHand: action.playerHand,\n            playerHandSum: action.playerHandSum,\n            dealerHand: action.dealerHand,\n            dealerHandSum: action.dealerHandSum,\n            bet: action.bet,\n            cash: action.cash,\n            nameUser: action.name,\n            isPlay: false,\n            isEnough: true,\n            isMore: true\n          }\n        });\n      }\n\n    case FETCH_MAKE_BET:\n      return _objectSpread({}, state, {\n        user: {\n          bet: action.bet,\n          cash: action.cash,\n          isPlay: action.isPlay\n        }\n      });\n\n    case ENOUGH_HAND:\n      return _objectSpread({}, state, {\n        user: {\n          isPlay: action.isPlay,\n          isEnough: action.isEnough,\n          isMore: action.isMore\n        }\n      });\n\n    case HAND_SUCCESS:\n      return _objectSpread({}, state, {\n        user: {\n          playerHand: action.playerHand,\n          playerHandSum: action.playerHandSum,\n          dealerHand: action.dealerHand,\n          dealerHandSum: action.dealerHandSum,\n          isPlay: false,\n          isEnough: true,\n          isMore: true\n        }\n      });\n\n    case WIN_GAME:\n      return _objectSpread({}, state, {\n        user: {\n          playerHandSum: action.playerHandSum,\n          dealerHandSum: action.dealerHandSum,\n          bet: action.bet,\n          cash: action.cash,\n          playerHand: action.playerHand,\n          dealerHand: action.dealerHand,\n          isEnough: false,\n          isMore: false\n        }\n      });\n\n    case LOSE_GAME:\n      return _objectSpread({}, state, {\n        user: {\n          playerHandSum: action.playerHandSum,\n          bet: action.bet,\n          dealerHandSum: action.dealerHandSum,\n          playerHand: action.playerHand,\n          dealerHand: action.dealerHand,\n          isEnough: false,\n          isMore: false\n        }\n      });\n\n    case DRAW_GAME:\n      return _objectSpread({}, state, {\n        user: {\n          playerHandSum: action.playerHandSum,\n          dealerHandSum: action.dealerHandSum,\n          bet: action.bet,\n          cash: action.cash,\n          playerHand: action.playerHand,\n          dealerHand: action.dealerHand,\n          isEnough: false,\n          isMore: false\n        }\n      });\n\n    case DEAL_HAND:\n      return _objectSpread({}, state, {\n        user: {\n          dealerHand: action.dealerHand,\n          dealerHandSum: action.dealerHandSum\n        }\n      });\n\n    case PLAY_HAND:\n      return _objectSpread({}, state, {\n        user: {\n          playerHand: action.playerHand,\n          playerHandSum: action.playerHandSum\n        }\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:\\C#\\blackjack_WebAPI - new\\front-end\\src\\store\\reducers\\playTable.js"],"names":["FETCH_PLAY_START","FETCH_MAKE_BET","HAND_SUCCESS","WIN_GAME","LOSE_GAME","DRAW_GAME","DEAL_HAND","PLAY_HAND","USER_PROFILE","DATA_USER","ENOUGH_HAND","USER_CONNECT","NEW_USER_CONNECT","USER_DISCONNECT","USER_READY","initialState","deck","name","suit","value","dibs","id","classView","count","users","user","bet","cash","email","playerHand","playerHandSum","dealerHand","dealerHandSum","isPlay","isEnough","isMore","backProfile","isExit","playReducer","state","action","type","profiles","length","newUser","filter","profile","map","undefined","nameUser"],"mappings":";;AAAA,SAAQA,gBAAR,EACQC,cADR,EAEQC,YAFR,EAGQC,QAHR,EAIQC,SAJR,EAKQC,SALR,EAMQC,SANR,EAOQC,SAPR,EAQQC,YARR,EASQC,SATR,EAUQC,WAVR,EAWQC,YAXR,EAYQC,gBAZR,EAaQC,eAbR,EAcQC,UAdR,QAcyB,uBAdzB;AAgBA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,CACF;AACIC,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GADE,EAMF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GANE,EAWF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAXE,EAgBF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAhBE,EAqBF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GArBE,EA0BF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA1BE,EA+BF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA/BE,EAoCF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GApCE,EAyCF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAzCE,EA8CF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA9CE,EAmDF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAnDE,EAwDF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAxDE,EA6DF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA7DE,EAkEF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAlEE,EAuEF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAvEE,EA4EF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA5EE,EAiFF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAjFE,EAsFF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAtFE,EA2FF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA3FE,EAgGF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAhGE,EAqGF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GArGE,EA0GF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA1GE,EA+GF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA/GE,EAoHF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GApHE,EAyHF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAzHE,EA8HF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA9HE,EAmIF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAnIE,EAwIF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAxIE,EA6IF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA7IE,EAkJF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAlJE,EAuJF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAvJE,EA4JF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA5JE,EAiKF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAjKE,EAsKF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAtKE,EA2KF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA3KE,EAgLF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAhLE,EAqLF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GArLE,EA0LF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA1LE,EA+LF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA/LE,EAoMF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GApME,EAyMF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAzME,EA8MF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA9ME,EAmNF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAnNE,EAwNF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAxNE,EA6NF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA7NE,EAkOF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAlOE,EAuOF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAvOE,EA4OF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA5OE,EAiPF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAjPE,EAsPF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAtPE,EA2PF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA3PE,EAgQF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAhQE,CADW;AAuQjBC,EAAAA,IAAI,EAAC,CACD;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIF,IAAAA,KAAK,EAAE,GAFX;AAGIG,IAAAA,SAAS,EAAE;AAHf,GADC,EAMD;AACID,IAAAA,EAAE,EAAE,CADR;AAEIF,IAAAA,KAAK,EAAE,GAFX;AAGIG,IAAAA,SAAS,EAAE;AAHf,GANC,EAWD;AACID,IAAAA,EAAE,EAAE,CADR;AAEIF,IAAAA,KAAK,EAAE,IAFX;AAGIG,IAAAA,SAAS,EAAE;AAHf,GAXC,EAgBD;AACID,IAAAA,EAAE,EAAE,CADR;AAEIF,IAAAA,KAAK,EAAE,IAFX;AAGIG,IAAAA,SAAS,EAAE;AAHf,GAhBC,EAqBD;AACID,IAAAA,EAAE,EAAE,CADR;AAEIF,IAAAA,KAAK,EAAE,KAFX;AAGIG,IAAAA,SAAS,EAAE;AAHf,GArBC,EA0BD;AACID,IAAAA,EAAE,EAAE,CADR;AAEIF,IAAAA,KAAK,EAAE,KAFX;AAGIG,IAAAA,SAAS,EAAE;AAHf,GA1BC,CAvQY;AAuSjBC,EAAAA,KAAK,EAAE,CAvSU;AAwSjBC,EAAAA,KAAK,EAAE,EAxSU;AAySjBC,EAAAA,IAAI,EAAE;AACFJ,IAAAA,EAAE,EAAE,CAAC,CADH;AAEFK,IAAAA,GAAG,EAAE,CAFH;AAGFC,IAAAA,IAAI,EAAE,CAHJ;AAIFV,IAAAA,IAAI,EAAE,EAJJ;AAKFW,IAAAA,KAAK,EAAE,EALL;AAMFC,IAAAA,UAAU,EAAE,EANV;AAOFC,IAAAA,aAAa,EAAE,CAPb;AAQFC,IAAAA,UAAU,EAAE,EARV;AASFC,IAAAA,aAAa,EAAE,CATb;AAUFC,IAAAA,MAAM,EAAE,KAVN;AAWFC,IAAAA,QAAQ,EAAE,KAXR;AAYFC,IAAAA,MAAM,EAAE,KAZN;AAaFC,IAAAA,WAAW,EAAE,KAbX;AAcFC,IAAAA,MAAM,EAAE;AAdN;AAzSW,CAArB;AA2TA,eAAe,SAASC,WAAT,GAAkD;AAAA,MAA7BC,KAA6B,uEAArBxB,YAAqB;AAAA,MAAPyB,MAAO;;AAC7D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKjC,YAAL;AACI,+BACO+B,KADP;AAEQd,QAAAA,IAAI,oBACGc,KAAK,CAACd,IADT;AAEAJ,UAAAA,EAAE,EAAEmB,MAAM,CAACnB,EAFX;AAGAM,UAAAA,IAAI,EAAEa,MAAM,CAACb,IAHb;AAIAV,UAAAA,IAAI,EAAEuB,MAAM,CAACvB,IAJb;AAKAW,UAAAA,KAAK,EAAEY,MAAM,CAACZ;AALd;AAFZ;;AAUJ,SAAKjB,YAAL;AACI,+BACO4B,KADP;AAEIhB,QAAAA,KAAK,EAAEiB,MAAM,CAACE,QAAP,CAAgBC,MAF3B;AAGInB,QAAAA,KAAK,EAAEgB,MAAM,CAACE;AAHlB;;AAKJ,SAAK9B,gBAAL;AACI,+BACO2B,KADP;AAEIf,QAAAA,KAAK,qBAAMe,KAAK,CAACf,KAAZ,UAAmBgB,MAAM,CAACI,OAA1B,EAFT;AAGIrB,QAAAA,KAAK,EAAEgB,KAAK,CAAChB,KAAN,GAAc;AAHzB;;AAKJ,SAAKV,eAAL;AACI,+BACO0B,KADP;AAEIf,QAAAA,KAAK,EAAEe,KAAK,CAACf,KAAN,CAAYqB,MAAZ,CAAmB,UAAApB,IAAI;AAAA,iBAAIA,IAAI,CAACJ,EAAL,KAAYmB,MAAM,CAACM,OAAP,CAAezB,EAA/B;AAAA,SAAvB,CAFX;AAGIE,QAAAA,KAAK,EAAEgB,KAAK,CAAChB,KAAN,GAAc;AAHzB;;AAKJ,SAAKT,UAAL;AACI,+BACOyB,KADP;AAEIf,QAAAA,KAAK,EAAEe,KAAK,CAACf,KAAN,CAAYuB,GAAZ,CAAgB,UAAAtB,IAAI;AAAA,iBAAIA,IAAI,CAACJ,EAAL,KAAYmB,MAAM,CAACM,OAAP,CAAezB,EAA3B,GAAgCmB,MAAM,CAACM,OAAvC,GAAiDrB,IAArD;AAAA,SAApB;AAFX;;AAIJ,SAAKzB,gBAAL;AACI,+BACOuC,KADP;;AAGJ,SAAK9B,SAAL;AACI,UAAG+B,MAAM,CAACX,UAAP,IAAqBmB,SAAxB,EAAkC;AAC9B,iCACOT,KADP;AAEId,UAAAA,IAAI,EAAE;AACFI,YAAAA,UAAU,EAAE,EADV;AAEFC,YAAAA,aAAa,EAAE,CAFb;AAGFC,YAAAA,UAAU,EAAE,EAHV;AAIFC,YAAAA,aAAa,EAAE,CAJb;AAKFN,YAAAA,GAAG,EAAEc,MAAM,CAACd,GALV;AAMFC,YAAAA,IAAI,EAAEa,MAAM,CAACb,IANX;AAOFsB,YAAAA,QAAQ,EAAET,MAAM,CAACvB,IAPf;AAQFgB,YAAAA,MAAM,EAAEO,MAAM,CAACP;AARb;AAFV;AAaH,OAdD,MAcM;AACF,iCACOM,KADP;AAEId,UAAAA,IAAI,EAAE;AACFI,YAAAA,UAAU,EAAEW,MAAM,CAACX,UADjB;AAEFC,YAAAA,aAAa,EAAEU,MAAM,CAACV,aAFpB;AAGFC,YAAAA,UAAU,EAAES,MAAM,CAACT,UAHjB;AAIFC,YAAAA,aAAa,EAAEQ,MAAM,CAACR,aAJpB;AAKFN,YAAAA,GAAG,EAAEc,MAAM,CAACd,GALV;AAMFC,YAAAA,IAAI,EAAEa,MAAM,CAACb,IANX;AAOFsB,YAAAA,QAAQ,EAAET,MAAM,CAACvB,IAPf;AAQFgB,YAAAA,MAAM,EAAE,KARN;AASFC,YAAAA,QAAQ,EAAE,IATR;AAUFC,YAAAA,MAAM,EAAE;AAVN;AAFV;AAeH;;AACL,SAAKlC,cAAL;AACI,+BACOsC,KADP;AAEId,QAAAA,IAAI,EAAE;AACFC,UAAAA,GAAG,EAAEc,MAAM,CAACd,GADV;AAEFC,UAAAA,IAAI,EAAEa,MAAM,CAACb,IAFX;AAGFM,UAAAA,MAAM,EAAEO,MAAM,CAACP;AAHb;AAFV;;AAQJ,SAAKvB,WAAL;AACI,+BACO6B,KADP;AAEId,QAAAA,IAAI,EAAE;AACFQ,UAAAA,MAAM,EAAEO,MAAM,CAACP,MADb;AAEFC,UAAAA,QAAQ,EAAEM,MAAM,CAACN,QAFf;AAGFC,UAAAA,MAAM,EAAEK,MAAM,CAACL;AAHb;AAFV;;AAQJ,SAAKjC,YAAL;AACI,+BACOqC,KADP;AAEId,QAAAA,IAAI,EAAE;AACFI,UAAAA,UAAU,EAAEW,MAAM,CAACX,UADjB;AAEFC,UAAAA,aAAa,EAAEU,MAAM,CAACV,aAFpB;AAGFC,UAAAA,UAAU,EAAES,MAAM,CAACT,UAHjB;AAIFC,UAAAA,aAAa,EAAEQ,MAAM,CAACR,aAJpB;AAKFC,UAAAA,MAAM,EAAE,KALN;AAMFC,UAAAA,QAAQ,EAAE,IANR;AAOFC,UAAAA,MAAM,EAAE;AAPN;AAFV;;AAYJ,SAAKhC,QAAL;AACI,+BACOoC,KADP;AAEId,QAAAA,IAAI,EAAE;AACFK,UAAAA,aAAa,EAAEU,MAAM,CAACV,aADpB;AAEFE,UAAAA,aAAa,EAAEQ,MAAM,CAACR,aAFpB;AAGFN,UAAAA,GAAG,EAAEc,MAAM,CAACd,GAHV;AAIFC,UAAAA,IAAI,EAAEa,MAAM,CAACb,IAJX;AAKFE,UAAAA,UAAU,EAAEW,MAAM,CAACX,UALjB;AAMFE,UAAAA,UAAU,EAAES,MAAM,CAACT,UANjB;AAOFG,UAAAA,QAAQ,EAAE,KAPR;AAQFC,UAAAA,MAAM,EAAE;AARN;AAFV;;AAaJ,SAAK/B,SAAL;AACI,+BACOmC,KADP;AAEId,QAAAA,IAAI,EAAE;AACFK,UAAAA,aAAa,EAAEU,MAAM,CAACV,aADpB;AAEFJ,UAAAA,GAAG,EAAEc,MAAM,CAACd,GAFV;AAGFM,UAAAA,aAAa,EAAEQ,MAAM,CAACR,aAHpB;AAIFH,UAAAA,UAAU,EAAEW,MAAM,CAACX,UAJjB;AAKFE,UAAAA,UAAU,EAAES,MAAM,CAACT,UALjB;AAMFG,UAAAA,QAAQ,EAAE,KANR;AAOFC,UAAAA,MAAM,EAAE;AAPN;AAFV;;AAYJ,SAAK9B,SAAL;AACI,+BACOkC,KADP;AAEId,QAAAA,IAAI,EAAE;AACFK,UAAAA,aAAa,EAAEU,MAAM,CAACV,aADpB;AAEFE,UAAAA,aAAa,EAAEQ,MAAM,CAACR,aAFpB;AAGFN,UAAAA,GAAG,EAAEc,MAAM,CAACd,GAHV;AAIFC,UAAAA,IAAI,EAAEa,MAAM,CAACb,IAJX;AAKFE,UAAAA,UAAU,EAAEW,MAAM,CAACX,UALjB;AAMFE,UAAAA,UAAU,EAAES,MAAM,CAACT,UANjB;AAOFG,UAAAA,QAAQ,EAAE,KAPR;AAQFC,UAAAA,MAAM,EAAE;AARN;AAFV;;AAaJ,SAAK7B,SAAL;AACI,+BACOiC,KADP;AAEId,QAAAA,IAAI,EAAE;AACFM,UAAAA,UAAU,EAAES,MAAM,CAACT,UADjB;AAEFC,UAAAA,aAAa,EAAEQ,MAAM,CAACR;AAFpB;AAFV;;AAOJ,SAAKzB,SAAL;AACI,+BACOgC,KADP;AAEId,QAAAA,IAAI,EAAE;AACFI,UAAAA,UAAU,EAAEW,MAAM,CAACX,UADjB;AAEFC,UAAAA,aAAa,EAAEU,MAAM,CAACV;AAFpB;AAFV;;AAOJ;AACI,aAAOS,KAAP;AAhKR;AAkKH","sourcesContent":["import {FETCH_PLAY_START,\n        FETCH_MAKE_BET,\n        HAND_SUCCESS,\n        WIN_GAME,\n        LOSE_GAME,\n        DRAW_GAME,\n        DEAL_HAND,\n        PLAY_HAND,\n        USER_PROFILE,\n        DATA_USER,\n        ENOUGH_HAND,\n        USER_CONNECT,\n        NEW_USER_CONNECT,\n        USER_DISCONNECT,\n        USER_READY} from '../actions/actionType'\n\nconst initialState = {\n    deck: [\n        {\n            name: 'Ace',\n            suit: 'Hearts',\n            value: 11\n        },\n        {\n            name: 'Two',\n            suit: 'Hearts',\n            value: 2\n        },\n        {\n            name: 'Three',\n            suit: 'Hearts',\n            value: 3\n        },\n        {\n            name: 'Four',\n            suit: 'Hearts',\n            value: 4\n        },\n        {\n            name: 'Five',\n            suit: 'Hearts',\n            value: 5\n        },\n        {\n            name: 'Six',\n            suit: 'Hearts',\n            value: 6\n        },\n        {\n            name: 'Seven',\n            suit: 'Hearts',\n            value: 7\n        },\n        {\n            name: 'Eight',\n            suit: 'Hearts',\n            value: 8\n        },\n        {\n            name: 'Nine',\n            suit: 'Hearts',\n            value: 9\n        },\n        {\n            name: 'Ten',\n            suit: 'Hearts',\n            value: 10\n        },\n        {\n            name: 'Jack',\n            suit: 'Hearts',\n            value: 10\n        },\n        {\n            name: 'Queen',\n            suit: 'Hearts',\n            value: 10\n        },\n        {\n            name: 'King',\n            suit: 'Hearts',\n            value: 10\n        },\n        {\n            name: 'Ace',\n            suit: 'Diamonds',\n            value: 11\n        },\n        {\n            name: 'Two',\n            suit: 'Diamonds',\n            value: 2\n        },\n        {\n            name: 'Three',\n            suit: 'Diamonds',\n            value: 3\n        },\n        {\n            name: 'Four',\n            suit: 'Diamonds',\n            value: 4\n        },\n        {\n            name: 'Five',\n            suit: 'Diamonds',\n            value: 5\n        },\n        {\n            name: 'Six',\n            suit: 'Diamonds',\n            value: 6\n        },\n        {\n            name: 'Seven',\n            suit: 'Diamonds',\n            value: 7\n        },\n        {\n            name: 'Eight',\n            suit: 'Diamonds',\n            value: 8\n        },\n        {\n            name: 'Nine',\n            suit: 'Diamonds',\n            value: 9\n        },\n        {\n            name: 'Ten',\n            suit: 'Diamonds',\n            value: 10\n        },\n        {\n            name: 'Jack',\n            suit: 'Diamonds',\n            value: 10\n        },\n        {\n            name: 'Queen',\n            suit: 'Diamonds',\n            value: 10\n        },\n        {\n            name: 'King',\n            suit: 'Diamonds',\n            value: 10\n        },\n        {\n            name: 'Ace',\n            suit: 'Clubs',\n            value: 11\n        },\n        {\n            name: 'Two',\n            suit: 'Clubs',\n            value: 2\n        },\n        {\n            name: 'Three',\n            suit: 'Clubs',\n            value: 3\n        },\n        {\n            name: 'Four',\n            suit: 'Clubs',\n            value: 4\n        },\n        {\n            name: 'Five',\n            suit: 'Clubs',\n            value: 5\n        },\n        {\n            name: 'Six',\n            suit: 'Clubs',\n            value: 6\n        },\n        {\n            name: 'Seven',\n            suit: 'Clubs',\n            value: 7\n        },\n        {\n            name: 'Eight',\n            suit: 'Clubs',\n            value: 8\n        },\n        {\n            name: 'Nine',\n            suit: 'Clubs',\n            value: 9\n        },\n        {\n            name: 'Ten',\n            suit: 'Clubs',\n            value: 10\n        },\n        {\n            name: 'Jack',\n            suit: 'Clubs',\n            value: 10\n        },\n        {\n            name: 'Queen',\n            suit: 'Clubs',\n            value: 10\n        },\n        {\n            name: 'King',\n            suit: 'Clubs',\n            value: 10\n        },\n        {\n            name: 'Ace',\n            suit: 'Spades',\n            value: 11\n        },\n        {\n            name: 'Two',\n            suit: 'Spades',\n            value: 2\n        },\n        {\n            name: 'Three',\n            suit: 'Spades',\n            value: 3\n        },\n        {\n            name: 'Four',\n            suit: 'Spades',\n            value: 4\n        },\n        {\n            name: 'Five',\n            suit: 'Spades',\n            value: 5\n        },\n        {\n            name: 'Six',\n            suit: 'Spades',\n            value: 6\n        },\n        {\n            name: 'Seven',\n            suit: 'Spades',\n            value: 7\n        },\n        {\n            name: 'Eight',\n            suit: 'Spades',\n            value: 8\n        },\n        {\n            name: 'Nine',\n            suit: 'Spades',\n            value: 9\n        },\n        {\n            name: 'Ten',\n            suit: 'Spades',\n            value: 10\n        },\n        {\n            name: 'Jack',\n            suit: 'Spades',\n            value: 10\n        },\n        {\n            name: 'Queen',\n            suit: 'Spades',\n            value: 10\n        },\n        {\n            name: 'King',\n            suit: 'Spades',\n            value: 10\n        }\n    ],\n    dibs:[\n        {\n            id: 1,\n            value: '1',\n            classView: 'blue'\n        },\n        {\n            id: 2,\n            value: '5',\n            classView: 'blue'\n        },\n        {\n            id: 3,\n            value: '25',\n            classView: 'yellow'\n        },\n        {\n            id: 4,\n            value: '50',\n            classView: 'yellow'\n        },\n        {\n            id: 5,\n            value: '100',\n            classView: 'red'\n        },\n        {\n            id: 6,\n            value: '200',\n            classView: 'red'\n        }\n    ],\n    count: 0,\n    users: [],\n    user: {\n        id: -1,\n        bet: 0,\n        cash: 0,\n        name: '',\n        email: '',\n        playerHand: [],\n        playerHandSum: 0,\n        dealerHand: [],\n        dealerHandSum: 0,\n        isPlay: false,\n        isEnough: false,\n        isMore: false,\n        backProfile: false,\n        isExit: false\n    }\n}\n\nexport default function playReducer(state = initialState, action){\n    switch(action.type){\n        case USER_PROFILE:\n            return{\n                ...state,\n                    user: {\n                        ...state.user,\n                        id: action.id,\n                        cash: action.cash,\n                        name: action.name,\n                        email: action.email\n                    }\n            }\n        case USER_CONNECT:\n            return{\n                ...state,\n                count: action.profiles.length,\n                users: action.profiles\n            }\n        case NEW_USER_CONNECT:\n            return{\n                ...state,\n                users: [...state.users, action.newUser],\n                count: state.count + 1\n            }\n        case USER_DISCONNECT:\n            return{\n                ...state,\n                users: state.users.filter(user => user.id !== action.profile.id),\n                count: state.count - 1\n            }\n        case USER_READY:\n            return{\n                ...state,\n                users: state.users.map(user => user.id === action.profile.id ? action.profile : user)\n            }\n        case FETCH_PLAY_START:\n            return{\n                ...state\n            }\n        case DATA_USER:\n            if(action.playerHand == undefined){\n                return{\n                    ...state,\n                    user: {\n                        playerHand: [],\n                        playerHandSum: 0,\n                        dealerHand: [],\n                        dealerHandSum: 0,\n                        bet: action.bet,\n                        cash: action.cash,\n                        nameUser: action.name,\n                        isPlay: action.isPlay\n                    }\n                }\n            } else{\n                return{\n                    ...state,\n                    user: {\n                        playerHand: action.playerHand,\n                        playerHandSum: action.playerHandSum,\n                        dealerHand: action.dealerHand,\n                        dealerHandSum: action.dealerHandSum,\n                        bet: action.bet,\n                        cash: action.cash,\n                        nameUser: action.name,\n                        isPlay: false,\n                        isEnough: true,\n                        isMore: true\n                    }\n                }\n            }\n        case FETCH_MAKE_BET:\n            return{\n                ...state, \n                user: {\n                    bet: action.bet, \n                    cash: action.cash,\n                    isPlay: action.isPlay\n                }\n            }\n        case ENOUGH_HAND:\n            return{\n                ...state,\n                user: {\n                    isPlay: action.isPlay,\n                    isEnough: action.isEnough,\n                    isMore: action.isMore\n                }\n            }\n        case HAND_SUCCESS:\n            return{\n                ...state,\n                user: {\n                    playerHand: action.playerHand,\n                    playerHandSum: action.playerHandSum,\n                    dealerHand: action.dealerHand,\n                    dealerHandSum: action.dealerHandSum,\n                    isPlay: false,\n                    isEnough: true,\n                    isMore: true\n                }\n            }\n        case WIN_GAME:\n            return{\n                ...state,\n                user: {\n                    playerHandSum: action.playerHandSum,\n                    dealerHandSum: action.dealerHandSum,\n                    bet: action.bet,\n                    cash: action.cash,\n                    playerHand: action.playerHand,\n                    dealerHand: action.dealerHand,\n                    isEnough: false,\n                    isMore: false\n                }\n            }\n        case LOSE_GAME:\n            return{\n                ...state,\n                user: {\n                    playerHandSum: action.playerHandSum,\n                    bet: action.bet,\n                    dealerHandSum: action.dealerHandSum,\n                    playerHand: action.playerHand,\n                    dealerHand: action.dealerHand,\n                    isEnough: false,\n                    isMore: false\n                }\n            }\n        case DRAW_GAME:\n            return{\n                ...state,\n                user: {\n                    playerHandSum: action.playerHandSum,\n                    dealerHandSum: action.dealerHandSum,\n                    bet: action.bet,\n                    cash: action.cash,\n                    playerHand: action.playerHand,\n                    dealerHand: action.dealerHand,\n                    isEnough: false,\n                    isMore: false\n                }\n            }\n        case DEAL_HAND:\n            return{\n                ...state,\n                user: {\n                    dealerHand: action.dealerHand,\n                    dealerHandSum: action.dealerHandSum\n                }\n            }\n        case PLAY_HAND:\n            return{\n                ...state,\n                user: {\n                    playerHand: action.playerHand,\n                    playerHandSum: action.playerHandSum\n                }\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}