{"ast":null,"code":"import _objectSpread from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { FETCH_PLAY_START, FETCH_MAKE_BET, HAND_SUCCESS, WIN_GAME, LOSE_GAME, DRAW_GAME, DEAL_HAND, PLAY_HAND, DATA_USER, ENOUGH_HAND } from '../actions/actionType';\nvar initialState = {\n  deck: [{\n    name: 'Ace',\n    suit: 'Hearts',\n    value: 11\n  }, {\n    name: 'Two',\n    suit: 'Hearts',\n    value: 2\n  }, {\n    name: 'Three',\n    suit: 'Hearts',\n    value: 3\n  }, {\n    name: 'Four',\n    suit: 'Hearts',\n    value: 4\n  }, {\n    name: 'Five',\n    suit: 'Hearts',\n    value: 5\n  }, {\n    name: 'Six',\n    suit: 'Hearts',\n    value: 6\n  }, {\n    name: 'Seven',\n    suit: 'Hearts',\n    value: 7\n  }, {\n    name: 'Eight',\n    suit: 'Hearts',\n    value: 8\n  }, {\n    name: 'Nine',\n    suit: 'Hearts',\n    value: 9\n  }, {\n    name: 'Ten',\n    suit: 'Hearts',\n    value: 10\n  }, {\n    name: 'Jack',\n    suit: 'Hearts',\n    value: 10\n  }, {\n    name: 'Queen',\n    suit: 'Hearts',\n    value: 10\n  }, {\n    name: 'King',\n    suit: 'Hearts',\n    value: 10\n  }, {\n    name: 'Ace',\n    suit: 'Diamonds',\n    value: 11\n  }, {\n    name: 'Two',\n    suit: 'Diamonds',\n    value: 2\n  }, {\n    name: 'Three',\n    suit: 'Diamonds',\n    value: 3\n  }, {\n    name: 'Four',\n    suit: 'Diamonds',\n    value: 4\n  }, {\n    name: 'Five',\n    suit: 'Diamonds',\n    value: 5\n  }, {\n    name: 'Six',\n    suit: 'Diamonds',\n    value: 6\n  }, {\n    name: 'Seven',\n    suit: 'Diamonds',\n    value: 7\n  }, {\n    name: 'Eight',\n    suit: 'Diamonds',\n    value: 8\n  }, {\n    name: 'Nine',\n    suit: 'Diamonds',\n    value: 9\n  }, {\n    name: 'Ten',\n    suit: 'Diamonds',\n    value: 10\n  }, {\n    name: 'Jack',\n    suit: 'Diamonds',\n    value: 10\n  }, {\n    name: 'Queen',\n    suit: 'Diamonds',\n    value: 10\n  }, {\n    name: 'King',\n    suit: 'Diamonds',\n    value: 10\n  }, {\n    name: 'Ace',\n    suit: 'Clubs',\n    value: 11\n  }, {\n    name: 'Two',\n    suit: 'Clubs',\n    value: 2\n  }, {\n    name: 'Three',\n    suit: 'Clubs',\n    value: 3\n  }, {\n    name: 'Four',\n    suit: 'Clubs',\n    value: 4\n  }, {\n    name: 'Five',\n    suit: 'Clubs',\n    value: 5\n  }, {\n    name: 'Six',\n    suit: 'Clubs',\n    value: 6\n  }, {\n    name: 'Seven',\n    suit: 'Clubs',\n    value: 7\n  }, {\n    name: 'Eight',\n    suit: 'Clubs',\n    value: 8\n  }, {\n    name: 'Nine',\n    suit: 'Clubs',\n    value: 9\n  }, {\n    name: 'Ten',\n    suit: 'Clubs',\n    value: 10\n  }, {\n    name: 'Jack',\n    suit: 'Clubs',\n    value: 10\n  }, {\n    name: 'Queen',\n    suit: 'Clubs',\n    value: 10\n  }, {\n    name: 'King',\n    suit: 'Clubs',\n    value: 10\n  }, {\n    name: 'Ace',\n    suit: 'Spades',\n    value: 11\n  }, {\n    name: 'Two',\n    suit: 'Spades',\n    value: 2\n  }, {\n    name: 'Three',\n    suit: 'Spades',\n    value: 3\n  }, {\n    name: 'Four',\n    suit: 'Spades',\n    value: 4\n  }, {\n    name: 'Five',\n    suit: 'Spades',\n    value: 5\n  }, {\n    name: 'Six',\n    suit: 'Spades',\n    value: 6\n  }, {\n    name: 'Seven',\n    suit: 'Spades',\n    value: 7\n  }, {\n    name: 'Eight',\n    suit: 'Spades',\n    value: 8\n  }, {\n    name: 'Nine',\n    suit: 'Spades',\n    value: 9\n  }, {\n    name: 'Ten',\n    suit: 'Spades',\n    value: 10\n  }, {\n    name: 'Jack',\n    suit: 'Spades',\n    value: 10\n  }, {\n    name: 'Queen',\n    suit: 'Spades',\n    value: 10\n  }, {\n    name: 'King',\n    suit: 'Spades',\n    value: 10\n  }],\n  dibs: [{\n    id: 1,\n    value: '1',\n    classView: 'blue'\n  }, {\n    id: 2,\n    value: '5',\n    classView: 'blue'\n  }, {\n    id: 3,\n    value: '25',\n    classView: 'yellow'\n  }, {\n    id: 4,\n    value: '50',\n    classView: 'yellow'\n  }, {\n    id: 5,\n    value: '100',\n    classView: 'red'\n  }, {\n    id: 6,\n    value: '200',\n    classView: 'red'\n  }]\n};\nexport default function playReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case DATA_USER:\n      if (action.playerHand == undefined) {\n        return _objectSpread({}, state, {\n          user: {\n            playerHand: [],\n            playerHandSum: 0,\n            dealerHand: [],\n            dealerHandSum: 0,\n            bet: action.bet,\n            cash: action.cash,\n            nameUser: action.name,\n            isPlay: action.isPlay\n          }\n        });\n      } else {\n        return _objectSpread({}, state, {\n          user: {\n            playerHand: action.playerHand,\n            playerHandSum: action.playerHandSum,\n            dealerHand: action.dealerHand,\n            dealerHandSum: action.dealerHandSum,\n            bet: action.bet,\n            cash: action.cash,\n            nameUser: action.name,\n            isPlay: false,\n            isEnough: true,\n            isMore: true\n          }\n        });\n      }\n\n    case FETCH_MAKE_BET:\n      return _objectSpread({}, state, {\n        user: {\n          bet: action.bet,\n          cash: action.cash,\n          isPlay: action.isPlay\n        }\n      });\n\n    case ENOUGH_HAND:\n      return _objectSpread({}, state, {\n        user: {\n          isPlay: action.isPlay,\n          isEnough: action.isEnough,\n          isMore: action.isMore\n        }\n      });\n\n    case HAND_SUCCESS:\n      return _objectSpread({}, state, {\n        user: {\n          playerHand: action.playerHand,\n          playerHandSum: action.playerHandSum,\n          dealerHand: action.dealerHand,\n          dealerHandSum: action.dealerHandSum,\n          isPlay: false,\n          isEnough: true,\n          isMore: true\n        }\n      });\n\n    case WIN_GAME:\n      return _objectSpread({}, state, {\n        user: {\n          playerHandSum: action.playerHandSum,\n          dealerHandSum: action.dealerHandSum,\n          bet: action.bet,\n          cash: action.cash,\n          playerHand: action.playerHand,\n          dealerHand: action.dealerHand,\n          isEnough: false,\n          isMore: false\n        }\n      });\n\n    case LOSE_GAME:\n      return _objectSpread({}, state, {\n        user: {\n          playerHandSum: action.playerHandSum,\n          bet: action.bet,\n          dealerHandSum: action.dealerHandSum,\n          playerHand: action.playerHand,\n          dealerHand: action.dealerHand,\n          isEnough: false,\n          isMore: false\n        }\n      });\n\n    case DRAW_GAME:\n      return _objectSpread({}, state, {\n        user: {\n          playerHandSum: action.playerHandSum,\n          dealerHandSum: action.dealerHandSum,\n          bet: action.bet,\n          cash: action.cash,\n          playerHand: action.playerHand,\n          dealerHand: action.dealerHand,\n          isEnough: false,\n          isMore: false\n        }\n      });\n\n    case DEAL_HAND:\n      return _objectSpread({}, state, {\n        user: {\n          dealerHand: action.dealerHand,\n          dealerHandSum: action.dealerHandSum\n        }\n      });\n\n    case PLAY_HAND:\n      return _objectSpread({}, state, {\n        user: {\n          playerHand: action.playerHand,\n          playerHandSum: action.playerHandSum\n        }\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:\\C#\\blackjack_WebAPI - new\\front-end\\src\\store\\reducers\\playTable.js"],"names":["FETCH_PLAY_START","FETCH_MAKE_BET","HAND_SUCCESS","WIN_GAME","LOSE_GAME","DRAW_GAME","DEAL_HAND","PLAY_HAND","DATA_USER","ENOUGH_HAND","initialState","deck","name","suit","value","dibs","id","classView","playReducer","state","action","type","playerHand","undefined","user","playerHandSum","dealerHand","dealerHandSum","bet","cash","nameUser","isPlay","isEnough","isMore"],"mappings":";AAAA,SAAQA,gBAAR,EACQC,cADR,EAEQC,YAFR,EAGQC,QAHR,EAIQC,SAJR,EAKQC,SALR,EAMQC,SANR,EAOQC,SAPR,EAQQC,SARR,EASQC,WATR,QAS0B,uBAT1B;AAWA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,CACF;AACIC,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GADE,EAMF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GANE,EAWF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAXE,EAgBF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAhBE,EAqBF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GArBE,EA0BF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA1BE,EA+BF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA/BE,EAoCF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GApCE,EAyCF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAzCE,EA8CF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA9CE,EAmDF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAnDE,EAwDF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAxDE,EA6DF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA7DE,EAkEF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAlEE,EAuEF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAvEE,EA4EF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA5EE,EAiFF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAjFE,EAsFF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAtFE,EA2FF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA3FE,EAgGF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAhGE,EAqGF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GArGE,EA0GF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA1GE,EA+GF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA/GE,EAoHF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GApHE,EAyHF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAzHE,EA8HF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA9HE,EAmIF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAnIE,EAwIF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAxIE,EA6IF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA7IE,EAkJF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAlJE,EAuJF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAvJE,EA4JF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA5JE,EAiKF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAjKE,EAsKF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAtKE,EA2KF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA3KE,EAgLF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAhLE,EAqLF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GArLE,EA0LF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA1LE,EA+LF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA/LE,EAoMF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GApME,EAyMF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAzME,EA8MF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA9ME,EAmNF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAnNE,EAwNF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAxNE,EA6NF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA7NE,EAkOF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAlOE,EAuOF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAvOE,EA4OF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA5OE,EAiPF;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAjPE,EAsPF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAtPE,EA2PF;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GA3PE,EAgQF;AACIF,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAhQE,CADW;AAuQjBC,EAAAA,IAAI,EAAC,CACD;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIF,IAAAA,KAAK,EAAE,GAFX;AAGIG,IAAAA,SAAS,EAAE;AAHf,GADC,EAMD;AACID,IAAAA,EAAE,EAAE,CADR;AAEIF,IAAAA,KAAK,EAAE,GAFX;AAGIG,IAAAA,SAAS,EAAE;AAHf,GANC,EAWD;AACID,IAAAA,EAAE,EAAE,CADR;AAEIF,IAAAA,KAAK,EAAE,IAFX;AAGIG,IAAAA,SAAS,EAAE;AAHf,GAXC,EAgBD;AACID,IAAAA,EAAE,EAAE,CADR;AAEIF,IAAAA,KAAK,EAAE,IAFX;AAGIG,IAAAA,SAAS,EAAE;AAHf,GAhBC,EAqBD;AACID,IAAAA,EAAE,EAAE,CADR;AAEIF,IAAAA,KAAK,EAAE,KAFX;AAGIG,IAAAA,SAAS,EAAE;AAHf,GArBC,EA0BD;AACID,IAAAA,EAAE,EAAE,CADR;AAEIF,IAAAA,KAAK,EAAE,KAFX;AAGIG,IAAAA,SAAS,EAAE;AAHf,GA1BC;AAvQY,CAArB;AAySA,eAAe,SAASC,WAAT,GAAkD;AAAA,MAA7BC,KAA6B,uEAArBT,YAAqB;AAAA,MAAPU,MAAO;;AAC7D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,SAAL;AACI,UAAGY,MAAM,CAACE,UAAP,IAAqBC,SAAxB,EAAkC;AAC9B,iCACOJ,KADP;AAEIK,UAAAA,IAAI,EAAE;AACFF,YAAAA,UAAU,EAAE,EADV;AAEFG,YAAAA,aAAa,EAAE,CAFb;AAGFC,YAAAA,UAAU,EAAE,EAHV;AAIFC,YAAAA,aAAa,EAAE,CAJb;AAKFC,YAAAA,GAAG,EAAER,MAAM,CAACQ,GALV;AAMFC,YAAAA,IAAI,EAAET,MAAM,CAACS,IANX;AAOFC,YAAAA,QAAQ,EAAEV,MAAM,CAACR,IAPf;AAQFmB,YAAAA,MAAM,EAAEX,MAAM,CAACW;AARb;AAFV;AAaH,OAdD,MAcM;AACF,iCACOZ,KADP;AAEIK,UAAAA,IAAI,EAAE;AACFF,YAAAA,UAAU,EAAEF,MAAM,CAACE,UADjB;AAEFG,YAAAA,aAAa,EAAEL,MAAM,CAACK,aAFpB;AAGFC,YAAAA,UAAU,EAAEN,MAAM,CAACM,UAHjB;AAIFC,YAAAA,aAAa,EAAEP,MAAM,CAACO,aAJpB;AAKFC,YAAAA,GAAG,EAAER,MAAM,CAACQ,GALV;AAMFC,YAAAA,IAAI,EAAET,MAAM,CAACS,IANX;AAOFC,YAAAA,QAAQ,EAAEV,MAAM,CAACR,IAPf;AAQFmB,YAAAA,MAAM,EAAE,KARN;AASFC,YAAAA,QAAQ,EAAE,IATR;AAUFC,YAAAA,MAAM,EAAE;AAVN;AAFV;AAeH;;AACL,SAAKhC,cAAL;AACI,+BACOkB,KADP;AAEIK,QAAAA,IAAI,EAAE;AACFI,UAAAA,GAAG,EAAER,MAAM,CAACQ,GADV;AAEFC,UAAAA,IAAI,EAAET,MAAM,CAACS,IAFX;AAGFE,UAAAA,MAAM,EAAEX,MAAM,CAACW;AAHb;AAFV;;AAQJ,SAAKtB,WAAL;AACI,+BACOU,KADP;AAEIK,QAAAA,IAAI,EAAE;AACFO,UAAAA,MAAM,EAAEX,MAAM,CAACW,MADb;AAEFC,UAAAA,QAAQ,EAAEZ,MAAM,CAACY,QAFf;AAGFC,UAAAA,MAAM,EAAEb,MAAM,CAACa;AAHb;AAFV;;AAQJ,SAAK/B,YAAL;AACI,+BACOiB,KADP;AAEIK,QAAAA,IAAI,EAAE;AACFF,UAAAA,UAAU,EAAEF,MAAM,CAACE,UADjB;AAEFG,UAAAA,aAAa,EAAEL,MAAM,CAACK,aAFpB;AAGFC,UAAAA,UAAU,EAAEN,MAAM,CAACM,UAHjB;AAIFC,UAAAA,aAAa,EAAEP,MAAM,CAACO,aAJpB;AAKFI,UAAAA,MAAM,EAAE,KALN;AAMFC,UAAAA,QAAQ,EAAE,IANR;AAOFC,UAAAA,MAAM,EAAE;AAPN;AAFV;;AAYJ,SAAK9B,QAAL;AACI,+BACOgB,KADP;AAEIK,QAAAA,IAAI,EAAE;AACFC,UAAAA,aAAa,EAAEL,MAAM,CAACK,aADpB;AAEFE,UAAAA,aAAa,EAAEP,MAAM,CAACO,aAFpB;AAGFC,UAAAA,GAAG,EAAER,MAAM,CAACQ,GAHV;AAIFC,UAAAA,IAAI,EAAET,MAAM,CAACS,IAJX;AAKFP,UAAAA,UAAU,EAAEF,MAAM,CAACE,UALjB;AAMFI,UAAAA,UAAU,EAAEN,MAAM,CAACM,UANjB;AAOFM,UAAAA,QAAQ,EAAE,KAPR;AAQFC,UAAAA,MAAM,EAAE;AARN;AAFV;;AAaJ,SAAK7B,SAAL;AACI,+BACOe,KADP;AAEIK,QAAAA,IAAI,EAAE;AACFC,UAAAA,aAAa,EAAEL,MAAM,CAACK,aADpB;AAEFG,UAAAA,GAAG,EAAER,MAAM,CAACQ,GAFV;AAGFD,UAAAA,aAAa,EAAEP,MAAM,CAACO,aAHpB;AAIFL,UAAAA,UAAU,EAAEF,MAAM,CAACE,UAJjB;AAKFI,UAAAA,UAAU,EAAEN,MAAM,CAACM,UALjB;AAMFM,UAAAA,QAAQ,EAAE,KANR;AAOFC,UAAAA,MAAM,EAAE;AAPN;AAFV;;AAYJ,SAAK5B,SAAL;AACI,+BACOc,KADP;AAEIK,QAAAA,IAAI,EAAE;AACFC,UAAAA,aAAa,EAAEL,MAAM,CAACK,aADpB;AAEFE,UAAAA,aAAa,EAAEP,MAAM,CAACO,aAFpB;AAGFC,UAAAA,GAAG,EAAER,MAAM,CAACQ,GAHV;AAIFC,UAAAA,IAAI,EAAET,MAAM,CAACS,IAJX;AAKFP,UAAAA,UAAU,EAAEF,MAAM,CAACE,UALjB;AAMFI,UAAAA,UAAU,EAAEN,MAAM,CAACM,UANjB;AAOFM,UAAAA,QAAQ,EAAE,KAPR;AAQFC,UAAAA,MAAM,EAAE;AARN;AAFV;;AAaJ,SAAK3B,SAAL;AACI,+BACOa,KADP;AAEIK,QAAAA,IAAI,EAAE;AACFE,UAAAA,UAAU,EAAEN,MAAM,CAACM,UADjB;AAEFC,UAAAA,aAAa,EAAEP,MAAM,CAACO;AAFpB;AAFV;;AAOJ,SAAKpB,SAAL;AACI,+BACOY,KADP;AAEIK,QAAAA,IAAI,EAAE;AACFF,UAAAA,UAAU,EAAEF,MAAM,CAACE,UADjB;AAEFG,UAAAA,aAAa,EAAEL,MAAM,CAACK;AAFpB;AAFV;;AAOJ;AACI,aAAON,KAAP;AA1HR;AA4HH","sourcesContent":["import {FETCH_PLAY_START,\n        FETCH_MAKE_BET,\n        HAND_SUCCESS,\n        WIN_GAME,\n        LOSE_GAME,\n        DRAW_GAME,\n        DEAL_HAND,\n        PLAY_HAND,\n        DATA_USER,\n        ENOUGH_HAND} from '../actions/actionType'\n\nconst initialState = {\n    deck: [\n        {\n            name: 'Ace',\n            suit: 'Hearts',\n            value: 11\n        },\n        {\n            name: 'Two',\n            suit: 'Hearts',\n            value: 2\n        },\n        {\n            name: 'Three',\n            suit: 'Hearts',\n            value: 3\n        },\n        {\n            name: 'Four',\n            suit: 'Hearts',\n            value: 4\n        },\n        {\n            name: 'Five',\n            suit: 'Hearts',\n            value: 5\n        },\n        {\n            name: 'Six',\n            suit: 'Hearts',\n            value: 6\n        },\n        {\n            name: 'Seven',\n            suit: 'Hearts',\n            value: 7\n        },\n        {\n            name: 'Eight',\n            suit: 'Hearts',\n            value: 8\n        },\n        {\n            name: 'Nine',\n            suit: 'Hearts',\n            value: 9\n        },\n        {\n            name: 'Ten',\n            suit: 'Hearts',\n            value: 10\n        },\n        {\n            name: 'Jack',\n            suit: 'Hearts',\n            value: 10\n        },\n        {\n            name: 'Queen',\n            suit: 'Hearts',\n            value: 10\n        },\n        {\n            name: 'King',\n            suit: 'Hearts',\n            value: 10\n        },\n        {\n            name: 'Ace',\n            suit: 'Diamonds',\n            value: 11\n        },\n        {\n            name: 'Two',\n            suit: 'Diamonds',\n            value: 2\n        },\n        {\n            name: 'Three',\n            suit: 'Diamonds',\n            value: 3\n        },\n        {\n            name: 'Four',\n            suit: 'Diamonds',\n            value: 4\n        },\n        {\n            name: 'Five',\n            suit: 'Diamonds',\n            value: 5\n        },\n        {\n            name: 'Six',\n            suit: 'Diamonds',\n            value: 6\n        },\n        {\n            name: 'Seven',\n            suit: 'Diamonds',\n            value: 7\n        },\n        {\n            name: 'Eight',\n            suit: 'Diamonds',\n            value: 8\n        },\n        {\n            name: 'Nine',\n            suit: 'Diamonds',\n            value: 9\n        },\n        {\n            name: 'Ten',\n            suit: 'Diamonds',\n            value: 10\n        },\n        {\n            name: 'Jack',\n            suit: 'Diamonds',\n            value: 10\n        },\n        {\n            name: 'Queen',\n            suit: 'Diamonds',\n            value: 10\n        },\n        {\n            name: 'King',\n            suit: 'Diamonds',\n            value: 10\n        },\n        {\n            name: 'Ace',\n            suit: 'Clubs',\n            value: 11\n        },\n        {\n            name: 'Two',\n            suit: 'Clubs',\n            value: 2\n        },\n        {\n            name: 'Three',\n            suit: 'Clubs',\n            value: 3\n        },\n        {\n            name: 'Four',\n            suit: 'Clubs',\n            value: 4\n        },\n        {\n            name: 'Five',\n            suit: 'Clubs',\n            value: 5\n        },\n        {\n            name: 'Six',\n            suit: 'Clubs',\n            value: 6\n        },\n        {\n            name: 'Seven',\n            suit: 'Clubs',\n            value: 7\n        },\n        {\n            name: 'Eight',\n            suit: 'Clubs',\n            value: 8\n        },\n        {\n            name: 'Nine',\n            suit: 'Clubs',\n            value: 9\n        },\n        {\n            name: 'Ten',\n            suit: 'Clubs',\n            value: 10\n        },\n        {\n            name: 'Jack',\n            suit: 'Clubs',\n            value: 10\n        },\n        {\n            name: 'Queen',\n            suit: 'Clubs',\n            value: 10\n        },\n        {\n            name: 'King',\n            suit: 'Clubs',\n            value: 10\n        },\n        {\n            name: 'Ace',\n            suit: 'Spades',\n            value: 11\n        },\n        {\n            name: 'Two',\n            suit: 'Spades',\n            value: 2\n        },\n        {\n            name: 'Three',\n            suit: 'Spades',\n            value: 3\n        },\n        {\n            name: 'Four',\n            suit: 'Spades',\n            value: 4\n        },\n        {\n            name: 'Five',\n            suit: 'Spades',\n            value: 5\n        },\n        {\n            name: 'Six',\n            suit: 'Spades',\n            value: 6\n        },\n        {\n            name: 'Seven',\n            suit: 'Spades',\n            value: 7\n        },\n        {\n            name: 'Eight',\n            suit: 'Spades',\n            value: 8\n        },\n        {\n            name: 'Nine',\n            suit: 'Spades',\n            value: 9\n        },\n        {\n            name: 'Ten',\n            suit: 'Spades',\n            value: 10\n        },\n        {\n            name: 'Jack',\n            suit: 'Spades',\n            value: 10\n        },\n        {\n            name: 'Queen',\n            suit: 'Spades',\n            value: 10\n        },\n        {\n            name: 'King',\n            suit: 'Spades',\n            value: 10\n        }\n    ],\n    dibs:[\n        {\n            id: 1,\n            value: '1',\n            classView: 'blue'\n        },\n        {\n            id: 2,\n            value: '5',\n            classView: 'blue'\n        },\n        {\n            id: 3,\n            value: '25',\n            classView: 'yellow'\n        },\n        {\n            id: 4,\n            value: '50',\n            classView: 'yellow'\n        },\n        {\n            id: 5,\n            value: '100',\n            classView: 'red'\n        },\n        {\n            id: 6,\n            value: '200',\n            classView: 'red'\n        }\n    ]\n}\n\nexport default function playReducer(state = initialState, action){\n    switch(action.type){\n        case DATA_USER:\n            if(action.playerHand == undefined){\n                return{\n                    ...state,\n                    user: {\n                        playerHand: [],\n                        playerHandSum: 0,\n                        dealerHand: [],\n                        dealerHandSum: 0,\n                        bet: action.bet,\n                        cash: action.cash,\n                        nameUser: action.name,\n                        isPlay: action.isPlay\n                    }\n                }\n            } else{\n                return{\n                    ...state,\n                    user: {\n                        playerHand: action.playerHand,\n                        playerHandSum: action.playerHandSum,\n                        dealerHand: action.dealerHand,\n                        dealerHandSum: action.dealerHandSum,\n                        bet: action.bet,\n                        cash: action.cash,\n                        nameUser: action.name,\n                        isPlay: false,\n                        isEnough: true,\n                        isMore: true\n                    }\n                }\n            }\n        case FETCH_MAKE_BET:\n            return{\n                ...state, \n                user: {\n                    bet: action.bet, \n                    cash: action.cash,\n                    isPlay: action.isPlay\n                }\n            }\n        case ENOUGH_HAND:\n            return{\n                ...state,\n                user: {\n                    isPlay: action.isPlay,\n                    isEnough: action.isEnough,\n                    isMore: action.isMore\n                }\n            }\n        case HAND_SUCCESS:\n            return{\n                ...state,\n                user: {\n                    playerHand: action.playerHand,\n                    playerHandSum: action.playerHandSum,\n                    dealerHand: action.dealerHand,\n                    dealerHandSum: action.dealerHandSum,\n                    isPlay: false,\n                    isEnough: true,\n                    isMore: true\n                }\n            }\n        case WIN_GAME:\n            return{\n                ...state,\n                user: {\n                    playerHandSum: action.playerHandSum,\n                    dealerHandSum: action.dealerHandSum,\n                    bet: action.bet,\n                    cash: action.cash,\n                    playerHand: action.playerHand,\n                    dealerHand: action.dealerHand,\n                    isEnough: false,\n                    isMore: false\n                }\n            }\n        case LOSE_GAME:\n            return{\n                ...state,\n                user: {\n                    playerHandSum: action.playerHandSum,\n                    bet: action.bet,\n                    dealerHandSum: action.dealerHandSum,\n                    playerHand: action.playerHand,\n                    dealerHand: action.dealerHand,\n                    isEnough: false,\n                    isMore: false\n                }\n            }\n        case DRAW_GAME:\n            return{\n                ...state,\n                user: {\n                    playerHandSum: action.playerHandSum,\n                    dealerHandSum: action.dealerHandSum,\n                    bet: action.bet,\n                    cash: action.cash,\n                    playerHand: action.playerHand,\n                    dealerHand: action.dealerHand,\n                    isEnough: false,\n                    isMore: false\n                }\n            }\n        case DEAL_HAND:\n            return{\n                ...state,\n                user: {\n                    dealerHand: action.dealerHand,\n                    dealerHandSum: action.dealerHandSum\n                }\n            }\n        case PLAY_HAND:\n            return{\n                ...state,\n                user: {\n                    playerHand: action.playerHand,\n                    playerHandSum: action.playerHandSum\n                }\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}