{"ast":null,"code":"import { hubConnection } from 'signalr-no-jquery';\nexport var connection = hubConnection('http://localhost:3001'),\n    playHubProxy = connection.createHubProxy('playHub');\n\nfunction startConnection(params) {\n  connection.start().done(function () {\n    playHubProxy.invoke('connect', params);\n    console.log(params);\n  });\n}\n\nplayHubProxy.on('onConnected', function (profiles) {\n  console.log('Connected' + profiles); // setCount = profiles.length;\n  // this.setState({\n  //     users: profiles,\n  //     count: setCount\n  // });\n});\nplayHubProxy.on('onNewUserConnected', function (newUser) {\n  console.log('New user' + newUser); // var users = this.state.users;\n  // var index = users.indexOf(newUser);\n  // if(index == -1){\n  //     users.push(newUser);\n  //     setCount++;\n  // }\n  // this.setState({\n  //     users: users,\n  //     count: setCount\n  // });\n});\nplayHubProxy.on('onUserDisconnected', function (profile) {\n  if (connection != null) {\n    console.log('User disconnected' + profile); // setCount--;\n    // var users = this.state.users;\n    // for(var i = 0; i < users.length; i++){\n    //     if(users[i].id === profile.id){\n    //         users.splice(i, 1);\n    //         break;\n    //     }\n    // }     \n    // this.setState({\n    //     users: users,\n    //     count: setCount\n    // });\n  }\n});\nplayHubProxy.on('onUserReady', function (profile) {\n  console.log('User ready' + profile); // var users = this.state.users;\n  // for(var i = 0; i < users.length; i++){\n  //     if(users[i].id === profile.id){\n  //         users[i] = profile;\n  //         break;\n  //     }\n  // }\n  // this.setState({\n  //     users: users,\n  //     count: setCount\n  // });\n});\nplayHubProxy.on('onGameAccept', function (profile) {\n  console.log('Game accepted' + profile); // localStorage.setItem('enemyId', profile.id);\n  // this.readyState();\n  // //connection.stop();\n  // this.props.history.push('/play');\n});\nexport default startConnection;","map":{"version":3,"sources":["D:\\C#\\blackjack_WebAPI - new\\front-end\\src\\Hubs\\Hubs.js"],"names":["hubConnection","connection","playHubProxy","createHubProxy","startConnection","params","start","done","invoke","console","log","on","profiles","newUser","profile"],"mappings":"AAAA,SAASA,aAAT,QAA8B,mBAA9B;AAEA,OAAO,IAAIC,UAAU,GAAGD,aAAa,CAAC,uBAAD,CAA9B;AAAA,IAAyDE,YAAY,GAAGD,UAAU,CAACE,cAAX,CAA0B,SAA1B,CAAxE;;AAEP,SAASC,eAAT,CAAyBC,MAAzB,EAAgC;AAC5BJ,EAAAA,UAAU,CAACK,KAAX,GAAmBC,IAAnB,CAAwB,YAAU;AAC9BL,IAAAA,YAAY,CAACM,MAAb,CAAoB,SAApB,EAA+BH,MAA/B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACH,GAHD;AAIH;;AAEDH,YAAY,CAACS,EAAb,CAAgB,aAAhB,EAA+B,UAASC,QAAT,EAAkB;AAC7CH,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAcE,QAA1B,EAD6C,CAE7C;AACA;AACA;AACA;AACA;AACH,CAPD;AASAV,YAAY,CAACS,EAAb,CAAgB,oBAAhB,EAAsC,UAASE,OAAT,EAAiB;AACnDJ,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAaG,OAAzB,EADmD,CAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAZD;AAcAX,YAAY,CAACS,EAAb,CAAgB,oBAAhB,EAAsC,UAASG,OAAT,EAAiB;AACnD,MAAGb,UAAU,IAAI,IAAjB,EAAsB;AAClBQ,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBI,OAAlC,EADkB,CAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AACJ,CAhBD;AAkBAZ,YAAY,CAACS,EAAb,CAAgB,aAAhB,EAA+B,UAASG,OAAT,EAAiB;AAC5CL,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAeI,OAA3B,EAD4C,CAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAbD;AAeAZ,YAAY,CAACS,EAAb,CAAgB,cAAhB,EAAgC,UAASG,OAAT,EAAiB;AAC7CL,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBI,OAA9B,EAD6C,CAE7C;AACA;AACA;AACA;AACH,CAND;AAQA,eAAeV,eAAf","sourcesContent":["import { hubConnection } from 'signalr-no-jquery';\r\n\r\nexport var connection = hubConnection('http://localhost:3001'), playHubProxy = connection.createHubProxy('playHub');\r\n\r\nfunction startConnection(params){\r\n    connection.start().done(function(){\r\n        playHubProxy.invoke('connect', params);\r\n        console.log(params);\r\n    });\r\n}\r\n\r\nplayHubProxy.on('onConnected', function(profiles){\r\n    console.log('Connected' + profiles);\r\n    // setCount = profiles.length;\r\n    // this.setState({\r\n    //     users: profiles,\r\n    //     count: setCount\r\n    // });\r\n});\r\n\r\nplayHubProxy.on('onNewUserConnected', function(newUser){\r\n    console.log('New user' + newUser)\r\n    // var users = this.state.users;\r\n    // var index = users.indexOf(newUser);\r\n    // if(index == -1){\r\n    //     users.push(newUser);\r\n    //     setCount++;\r\n    // }\r\n    // this.setState({\r\n    //     users: users,\r\n    //     count: setCount\r\n    // });\r\n});\r\n\r\nplayHubProxy.on('onUserDisconnected', function(profile){\r\n    if(connection != null){\r\n        console.log('User disconnected' + profile)\r\n        // setCount--;\r\n        // var users = this.state.users;\r\n        // for(var i = 0; i < users.length; i++){\r\n        //     if(users[i].id === profile.id){\r\n        //         users.splice(i, 1);\r\n        //         break;\r\n        //     }\r\n        // }     \r\n        // this.setState({\r\n        //     users: users,\r\n        //     count: setCount\r\n        // });\r\n    }\r\n});\r\n\r\nplayHubProxy.on('onUserReady', function(profile){\r\n    console.log('User ready' + profile);\r\n    // var users = this.state.users;\r\n    // for(var i = 0; i < users.length; i++){\r\n    //     if(users[i].id === profile.id){\r\n    //         users[i] = profile;\r\n    //         break;\r\n    //     }\r\n    // }\r\n    // this.setState({\r\n    //     users: users,\r\n    //     count: setCount\r\n    // });\r\n});\r\n\r\nplayHubProxy.on('onGameAccept', function(profile){\r\n    console.log('Game accepted' + profile);\r\n    // localStorage.setItem('enemyId', profile.id);\r\n    // this.readyState();\r\n    // //connection.stop();\r\n    // this.props.history.push('/play');\r\n});\r\n\r\nexport default startConnection"]},"metadata":{},"sourceType":"module"}