{"ast":null,"code":"import _classCallCheck from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\C#\\\\blackjack_WebAPI - new\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport { Component } from 'react';\nimport { history } from '../store/history';\nimport { hubConnection } from 'signalr-no-jquery';\nimport { connect } from 'react-redux';\nimport { scrollDown } from '../components/UI/Chat/Chat';\nimport { onGameStart as _onGameStart, onBet as _onBet, onMessage as _onMessage, onTimer as _onTimer } from '../store/actions/playTable';\nexport var connection = hubConnection('http://localhost:3001'),\n    playHubProxy = connection.createHubProxy('playHub');\n\nvar PlayConnection =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlayConnection, _Component);\n\n  function PlayConnection() {\n    _classCallCheck(this, PlayConnection);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PlayConnection).apply(this, arguments));\n  }\n\n  _createClass(PlayConnection, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var userId = localStorage.getItem('userId');\n      var enemyId = localStorage.getItem('enemyId');\n      playHubProxy.on('onGameStart', function (user, enemy, messages, firstId) {\n        this.props.onGameStart(user, enemy, messages);\n        scrollDown();\n      }.bind(this));\n      playHubProxy.on('onEnemyBet', function (enemy, dibsBet) {\n        var tmp = document.createElement('div');\n        tmp.innerHTML = dibsBet;\n        document.getElementById('enemyDibsBet').appendChild(tmp);\n        this.setState({\n          enemyCash: enemy.cash,\n          enemyBet: enemy.bet\n        });\n      }.bind(this));\n      playHubProxy.on('onBet', function (user) {\n        this.props.onBet(user);\n      }.bind(this));\n      playHubProxy.on('onStopGame', function () {\n        history.push('/profile');\n      }.bind(this));\n      playHubProxy.on('onMessage', function (message) {\n        this.props.onMessage(message);\n        scrollDown();\n      }.bind(this));\n      playHubProxy.on('onPlayOffer', function (userId) {\n        if (this.state.bet == this.state.enemyBet && this.state.bet > 0 && this.state.firstBet) {\n          this.setState({\n            isBet: false,\n            firstBet: false,\n            enableBet: false\n          });\n          this.props.onPlayWithUserHandler();\n        } else if (userId == localStorage.getItem('userId')) {\n          this.setState({\n            enableBet: false,\n            isRaise: false,\n            isCheck: false,\n            isFold: false\n          });\n        } else {\n          this.setState({\n            enableBet: true,\n            isFold: true,\n            isCheck: this.state.enemyBet > 0\n          });\n        }\n      }.bind(this));\n      playHubProxy.on('onTimer', function (time) {\n        this.setState({\n          time: time\n        });\n      }.bind(this));\n\n      if (enemyId != -1) {\n        connection.start().done(function () {\n          console.log('start game');\n          playHubProxy.invoke('gameStart', userId);\n        }.bind(this));\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      playHubProxy.off('onGameStart');\n      playHubProxy.off('onEnemyBet');\n      playHubProxy.off('onBet');\n      playHubProxy.off('onStopGame');\n      playHubProxy.off('onMessage');\n      playHubProxy.off('onPlayOffer');\n      playHubProxy.off('onTimer');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return PlayConnection;\n}(Component);\n\nfunction mapStateToProps(state) {\n  var user = state.playTable.user;\n  return {\n    user: user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onGameStart: function onGameStart(user, enemy, messages) {\n      return dispatch(_onGameStart(user, enemy, messages));\n    },\n    onMessage: function onMessage(message) {\n      return dispatch(_onMessage(message));\n    },\n    onBet: function onBet(user) {\n      return dispatch(_onBet(user));\n    },\n    onTimer: function onTimer(time) {\n      return dispatch(_onTimer(time));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayConnection);","map":{"version":3,"sources":["D:\\C#\\blackjack_WebAPI - new\\front-end\\src\\Hubs\\PlayTableHub.js"],"names":["Component","history","hubConnection","connect","scrollDown","onGameStart","onBet","onMessage","onTimer","connection","playHubProxy","createHubProxy","PlayConnection","userId","localStorage","getItem","enemyId","on","user","enemy","messages","firstId","props","bind","dibsBet","tmp","document","createElement","innerHTML","getElementById","appendChild","setState","enemyCash","cash","enemyBet","bet","push","message","state","firstBet","isBet","enableBet","onPlayWithUserHandler","isRaise","isCheck","isFold","time","start","done","console","log","invoke","off","mapStateToProps","playTable","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { Component } from 'react'\r\n\r\nimport { history } from '../store/history'\r\n\r\nimport { hubConnection } from 'signalr-no-jquery';\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { scrollDown } from '../components/UI/Chat/Chat'\r\n\r\nimport { onGameStart,\r\n        onBet,\r\n        onMessage,\r\n        onTimer } from '../store/actions/playTable'\r\n\r\nexport const connection = hubConnection('http://localhost:3001'), playHubProxy = connection.createHubProxy('playHub');\r\n\r\nclass PlayConnection extends Component{\r\n    componentDidMount(){\r\n        const userId = localStorage.getItem('userId');\r\n        const enemyId = localStorage.getItem('enemyId');\r\n\r\n        playHubProxy.on('onGameStart', function(user, enemy, messages, firstId){\r\n            this.props.onGameStart(user,enemy,messages);\r\n            scrollDown();\r\n        }.bind(this));\r\n\r\n        playHubProxy.on('onEnemyBet', function(enemy, dibsBet){\r\n            var tmp = document.createElement('div');\r\n            tmp.innerHTML = dibsBet;\r\n            document.getElementById('enemyDibsBet').appendChild(tmp);\r\n            this.setState({\r\n                enemyCash: enemy.cash,\r\n                enemyBet: enemy.bet\r\n            });\r\n        }.bind(this));\r\n\r\n        playHubProxy.on('onBet', function(user){                  \r\n            this.props.onBet(user);\r\n        }.bind(this));\r\n\r\n        playHubProxy.on('onStopGame', function(){\r\n            history.push('/profile');\r\n        }.bind(this));\r\n\r\n        playHubProxy.on('onMessage', function(message){\r\n            this.props.onMessage(message);\r\n            scrollDown();\r\n        }.bind(this));\r\n\r\n        playHubProxy.on('onPlayOffer', function(userId){\r\n            if(this.state.bet == this.state.enemyBet && this.state.bet > 0 && this.state.firstBet){\r\n                this.setState({\r\n                    isBet: false,\r\n                    firstBet: false,\r\n                    enableBet: false\r\n                });\r\n                this.props.onPlayWithUserHandler();\r\n            } else if(userId == localStorage.getItem('userId')){\r\n                this.setState({\r\n                    enableBet: false,\r\n                    isRaise: false,\r\n                    isCheck: false,\r\n                    isFold: false\r\n                });\r\n            } else{\r\n                this.setState({\r\n                    enableBet: true,\r\n                    isFold: true,\r\n                    isCheck: this.state.enemyBet > 0\r\n                });\r\n            }\r\n        }.bind(this));\r\n\r\n        playHubProxy.on('onTimer', function(time){\r\n            this.setState({\r\n                time: time\r\n            });\r\n        }.bind(this));            \r\n\r\n        if(enemyId != -1){\r\n            connection.start().done(function(){\r\n                console.log('start game');\r\n                playHubProxy.invoke('gameStart', userId);\r\n            }.bind(this));\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        playHubProxy.off('onGameStart');\r\n        playHubProxy.off('onEnemyBet');\r\n        playHubProxy.off('onBet');\r\n        playHubProxy.off('onStopGame');\r\n        playHubProxy.off('onMessage');\r\n        playHubProxy.off('onPlayOffer');\r\n        playHubProxy.off('onTimer');\r\n    }\r\n\r\n    render(){\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { user } = state.playTable;\r\n    return {\r\n        user\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return{\r\n        onGameStart: (user, enemy, messages) => dispatch(onGameStart(user, enemy, messages)),\r\n        onMessage: (message) => dispatch(onMessage(message)),\r\n        onBet: (user) => dispatch(onBet(user)),\r\n        onTimer: (time) => dispatch(onTimer(time))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayConnection)"]},"metadata":{},"sourceType":"module"}